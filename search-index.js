crystal_doc_search_index_callback({"repository_name":"lucky","body":"[![github banner-short](https://user-images.githubusercontent.com/22394/26989908-dd99cc2c-4d22-11e7-9576-c6aeada2bd63.png)](http://luckyframework.org)\n\n[![Version](https://img.shields.io/github/tag/luckyframework/lucky.svg?maxAge=360&label=version)](https://github.com/luckyframework/lucky/releases/latest)\n[![License](https://img.shields.io/github/license/luckyframework/lucky.svg)](https://github.com/luckyframework/lucky/blob/main/LICENSE)\n\n[![API Documentation Website](https://img.shields.io/website?down_color=red&down_message=Offline&label=API%20Documentation&up_message=Online&url=https%3A%2F%2Fluckyframework.github.io%2Flucky%2F)](https://luckyframework.github.io/lucky)\n[![Lucky Guides Website](https://img.shields.io/website?down_color=red&down_message=Offline&label=Lucky%20Guides&up_message=Online&url=https%3A%2F%2Fluckyframework.org%2Fguides)](https://luckyframework.org/guides)\n\n[![Discord](https://img.shields.io/discord/743896265057632256)](https://discord.gg/HeqJUcb)\n\nThe goal: prevent bugs, forget about most performance issues, and spend more\ntime on code instead of debugging and fixing tests.\n\nIn summary, make writing stunning web applications fast, fun, and easy.\n\n## Coming from Rails?\n\n- [Ruby on Rails to Lucky on Crystal: Blazing fast, fewer bugs, and even more fun.\n  ](https://hackernoon.com/ruby-on-rails-to-lucky-on-crystal-blazing-fast-fewer-bugs-and-even-more-fun-104010913fec)\n\n## Try Lucky\n\nLucky has a [fresh new set of guides](https://luckyframework.org/guides/) that\nmake it easy to get started.\n\nFeel free to say hi or ask questions on our\n[chat room](https://luckyframework.org/chat).\n\nOr you can copy a real working app with [Lucky JumpStart](https://github.com/stephendolan/lucky_jumpstart/).\n\n## Installing Lucky\n\nTo install Lucky, read the [Installing Lucky](https://luckyframework.org/guides/getting-started/installing) guides for your Operating System.\nThe guide will walk you through installing a command-line utility used for generating new Lucky applications.\n\n## Keep up-to-date\n\nKeep up to date by following [@luckyframework](https://twitter.com/luckyframework) on Twitter.\n\n## Documentation\n\n[API (main)](https://luckyframework.github.io/lucky/)\n\n## What's it look like?\n\n### JSON endpoint:\n\n```crystal\nclass Api::Users::Show < ApiAction\n  get \"/api/users/:user_id\" do\n    user = UserQuery.find(user_id)\n    json UserSerializer.new(user)\n  end\nend\n```\n\n- If you want you can set up custom routes like `get \"/sign_in\"` for non REST routes.\n- A `user_id` method is generated because there is a `user_id` route parameter.\n- Use `json` to render JSON. [Extract\n  serializers](https://luckyframework.org/guides/writing-json-apis/#respond-with-json)\n  for reusable JSON responses.\n\n### Database models\n\n```crystal\n# Set up the model\nclass User < BaseModel\n  table do\n    column last_active_at : Time\n    column last_name : String\n    column nickname : String?\n  end\nend\n```\n\n- Sets up the columns that you’d like to use, along with their types\n- You can add `?` to the type when the column can be `nil` . Crystal will then\n  help you remember not to call methods on it that won't work.\n- Lucky will set up presence validations for required fields\n  (`last_active_at` and `last_name` since they are not marked as nilable).\n\n### Querying the database\n\n```crystal\n# Add some methods to help query the database\nclass UserQuery < User::BaseQuery\n  def recently_active\n    last_active_at.gt(1.week.ago)\n  end\n\n  def sorted_by_last_name\n    last_name.lower.desc_order\n  end\nend\n\n# Query the database\nUserQuery.new.recently_active.sorted_by_last_name\n```\n\n- `User::BaseQuery` is automatically generated when you define a model. Inherit\n  from it to customize queries.\n- Set up named scopes with instance methods.\n- Lucky sets up methods for all the columns so that if you mistype a column\n  name it will tell you at compile-time.\n- Use the `lower` method on a `String` column to make sure Postgres sorts\n  everything in lowercase.\n- Use `gt` to get users last active greater than 1 week ago. Lucky has lots\n  of powerful abstractions for creating complex queries, and type specific\n  methods (like `lower`).\n\n### Rendering HTML:\n\n```crystal\nclass Users::Index < BrowserAction\n  get \"/users\" do\n    users = UserQuery.new.sorted_by_last_name\n    render IndexPage, users: users\n  end\nend\n\nclass Users::IndexPage < MainLayout\n  needs users : UserQuery\n\n  def content\n    render_new_user_button\n    render_user_list\n  end\n\n  private def render_new_user_button\n    link \"New User\", to: Users::New\n  end\n\n  private def render_user_list\n    ul class: \"user-list\" do\n      users.each do |user|\n        li do\n          link user.name, to: Users::Show.with(user.id)\n          text \" - \"\n          text user.nickname || \"No Nickname\"\n        end\n      end\n    end\n  end\nend\n```\n\n- `needs users : UserQuery` tells the compiler that it must be passed users\n  of the type `UserQuery`.\n- If you forget to pass something that a page needs, it will let you know at\n  compile time. **Fewer bugs and faster debugging**.\n- Write tags with Crystal methods. Tags are automatically closed and\n  whitespace is removed.\n- Easily extract named methods since pages are made of regular classes and\n  methods. **This makes your HTML pages incredibly easy to read.**\n- Link to other pages with ease. Just use the action name: `Users::New`. Pass\n  params using `with`: `Users::Show.with(user.id)`. No more trying to remember path\n  helpers and whether the helper is pluralized or not - If you forget to pass a\n  param to a route, Lucky will let you know at compile-time.\n- Since we defined `column nickname : String?` as nilable, Lucky would fail\n  to compile the page if you just did `text user.nickname` since it disallows\n  printing `nil`. So instead we add a fallback `\"No Nickname\"`. **No more\n  accidentally printing empty text in HTML!**\n\n## Testing\n\nYou need to make sure to install the Crystal dependencies.\n\n1. Run `shards install`\n1. Run `crystal spec` from the project root.\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n### Lucky to have you!\n\nWe love all of the community members that have put in hard work to make Lucky better.\nIf you're one of those people, we want to give you a t-shirt!\n\nTo get a shirt, we ask that you have made a significant contribution to Lucky.\nThis includes things like submitting PRs with bug fixes and feature implementations, helping other members\nwork through problems, and deploying real world applications using Lucky!\n\nTo claim your shirt, [fill in this form](https://forms.gle/w3PJ4pww8WDAuJov5).\n\n## Contributors\n\n[paulcsmith](https://github.com/paulcsmith) Paul Smith - Original Creator of Lucky\n\n<a href=\"https://github.com/luckyframework/lucky/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=luckyframework/lucky\" />\n</a>\n\nMade with [contrib.rocks](https://contrib.rocks).\n\n## Thanks & attributions\n\n- SessionHandler, CookieHandler and FlashHandler are based on [Amber](https://github.com/amberframework/amber). Thank you to the Amber team!\n- Thanks to Rails for inspiring many of the ideas that are easy to take for\n  granted. Convention over configuration, removing boilerplate, and most\n  importantly - focusing on developer happiness.\n- Thanks to Phoenix, Ecto and Elixir for inspiring Avram's save operations,\n  Lucky's single base actions and pipes, and focusing on helpful error\n  messages.\n- `lucky watch` based heavily on [Sentry](https://github.com/samueleaton/sentry). Thanks [@samueleaton](https://github.com/samueleaton)!\n","program":{"html_id":"lucky/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"lucky","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"lucky/Bool","path":"Bool.html","kind":"struct","full_name":"Bool","name":"Bool","abstract":false,"superclass":{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"lucky/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"},{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/charms/bool_extensions.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/bool_extensions.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"}],"doc":"Bool has only two possible values: `true` and `false`. They are constructed using these literals:\n\n```\ntrue  # A Bool that is true\nfalse # A Bool that is false\n```\n\nSee [`Bool` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/bool.html) in the language reference.","summary":"<p>Bool has only two possible values: <code>true</code> and <code>false</code>.</p>"},{"html_id":"lucky/Char","path":"Char.html","kind":"struct","full_name":"Char","name":"Char","abstract":false,"superclass":{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"lucky/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"lucky/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/charms/object.cr","line_number":18,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/object.cr#L18"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lucky/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"}],"doc":"A `Char` represents a [Unicode](http://en.wikipedia.org/wiki/Unicode) [code point](http://en.wikipedia.org/wiki/Code_point).\nIt occupies 32 bits.\n\nIt is created by enclosing an UTF-8 character in single quotes.\n\n```\n'a'\n'z'\n'0'\n'_'\n'あ'\n```\n\nYou can use a backslash to denote some characters:\n\n```\n'\\'' # single quote\n'\\\\' # backslash\n'\\e' # escape\n'\\f' # form feed\n'\\n' # newline\n'\\r' # carriage return\n'\\t' # tab\n'\\v' # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n'\\u0041' # == 'A'\n```\n\nOr you can use curly braces and specify up to four hexadecimal numbers:\n\n```\n'\\u{41}' # == 'A'\n```\n\nSee [`Char` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/char.html) in the language reference.","summary":"<p>A <code><a href=\"Char.html\">Char</a></code> represents a <a href=\"http://en.wikipedia.org/wiki/Unicode\">Unicode</a> <a href=\"http://en.wikipedia.org/wiki/Code_point\">code point</a>.</p>","instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","abstract":false,"location":{"filename":"src/charms/object.cr","line_number":19,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/object.cr#L19"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":"case ord\nwhen 9, 10, 11, 12, 13, 32, 133, 160, 5760, 6158, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288\n  true\nelse\n  false\nend"},"external_var":false}]},{"html_id":"lucky/Hash","path":"Hash.html","kind":"class","full_name":"Hash(K, V)","name":"Hash","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"lucky/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/charms/hash_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/hash_extensions.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lucky/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"doc":"A `Hash` represents a collection of key-value mappings, similar to a dictionary.\n\nMain operations are storing a key-value mapping (`#[]=`) and\nquerying the value associated to a key (`#[]`). Key-value mappings can also be\ndeleted (`#delete`).\nKeys are unique within a hash. When adding a key-value mapping with a key that\nis already in use, the old value will be forgotten.\n\n```\n# Create a new Hash for mapping String to Int32\nhash = Hash(String, Int32).new\nhash[\"one\"] = 1\nhash[\"two\"] = 2\nhash[\"one\"] # => 1\n```\n\n[Hash literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/hash.html)\ncan also be used to create a `Hash`:\n\n```\n{\"one\" => 1, \"two\" => 2}\n```\n\nImplementation is based on an open hash table.\nTwo objects refer to the same hash key when their hash value (`Object#hash`)\nis identical and both objects are equal to each other (`Object#==`).\n\nEnumeration follows the order that the corresponding keys were inserted.\n\nNOTE: When using mutable data types as keys, changing the value of a key after\nit was inserted into the `Hash` may lead to undefined behaviour. This can be\nrestored by re-indexing the hash with `#rehash`.","summary":"<p>A <code><a href=\"Hash.html\">Hash</a></code> represents a collection of key-value mappings, similar to a dictionary.</p>","instance_methods":[{"html_id":"get(key:String|Symbol):V|Nil-instance-method","name":"get","doc":"Return the **nilable** value of a hash key\n\nThis returns a value stored in a hash. The key can be specified as a String\nor Symbol. Internally this works by converting Symbols to Strings. See the\ncode below for an example. It returns `nil` if the value doesn't exist:\n\n```\nhash = {\"name\" => \"Karin\"}\nhash.get(:name)  # => \"Karin\" : (String | Nil)\nhash.get(\"name\") # => \"Karin\" : (String | Nil)\nhash.get(:asdf)  # => nil : (String | Nil)\n```","summary":"<p>Return the <strong>nilable</strong> value of a hash key</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : V | Nil","args_html":"(key : <a href=\"String.html\">String</a> | Symbol) : V | <a href=\"Nil.html\">Nil</a>","location":{"filename":"src/charms/hash_extensions.cr","line_number":14,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/hash_extensions.cr#L14"},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"V | ::Nil","visibility":"Public","body":"self[key.to_s]?"},"external_var":false},{"html_id":"get!(key:String|Symbol):V-instance-method","name":"get!","doc":"Return the value of a hash key\n\nThis returns a value stored in a hash. The key can be specified as a String\nor Symbol. Internally this works by converting Symbols to Strings. See the\ncode below for an example. It throws a `KeyError` if the value doesn't\nexist:\n\n```\nhash = {\"name\" => \"Karin\"}\nhash.get(:name)  # => \"Karin\" : String\nhash.get(\"name\") # => \"Karin\" : String\nhash.get(:asdf)  # => KeyError\n```","summary":"<p>Return the value of a hash key</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : V","args_html":"(key : <a href=\"String.html\">String</a> | Symbol) : V","location":{"filename":"src/charms/hash_extensions.cr","line_number":31,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/hash_extensions.cr#L31"},"def":{"name":"get!","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"V","visibility":"Public","body":"self[key.to_s]"},"external_var":false}]},{"html_id":"lucky/Int16","path":"Int16.html","kind":"struct","full_name":"Int16","name":"Int16","abstract":false,"superclass":{"html_id":"lucky/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"lucky/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"},{"html_id":"lucky/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"lucky/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"lucky/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"lucky/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/charms/int16_extensions.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/int16_extensions.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"}],"instance_methods":[{"html_id":"to_param:String-instance-method","name":"to_param","abstract":false,"location":{"filename":"src/charms/int16_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/int16_extensions.cr#L6"},"def":{"name":"to_param","return_type":"String","visibility":"Public","body":"self.to_s"},"external_var":false}]},{"html_id":"lucky/Int32","path":"Int32.html","kind":"struct","full_name":"Int32","name":"Int32","abstract":false,"superclass":{"html_id":"lucky/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"lucky/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"},{"html_id":"lucky/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"lucky/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"lucky/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"lucky/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/charms/int32_extensions.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/int32_extensions.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"}],"instance_methods":[{"html_id":"to_param:String-instance-method","name":"to_param","abstract":false,"location":{"filename":"src/charms/int32_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/int32_extensions.cr#L6"},"def":{"name":"to_param","return_type":"String","visibility":"Public","body":"self.to_s"},"external_var":false}]},{"html_id":"lucky/Int64","path":"Int64.html","kind":"struct","full_name":"Int64","name":"Int64","abstract":false,"superclass":{"html_id":"lucky/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"lucky/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"},{"html_id":"lucky/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"lucky/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"lucky/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"lucky/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/charms/int64_extensions.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/int64_extensions.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"}],"instance_methods":[{"html_id":"to_param:String-instance-method","name":"to_param","abstract":false,"location":{"filename":"src/charms/int64_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/int64_extensions.cr#L6"},"def":{"name":"to_param","return_type":"String","visibility":"Public","body":"self.to_s"},"external_var":false}]},{"html_id":"lucky/Lucky","path":"Lucky.html","kind":"module","full_name":"Lucky","name":"Lucky","abstract":false,"locations":[{"filename":"src/lucky.cr","line_number":26,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky.cr#L26"},{"filename":"src/lucky/errors.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L1"},{"filename":"src/lucky/memoizable.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/memoizable.cr#L1"},{"filename":"src/lucky/secure_headers/disable_floc.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/disable_floc.cr#L1"},{"filename":"src/lucky/secure_headers/set_csp_guard.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_csp_guard.cr#L1"},{"filename":"src/lucky/secure_headers/set_frame_guard.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_frame_guard.cr#L1"},{"filename":"src/lucky/secure_headers/set_sniff_guard.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_sniff_guard.cr#L1"},{"filename":"src/lucky/secure_headers/set_xss_guard.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_xss_guard.cr#L1"},{"filename":"src/lucky/support/message_encryptor.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_encryptor.cr#L5"},{"filename":"src/lucky/support/message_verifier.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_verifier.cr#L4"},{"filename":"src/lucky/version.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/version.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ContinuedPipeLog","name":"ContinuedPipeLog","value":"Log.for(\"continued_pipe_log\")"},{"id":"Log","name":"Log","value":"::Log.for(\"lucky\")"},{"id":"ROUTER","name":"ROUTER","value":"Lucky::Router.new"},{"id":"VERSION","name":"VERSION","value":"\"1.4.0\""}],"class_methods":[{"html_id":"root-class-method","name":"root","doc":"Use Dir.current to return the root folder of your Lucky application.\n\nIn some frameworks there is a method called `root` that returns the root directory of the project.\nIn Crystal there is a built-in method for this: `Dir.current`. This method exists purely to help new users\nfind `Dir.current`. If you call `Lucky.root` it will raise a compile-time error directing you to use `Dir.current`","summary":"<p>Use Dir.current to return the root folder of your Lucky application.</p>","abstract":false,"location":{"filename":"src/lucky.cr","line_number":37,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky.cr#L37"},"def":{"name":"root","visibility":"Public","body":"{% raise(\"Please use Crystal's 'Dir.current' to return the root folder of your Lucky application.\") %}"},"external_var":false},{"html_id":"router:Lucky::Router-class-method","name":"router","abstract":false,"location":{"filename":"src/lucky.cr","line_number":41,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky.cr#L41"},"def":{"name":"router","return_type":"Lucky::Router","visibility":"Public","body":"ROUTER"},"external_var":false}],"macros":[{"html_id":"set_version-macro","name":"set_version","abstract":false,"location":{"filename":"src/lucky/version.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/version.cr#L2"},"def":{"name":"set_version","visibility":"Public","body":"    VERSION = \n{{ (`shards version \\\"/home/runner/work/lucky/lucky/src/lucky\\\"`).chomp.stringify.downcase }}\n\n  \n"}}],"types":[{"html_id":"lucky/Lucky/Action","path":"Lucky/Action.html","kind":"class","full_name":"Lucky::Action","name":"Action","abstract":true,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Lucky/VerifyAcceptsFormat","kind":"module","full_name":"Lucky::VerifyAcceptsFormat","name":"VerifyAcceptsFormat"},{"html_id":"lucky/Lucky/Redirectable","kind":"module","full_name":"Lucky::Redirectable","name":"Redirectable"},{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Lucky/ActionPipes","kind":"module","full_name":"Lucky::ActionPipes","name":"ActionPipes"},{"html_id":"lucky/Lucky/ParamHelpers","kind":"module","full_name":"Lucky::ParamHelpers","name":"ParamHelpers"},{"html_id":"lucky/Lucky/Renderable","kind":"module","full_name":"Lucky::Renderable","name":"Renderable"},{"html_id":"lucky/Lucky/Routable","kind":"module","full_name":"Lucky::Routable","name":"Routable"},{"html_id":"lucky/Lucky/Exposable","kind":"module","full_name":"Lucky::Exposable","name":"Exposable"},{"html_id":"lucky/Lucky/RequestTypeHelpers","kind":"module","full_name":"Lucky::RequestTypeHelpers","name":"RequestTypeHelpers"},{"html_id":"lucky/Lucky/ActionDelegates","kind":"module","full_name":"Lucky::ActionDelegates","name":"ActionDelegates"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/action.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/action.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"AFTER_PIPES","name":"AFTER_PIPES","value":"[] of Symbol"},{"id":"BEFORE_PIPES","name":"BEFORE_PIPES","value":"[verify_accepted_format] of Symbol"},{"id":"EXPOSURES","name":"EXPOSURES","value":"[] of Symbol"},{"id":"PARAM_DECLARATIONS","name":"PARAM_DECLARATIONS","value":"[] of Crystal::Macros::TypeDeclaration"},{"id":"ROUTE_SETTINGS","name":"ROUTE_SETTINGS","value":"{prefix: \"\"}"},{"id":"SKIPPED_PIPES","name":"SKIPPED_PIPES","value":"[] of Symbol"}],"included_modules":[{"html_id":"lucky/Lucky/ActionDelegates","kind":"module","full_name":"Lucky::ActionDelegates","name":"ActionDelegates"},{"html_id":"lucky/Lucky/ActionPipes","kind":"module","full_name":"Lucky::ActionPipes","name":"ActionPipes"},{"html_id":"lucky/Lucky/Exposable","kind":"module","full_name":"Lucky::Exposable","name":"Exposable"},{"html_id":"lucky/Lucky/ParamHelpers","kind":"module","full_name":"Lucky::ParamHelpers","name":"ParamHelpers"},{"html_id":"lucky/Lucky/Redirectable","kind":"module","full_name":"Lucky::Redirectable","name":"Redirectable"},{"html_id":"lucky/Lucky/Renderable","kind":"module","full_name":"Lucky::Renderable","name":"Renderable"},{"html_id":"lucky/Lucky/RequestTypeHelpers","kind":"module","full_name":"Lucky::RequestTypeHelpers","name":"RequestTypeHelpers"},{"html_id":"lucky/Lucky/Routable","kind":"module","full_name":"Lucky::Routable","name":"Routable"},{"html_id":"lucky/Lucky/VerifyAcceptsFormat","kind":"module","full_name":"Lucky::VerifyAcceptsFormat","name":"VerifyAcceptsFormat"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"class_methods":[{"html_id":"_accepted_formats:Array(Symbol)-class-method","name":"_accepted_formats","abstract":false,"location":{"filename":"src/lucky/action.cr","line_number":21,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/action.cr#L21"},"def":{"name":"_accepted_formats","return_type":"Array(Symbol)","visibility":"Public","body":"[] of Symbol"},"external_var":false},{"html_id":"query_param_declarations:Array(String)-class-method","name":"query_param_declarations","abstract":false,"def":{"name":"query_param_declarations","return_type":"Array(String)","visibility":"Public","body":"@@query_param_declarations"},"external_var":false}],"constructors":[{"html_id":"new(context:HTTP::Server::Context,route_params:Hash(String,String))-class-method","name":"new","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"route_params","external_name":"route_params","restriction":"Hash(String, String)"}],"args_string":"(context : HTTP::Server::Context, route_params : Hash(String, String))","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>, route_params : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/lucky/action.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/action.cr#L7"},"def":{"name":"new","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"route_params","external_name":"route_params","restriction":"Hash(String, String)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(context, route_params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"call-instance-method","name":"call","abstract":true,"location":{"filename":"src/lucky/action.cr","line_number":11,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/action.cr#L11"},"def":{"name":"call","visibility":"Public","body":""},"external_var":false},{"html_id":"context:HTTP::Server::Context-instance-method","name":"context","abstract":false,"location":{"filename":"src/lucky/action.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/action.cr#L4"},"def":{"name":"context","return_type":"HTTP::Server::Context","visibility":"Public","body":"@context"},"external_var":false},{"html_id":"cookies(*args,**options)-instance-method","name":"cookies","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"cookies","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"context.cookies(*args, **options)"},"external_var":false},{"html_id":"cookies(*args,**options,&)-instance-method","name":"cookies","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"cookies","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"context.cookies(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"flash(*args,**options)-instance-method","name":"flash","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"flash","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"context.flash(*args, **options)"},"external_var":false},{"html_id":"flash(*args,**options,&)-instance-method","name":"flash","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"flash","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"context.flash(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"request(*args,**options)-instance-method","name":"request","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"request","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"context.request(*args, **options)"},"external_var":false},{"html_id":"request(*args,**options,&)-instance-method","name":"request","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"request","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"context.request(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"response(*args,**options)-instance-method","name":"response","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"response","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"context.response(*args, **options)"},"external_var":false},{"html_id":"response(*args,**options,&)-instance-method","name":"response","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"response","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"context.response(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"route_params:Hash(String,String)-instance-method","name":"route_params","abstract":false,"location":{"filename":"src/lucky/action.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/action.cr#L5"},"def":{"name":"route_params","return_type":"Hash(String, String)","visibility":"Public","body":"@route_params"},"external_var":false},{"html_id":"session(*args,**options)-instance-method","name":"session","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"session","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"context.session(*args, **options)"},"external_var":false},{"html_id":"session(*args,**options,&)-instance-method","name":"session","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"session","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"context.session(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false}]},{"html_id":"lucky/Lucky/ActionPipes","path":"Lucky/ActionPipes.html","kind":"module","full_name":"Lucky::ActionPipes","name":"ActionPipes","abstract":false,"locations":[{"filename":"src/lucky/action_pipes.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/action_pipes.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/Action","kind":"class","full_name":"Lucky::Action","name":"Action"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"continue:Lucky::ActionPipes::Continue-instance-method","name":"continue","doc":"Call this in a pipe to continue to the next pipe or action","summary":"<p>Call this in a pipe to continue to the next pipe or action</p>","abstract":false,"location":{"filename":"src/lucky/action_pipes.cr","line_number":182,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/action_pipes.cr#L182"},"def":{"name":"continue","return_type":"Lucky::ActionPipes::Continue","visibility":"Public","body":"Lucky::ActionPipes::Continue.new"},"external_var":false}],"macros":[{"html_id":"after(method_name)-macro","name":"after","doc":"Run a method after an action ends\n\n`after` isn't as common as `before` but can still be useful. One example\nwould be to log a successful transaction to analytics. Methods will run in\nthe order that each `after` is defined. Also, each method must return\neither a `Lucky::Response` like `redirect`, `html`, `json`, etc, or call\n`continue`:\n\n```\nclass Purchases::Create < BrowserAction\n  after log_transaction\n\n  post \"/purchases\" do\n    # purchase the product\n  end\n\n  def log_transaction\n    # send the purchase to analytics\n    continue\n  end\nend\n```","summary":"<p>Run a method after an action ends</p>","abstract":false,"args":[{"name":"method_name","external_name":"method_name","restriction":""}],"args_string":"(method_name)","args_html":"(method_name)","location":{"filename":"src/lucky/action_pipes.cr","line_number":110,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/action_pipes.cr#L110"},"def":{"name":"after","args":[{"name":"method_name","external_name":"method_name","restriction":""}],"visibility":"Public","body":"    \n{% AFTER_PIPES << method_name.id %}\n\n  \n"}},{"html_id":"before(method_name)-macro","name":"before","doc":"Run a method before an action is called\n\nMethods will run in the order that each `before` is defined. Also, each\nmethod must return a `Lucky::Response` like `redirect`, `html`, `json`,\netc, or call `continue`:\n\n```\nclass Users::Destroy < BrowserAction\n  before check_if_signed_in\n  before confirm_destroy\n\n  delete \"/:user_id\" do\n    # destroy the user :(\n  end\n\n  def check_if_signed_in\n    if current_user.nil?\n      redirect to: SignInPage\n    else\n      continue\n    end\n  end\n\n  def confirm_destroy\n    # confirm that the user should be destroyed\n    continue\n  end\nend\n```","summary":"<p>Run a method before an action is called</p>","abstract":false,"args":[{"name":"method_name","external_name":"method_name","restriction":""}],"args_string":"(method_name)","args_html":"(method_name)","location":{"filename":"src/lucky/action_pipes.cr","line_number":84,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/action_pipes.cr#L84"},"def":{"name":"before","args":[{"name":"method_name","external_name":"method_name","restriction":""}],"visibility":"Public","body":"    \n{% BEFORE_PIPES << method_name.id %}\n\n  \n"}},{"html_id":"skip(*pipes)-macro","name":"skip","doc":"Skips before or after pipes\n\n```\nskip require_sign_in, require_organization\n```","summary":"<p>Skips before or after pipes</p>","abstract":false,"args":[{"name":"pipes","external_name":"pipes","restriction":""}],"args_string":"(*pipes)","args_html":"(*pipes)","location":{"filename":"src/lucky/action_pipes.cr","line_number":11,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/action_pipes.cr#L11"},"def":{"name":"skip","args":[{"name":"pipes","external_name":"pipes","restriction":""}],"splat_index":0,"visibility":"Public","body":"    \n{% for pipe in pipes %}\n      {% if (BEFORE_PIPES.includes?(pipe.id)) || (AFTER_PIPES.includes?(pipe.id)) %}\n        {% SKIPPED_PIPES << pipe.id %}\n      {% else %}\n        {% pipe.raise(\"Can't skip '#{pipe}' because the pipe is not used.\\nCheck the spelling of the pipe that you are trying to skip.\".lines.join(\" \"))\n\n\n\n%}\n      {% end %}\n    {% end %}\n\n  \n"}}]},{"html_id":"lucky/Lucky/AllowedInTags","path":"Lucky/AllowedInTags.html","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags","abstract":false,"locations":[{"filename":"src/lucky/allowed_in_tags.cr","line_number":27,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/allowed_in_tags.cr#L27"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Bool","kind":"struct","full_name":"Bool","name":"Bool"},{"html_id":"lucky/Int16","kind":"struct","full_name":"Int16","name":"Int16"},{"html_id":"lucky/Int32","kind":"struct","full_name":"Int32","name":"Int32"},{"html_id":"lucky/Int64","kind":"struct","full_name":"Int64","name":"Int64"},{"html_id":"lucky/UUID","kind":"struct","full_name":"UUID","name":"UUID"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Include this module in a type to allow it to be output in tags\n\nLucky already includes this in a few common types like `Int` and `Bool`.\nTypically this is enough but if you have a type you want to allow in tags, you\ncan do so.\n\nFor example:\n\n```\nclass EmailAddress\n  include Lucky::AllowedInTags\n\n  def initialize(@value : String)\n  end\n\n  def to_s(io)\n    io.puts @value\n  end\nend\n```\n\nNow an `EmailAddress` can be used for tag content without calling `to_s`:\n\n```\nh1 EmailAddress.new(\"myemail.com\")\n```","summary":"<p>Include this module in a type to allow it to be output in tags</p>"},{"html_id":"lucky/Lucky/AssetHelpers","path":"Lucky/AssetHelpers.html","kind":"module","full_name":"Lucky::AssetHelpers","name":"AssetHelpers","abstract":false,"locations":[{"filename":"src/lucky/asset_helpers.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/asset_helpers.cr#L7"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ASSET_MANIFEST","name":"ASSET_MANIFEST","value":"{} of String => String"},{"id":"CONFIG","name":"CONFIG","value":"{has_loaded_manifest: false}"}],"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Methods for returning the path to assets\n\nThese methods will return fingerprinted paths, check assets at compile time,\nand allow for setting a CDN.\n\nFor an in-depth guide check: https://luckyframework.org/guides/frontend/asset-handling","summary":"<p>Methods for returning the path to assets</p>","instance_methods":[{"html_id":"dynamic_asset(path:String):String-instance-method","name":"dynamic_asset","doc":"Return the string path to an asset (allows string interpolation)\n\n```\n# In a page or component\n# Will find the asset in `public/assets/images/logo.png`\nimg src: asset(\"images/logo.png\")\n\n# Can also be used elsewhere by prepending Lucky::AssetHelpers\nLucky::AssetHelpers.asset(\"images/logo.png\")\n```\n\nNOTE: This method does *not* check assets at compile time. The asset path\nis found at runtime so it is possible the asset does not exist. Be sure to\nmanually test that the asset is returned as expected.","summary":"<p>Return the string path to an asset (allows string interpolation)</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String) : String","args_html":"(path : <a href=\"../String.html\">String</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/asset_helpers.cr","line_number":93,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/asset_helpers.cr#L93"},"def":{"name":"dynamic_asset","args":[{"name":"path","external_name":"path","restriction":"String"}],"return_type":"String","visibility":"Public","body":"fingerprinted_path = Lucky::AssetHelpers::ASSET_MANIFEST[path]?\nif fingerprinted_path\n  Lucky::Server.settings.asset_host + fingerprinted_path\nelse\n  raise(\"Missing asset: #{path}\")\nend\n"},"external_var":false}],"macros":[{"html_id":"asset(path)-macro","name":"asset","doc":"Return the string path to an asset\n\n```\n# In a page or component:\n# Will find the asset in `public/assets/images/logo.png`\nimg src: asset(\"images/logo.png\")\n\n# Can also be used elsewhere by prepending Lucky::AssetHelpers\nLucky::AssetHelpers.asset(\"images/logo.png\")\n```\n\nNote that assets are checked at compile time so if it is not found, Lucky\nwill let you know. It will also let you know if you had a typo and suggest an\nasset that is close to what you typed.\n\nNOTE: This macro requires a `StringLiteral`. That means you cannot\ninterpolate strings like this: `asset(\"images/icon-#{service_name}.png\")`.\ninstead use `dynamic_asset` if you need string interpolation.","summary":"<p>Return the string path to an asset</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""}],"args_string":"(path)","args_html":"(path)","location":{"filename":"src/lucky/asset_helpers.cr","line_number":41,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/asset_helpers.cr#L41"},"def":{"name":"asset","args":[{"name":"path","external_name":"path","restriction":""}],"visibility":"Public","body":"    \n{% if CONFIG[:has_loaded_manifest] %}{% else %}\n      {% raise(\"No manifest loaded. Call 'Lucky::AssetHelpers.load_manifest'\") %}\n    {% end %}\n\n\n    \n{% if path.is_a?(StringLiteral) %}\n      {% if ::Lucky::AssetHelpers::ASSET_MANIFEST[path] %}\n        Lucky::Server.settings.asset_host + {{ ::Lucky::AssetHelpers::ASSET_MANIFEST[path] }}\n      {% else %}\n        {% asset_paths = ::Lucky::AssetHelpers::ASSET_MANIFEST.keys.join(\",\") %}\n        {{ run(\"../run_macros/missing_asset\", path, asset_paths) }}\n      {% end %}\n    {% else %}{% if path.is_a?(StringInterpolation) %}\n      {% raise(\"\\n\\nThe 'asset' macro doesn't work with string interpolation\\n\\nTry this...\\n\\n  ▸ Use the 'dynamic_asset' method instead\\n\")\n%}\n    {% else %}\n      {% raise(\"\\n\\nThe 'asset' macro requires a literal string like \\\"my-logo.png\\\", instead got: #{path}\\n\\nTry this...\\n\\n  ▸ If you're using a variable, switch to a literal string\\n  ▸ If you can't use a literal string, use the 'dynamic_asset' method instead\\n\")\n%}\n    {% end %}{% end %}\n\n  \n"}},{"html_id":"load_manifest(manifest_file=\"\")-macro","name":"load_manifest","abstract":false,"args":[{"name":"manifest_file","default_value":"\"\"","external_name":"manifest_file","restriction":""}],"args_string":"(manifest_file = \"\")","args_html":"(manifest_file = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/lucky/asset_helpers.cr","line_number":11,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/asset_helpers.cr#L11"},"def":{"name":"load_manifest","args":[{"name":"manifest_file","default_value":"\"\"","external_name":"manifest_file","restriction":""}],"visibility":"Public","body":"    \n{{ run(\"../run_macros/generate_asset_helpers\", manifest_file) }}\n\n    \n{% CONFIG[:has_loaded_manifest] = true %}\n\n  \n"}},{"html_id":"load_manifest(manifest_file,use_vite)-macro","name":"load_manifest","doc":"EXPERIMENTAL: This feature is experimental. Use this to test\nvite integration with Lucky","summary":"<p><span class=\"flag lime\">EXPERIMENTAL</span>  This feature is experimental.</p>","abstract":false,"args":[{"name":"manifest_file","external_name":"manifest_file","restriction":""},{"name":"use_vite","external_name":"use_vite","restriction":""}],"args_string":"(manifest_file, use_vite)","args_html":"(manifest_file, use_vite)","location":{"filename":"src/lucky/asset_helpers.cr","line_number":18,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/asset_helpers.cr#L18"},"def":{"name":"load_manifest","args":[{"name":"manifest_file","external_name":"manifest_file","restriction":""},{"name":"use_vite","external_name":"use_vite","restriction":""}],"visibility":"Public","body":"    \n{{ run(\"../run_macros/generate_asset_helpers\", manifest_file, use_vite) }}\n\n    \n{% CONFIG[:has_loaded_manifest] = true %}\n\n  \n"}}]},{"html_id":"lucky/Lucky/Assignable","path":"Lucky/Assignable.html","kind":"module","full_name":"Lucky::Assignable","name":"Assignable","abstract":false,"locations":[{"filename":"src/lucky/assignable.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/assignable.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ASSIGNS","name":"ASSIGNS","value":"[] of Nil"}],"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(**unused_exposures)-class-method","name":"new","abstract":false,"def":{"name":"new","double_splat":{"name":"unused_exposures","external_name":"unused_exposures","restriction":""},"visibility":"Public","body":"_ = allocate\n_.initialize(**unused_exposures)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"macros":[{"html_id":"generate_needy_initializer-macro","name":"generate_needy_initializer","abstract":false,"location":{"filename":"src/lucky/assignable.cr","line_number":87,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/assignable.cr#L87"},"def":{"name":"generate_needy_initializer","visibility":"Public","body":"    \n{% if !@type.abstract? %}\n      {% sorted_assigns = ASSIGNS.sort_by do |dec|\n  has_explicit_value = (dec.type.is_a?(Metaclass) || dec.type.types.any? do |t|\n    ((t.is_a?(Metaclass) || t.is_a?(ProcNotation)) || t.is_a?(Generic)) ? false : t.names.includes?(Nil.id)\n  end) || !dec.value.is_a?(Nop)\n  has_explicit_value ? 1 : 0\nend %}\n\n      # Check if this is a BaseComponent - if so, don't accept unused exposures\n      {% is_component = @type.ancestors.any? do |ancestor|\n  ancestor.stringify == \"Lucky::BaseComponent\"\nend %}\n\n      def initialize(\n        {% for declaration in sorted_assigns %}\n          {% var = declaration.var %}\n          {% type = declaration.type %}\n          {% value = declaration.value %}\n          {% if (type.stringify.ends_with?(\"Nil\")) && value.nil?\n  value = nil\nend %}\n          @{{ var.id }} : {{ type }}{% if !value.is_a?(Nop) %} = {{ value }}{% end %},\n        {% end %}\n        {% if is_component %}{% else %}**unused_exposures{% end %}\n        )\n      end\n    {% end %}\n\n  \n"}},{"html_id":"needs(*type_declarations)-macro","name":"needs","doc":"Declare what a class needs in order to be initialized.\n\nThis will declare an instance variable and getter automatically. It will\nalso add arguments to an `initialize` method at the end of compilation.\n\n### Examples\n\n```\nclass Users::IndexPage < MainLayout\n  # This page needs a `User` or it will fail to compile\n  # You can access it with `@user` or the getter method `user`\n  needs user : User\n\n  # This page can take an optional `ProductQuery`. This means you can\n  # Leave `products` off when rendering from an Action.\n  needs products : ProductQuery?\n\n  # When using a `Bool` Lucky will generate a method ending with `?`\n  # So in this case you can call `should_show_sidebar?` in the page.\n  needs should_show_sidebar : Bool = true\nend\n```","summary":"<p>Declare what a class needs in order to be initialized.</p>","abstract":false,"args":[{"name":"type_declarations","external_name":"type_declarations","restriction":""}],"args_string":"(*type_declarations)","args_html":"(*type_declarations)","location":{"filename":"src/lucky/assignable.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/assignable.cr#L24"},"def":{"name":"needs","args":[{"name":"type_declarations","external_name":"type_declarations","restriction":""}],"splat_index":0,"visibility":"Public","body":"    \n{% for declaration in type_declarations %}\n      {% if declaration.is_a?(TypeDeclaration) %}{% else %}\n        {% raise(\"'needs' expects a type declaration like 'name : String', instead got: '#{declaration}'\") %}\n      {% end %}\n\n      # Ensure that the needs variable name has not been previously defined.\n      {% previous_declaration = ASSIGNS.find do |d|\n  d.var == declaration.var\nend %}\n      {% if previous_declaration %}\n        {% raise(\"\\n\\nDuplicate needs definition: '#{declaration}' defined in #{declaration.filename}:#{declaration.line_number}:#{declaration.column_number}\\nThis needs is already defined as '#{previous_declaration}' in #{previous_declaration.filename}:#{previous_declaration.line_number}:#{previous_declaration.column_number}\")\n%}\n      {% end %}\n\n      {% if declaration.type.stringify == \"Bool\" %}\n        getter? {{ declaration.var }}\n      {% else %}\n        getter {{ declaration.var }}\n      {% end %}\n\n      {% ASSIGNS << declaration %}\n    {% end %}\n\n  \n"}},{"html_id":"setup_initializer_hook-macro","name":"setup_initializer_hook","abstract":false,"location":{"filename":"src/lucky/assignable.cr","line_number":73,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/assignable.cr#L73"},"def":{"name":"setup_initializer_hook","visibility":"Public","body":"    macro finished\n      generate_needy_initializer\n    \nend\n\n    macro included\n      setup_initializer_hook\n    \nend\n\n    macro inherited\n      setup_initializer_hook\n    \nend\n  \n"}}]},{"html_id":"lucky/Lucky/BaseAppServer","path":"Lucky/BaseAppServer.html","kind":"class","full_name":"Lucky::BaseAppServer","name":"BaseAppServer","abstract":true,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/base_app_server.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_app_server.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"The Base class for creating an app server in Lucky","summary":"<p>The Base class for creating an app server in Lucky</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/lucky/base_app_server.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_app_server.cr#L8"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"listen-instance-method","name":"listen","abstract":true,"location":{"filename":"src/lucky/base_app_server.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_app_server.cr#L6"},"def":{"name":"listen","visibility":"Public","body":""},"external_var":false},{"html_id":"middleware:Array(HTTP::Handler)-instance-method","name":"middleware","abstract":true,"location":{"filename":"src/lucky/base_app_server.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_app_server.cr#L5"},"def":{"name":"middleware","return_type":"Array(HTTP::Handler)","visibility":"Public","body":""},"external_var":false}]},{"html_id":"lucky/Lucky/BaseComponent","path":"Lucky/BaseComponent.html","kind":"class","full_name":"Lucky::BaseComponent","name":"BaseComponent","abstract":true,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"},{"html_id":"lucky/Lucky/SvgInliner","kind":"module","full_name":"Lucky::SvgInliner","name":"SvgInliner"},{"html_id":"lucky/Lucky/LiveReloadTag","kind":"module","full_name":"Lucky::LiveReloadTag","name":"LiveReloadTag"},{"html_id":"lucky/Lucky/TagDefaults","kind":"module","full_name":"Lucky::TagDefaults","name":"TagDefaults"},{"html_id":"lucky/Lucky/RenderIfDefined","kind":"module","full_name":"Lucky::RenderIfDefined","name":"RenderIfDefined"},{"html_id":"lucky/Lucky/HelpfulParagraphError","kind":"module","full_name":"Lucky::HelpfulParagraphError","name":"HelpfulParagraphError"},{"html_id":"lucky/Lucky/MountComponent","kind":"module","full_name":"Lucky::MountComponent","name":"MountComponent"},{"html_id":"lucky/Lucky/ForgeryProtectionHelpers","kind":"module","full_name":"Lucky::ForgeryProtectionHelpers","name":"ForgeryProtectionHelpers"},{"html_id":"lucky/Lucky/TimeHelpers","kind":"module","full_name":"Lucky::TimeHelpers","name":"TimeHelpers"},{"html_id":"lucky/Lucky/UrlHelpers","kind":"module","full_name":"Lucky::UrlHelpers","name":"UrlHelpers"},{"html_id":"lucky/Lucky/HTMLTextHelpers","kind":"module","full_name":"Lucky::HTMLTextHelpers","name":"HTMLTextHelpers"},{"html_id":"lucky/Lucky/TextHelpers","kind":"module","full_name":"Lucky::TextHelpers","name":"TextHelpers"},{"html_id":"lucky/Lucky/NumberToCurrency","kind":"module","full_name":"Lucky::NumberToCurrency","name":"NumberToCurrency"},{"html_id":"lucky/Lucky/AssetHelpers","kind":"module","full_name":"Lucky::AssetHelpers","name":"AssetHelpers"},{"html_id":"lucky/Lucky/Assignable","kind":"module","full_name":"Lucky::Assignable","name":"Assignable"},{"html_id":"lucky/Lucky/SpecialtyTags","kind":"module","full_name":"Lucky::SpecialtyTags","name":"SpecialtyTags"},{"html_id":"lucky/Lucky/FormHelpers","kind":"module","full_name":"Lucky::FormHelpers","name":"FormHelpers"},{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Lucky/LinkHelpers","kind":"module","full_name":"Lucky::LinkHelpers","name":"LinkHelpers"},{"html_id":"lucky/Lucky/CustomTags","kind":"module","full_name":"Lucky::CustomTags","name":"CustomTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"},{"html_id":"lucky/Lucky/BaseTags","kind":"module","full_name":"Lucky::BaseTags","name":"BaseTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/base_component.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_component.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ASSIGNS","name":"ASSIGNS","value":"[] of Nil"}],"included_modules":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"subclasses":[{"html_id":"lucky/Lucky/Paginator/BootstrapNav","kind":"class","full_name":"Lucky::Paginator::BootstrapNav","name":"BootstrapNav"},{"html_id":"lucky/Lucky/Paginator/BulmaNav","kind":"class","full_name":"Lucky::Paginator::BulmaNav","name":"BulmaNav"},{"html_id":"lucky/Lucky/Paginator/SimpleNav","kind":"class","full_name":"Lucky::Paginator::SimpleNav","name":"SimpleNav"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"context(context:HTTP::Server::Context|Nil):self-instance-method","name":"context","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context | ::Nil"}],"args_string":"(context : HTTP::Server::Context | Nil) : self","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a> | <a href=\"../Nil.html\">Nil</a>) : <span class=\"k\">self</span>","location":{"filename":"src/lucky/base_component.cr","line_number":28,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_component.cr#L28"},"def":{"name":"context","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context | ::Nil"}],"return_type":"self","visibility":"Public","body":"@context = context\nself\n"},"external_var":false},{"html_id":"render_to_string:String-instance-method","name":"render_to_string","abstract":false,"location":{"filename":"src/lucky/base_component.cr","line_number":33,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_component.cr#L33"},"def":{"name":"render_to_string","return_type":"String","visibility":"Public","body":"String.build do |io|\n  view(io)\n  render\nend"},"external_var":false}]},{"html_id":"lucky/Lucky/BaseHTTPClient","path":"Lucky/BaseHTTPClient.html","kind":"class","full_name":"Lucky::BaseHTTPClient","name":"BaseHTTPClient","abstract":true,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/base_http_client.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L6"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"A client for making HTTP requests\n\nMakes it easy to pass params, use Lucky route helpers, and chain header methods.","summary":"<p>A client for making HTTP requests</p>","class_methods":[{"html_id":"app(app:Lucky::BaseAppServer)-class-method","name":"app","abstract":false,"args":[{"name":"app","external_name":"app","restriction":"Lucky::BaseAppServer"}],"args_string":"(app : Lucky::BaseAppServer)","args_html":"(app : <a href=\"../Lucky/BaseAppServer.html\">Lucky::BaseAppServer</a>)","location":{"filename":"src/lucky/base_http_client.cr","line_number":10,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L10"},"def":{"name":"app","args":[{"name":"app","external_name":"app","restriction":"Lucky::BaseAppServer"}],"visibility":"Public","body":"@@app = app"},"external_var":false},{"html_id":"delete(*args,**named_args)-class-method","name":"delete","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/lucky/base_http_client.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L24"},"def":{"name":"delete","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":0,"visibility":"Public","body":"new.delete(*args, **named_args)"},"external_var":false},{"html_id":"exec(*args,**named_args)-class-method","name":"exec","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/lucky/base_http_client.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L24"},"def":{"name":"exec","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":0,"visibility":"Public","body":"new.exec(*args, **named_args)"},"external_var":false},{"html_id":"get(*args,**named_args)-class-method","name":"get","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/lucky/base_http_client.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L24"},"def":{"name":"get","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":0,"visibility":"Public","body":"new.get(*args, **named_args)"},"external_var":false},{"html_id":"head(*args,**named_args)-class-method","name":"head","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/lucky/base_http_client.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L24"},"def":{"name":"head","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":0,"visibility":"Public","body":"new.head(*args, **named_args)"},"external_var":false},{"html_id":"options(*args,**named_args)-class-method","name":"options","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/lucky/base_http_client.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L24"},"def":{"name":"options","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":0,"visibility":"Public","body":"new.options(*args, **named_args)"},"external_var":false},{"html_id":"patch(*args,**named_args)-class-method","name":"patch","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/lucky/base_http_client.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L24"},"def":{"name":"patch","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":0,"visibility":"Public","body":"new.patch(*args, **named_args)"},"external_var":false},{"html_id":"post(*args,**named_args)-class-method","name":"post","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/lucky/base_http_client.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L24"},"def":{"name":"post","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":0,"visibility":"Public","body":"new.post(*args, **named_args)"},"external_var":false},{"html_id":"put(*args,**named_args)-class-method","name":"put","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/lucky/base_http_client.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L24"},"def":{"name":"put","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":0,"visibility":"Public","body":"new.put(*args, **named_args)"},"external_var":false}],"constructors":[{"html_id":"new(client:HTTP::Client=build_client)-class-method","name":"new","abstract":false,"args":[{"name":"client","default_value":"build_client","external_name":"client","restriction":"HTTP::Client"}],"args_string":"(client : HTTP::Client = build_client)","args_html":"(client : HTTP::Client = build_client)","location":{"filename":"src/lucky/base_http_client.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L13"},"def":{"name":"new","args":[{"name":"client","default_value":"build_client","external_name":"client","restriction":"HTTP::Client"}],"visibility":"Public","body":"_ = allocate\n_.initialize(client)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"delete(path:String,params:NamedTuple):HTTP::Client::Response-instance-method","name":"delete","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"args_string":"(path : String, params : NamedTuple) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, params : NamedTuple) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"delete","args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"return_type":"HTTP::Client::Response","visibility":"Public","body":"@client.delete(path, form: params.to_json)"},"external_var":false},{"html_id":"delete(path:String,**params):HTTP::Client::Response-instance-method","name":"delete","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String, **params) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, **params) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"delete","args":[{"name":"path","external_name":"path","restriction":"String"}],"double_splat":{"name":"params","external_name":"params","restriction":""},"return_type":"HTTP::Client::Response","visibility":"Public","body":"delete(path, params)"},"external_var":false},{"html_id":"exec(action:Lucky::Action.class,params:NamedTuple):HTTP::Client::Response-instance-method","name":"exec","doc":"See docs for `exec`","summary":"<p>See docs for <code><a href=\"../Lucky/BaseHTTPClient.html#exec%28action%3ALucky%3A%3AAction.class%2Cparams%3ANamedTuple%29%3AHTTP%3A%3AClient%3A%3AResponse-instance-method\">#exec</a></code></p>","abstract":false,"args":[{"name":"action","external_name":"action","restriction":"Lucky::Action.class"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"args_string":"(action : Lucky::Action.class, params : NamedTuple) : HTTP::Client::Response","args_html":"(action : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Action</span>.<span class=\"k\">class</span>, params : NamedTuple) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":98,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L98"},"def":{"name":"exec","args":[{"name":"action","external_name":"action","restriction":"Lucky::Action.class"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"return_type":"HTTP::Client::Response","visibility":"Public","body":"exec(action.route, **params)"},"external_var":false},{"html_id":"exec(route_helper:Lucky::RouteHelper,params:NamedTuple):HTTP::Client::Response-instance-method","name":"exec","doc":"See docs for `exec`","summary":"<p>See docs for <code><a href=\"../Lucky/BaseHTTPClient.html#exec%28action%3ALucky%3A%3AAction.class%2Cparams%3ANamedTuple%29%3AHTTP%3A%3AClient%3A%3AResponse-instance-method\">#exec</a></code></p>","abstract":false,"args":[{"name":"route_helper","external_name":"route_helper","restriction":"Lucky::RouteHelper"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"args_string":"(route_helper : Lucky::RouteHelper, params : NamedTuple) : HTTP::Client::Response","args_html":"(route_helper : <a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a>, params : NamedTuple) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":103,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L103"},"def":{"name":"exec","args":[{"name":"route_helper","external_name":"route_helper","restriction":"Lucky::RouteHelper"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"return_type":"HTTP::Client::Response","visibility":"Public","body":"@client.exec(method: route_helper.method.to_s.upcase, path: route_helper.path, body: params.to_json)"},"external_var":false},{"html_id":"exec(action:Lucky::Action.class,**params):HTTP::Client::Response-instance-method","name":"exec","doc":"Sends a request with the path and method from a Lucky::Action\n\n```\n# Make a request without body params\nAppClient.new.exec Users::Index\n\n# Make a request with body params\nAppClient.new.exec Users::Create, user: {email: \"paul@example.com\"}\n\n# Actions that require path params work like normal\nAppClient.new.exec Users::Show.with(user.id)\n```","summary":"<p>Sends a request with the path and method from a Lucky::Action</p>","abstract":false,"args":[{"name":"action","external_name":"action","restriction":"Lucky::Action.class"}],"args_string":"(action : Lucky::Action.class, **params) : HTTP::Client::Response","args_html":"(action : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Action</span>.<span class=\"k\">class</span>, **params) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":88,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L88"},"def":{"name":"exec","args":[{"name":"action","external_name":"action","restriction":"Lucky::Action.class"}],"double_splat":{"name":"params","external_name":"params","restriction":""},"return_type":"HTTP::Client::Response","visibility":"Public","body":"exec(action.route, params)"},"external_var":false},{"html_id":"exec(route_helper:Lucky::RouteHelper,**params):HTTP::Client::Response-instance-method","name":"exec","doc":"See docs for `exec`","summary":"<p>See docs for <code><a href=\"../Lucky/BaseHTTPClient.html#exec%28action%3ALucky%3A%3AAction.class%2Cparams%3ANamedTuple%29%3AHTTP%3A%3AClient%3A%3AResponse-instance-method\">#exec</a></code></p>","abstract":false,"args":[{"name":"route_helper","external_name":"route_helper","restriction":"Lucky::RouteHelper"}],"args_string":"(route_helper : Lucky::RouteHelper, **params) : HTTP::Client::Response","args_html":"(route_helper : <a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a>, **params) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":93,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L93"},"def":{"name":"exec","args":[{"name":"route_helper","external_name":"route_helper","restriction":"Lucky::RouteHelper"}],"double_splat":{"name":"params","external_name":"params","restriction":""},"return_type":"HTTP::Client::Response","visibility":"Public","body":"exec(route_helper, params)"},"external_var":false},{"html_id":"exec_raw(action:Lucky::Action.class,body:HTTP::Client::BodyType):HTTP::Client::Response-instance-method","name":"exec_raw","doc":"`exec_raw` works the same as `exec`, but allows you to pass in a raw string.\nThis is used as an escape hatch as the `string` could be unsafe, or formatted\nin a custom format.","summary":"<p><code><a href=\"../Lucky/BaseHTTPClient.html#exec_raw%28action%3ALucky%3A%3AAction.class%2Cbody%3AHTTP%3A%3AClient%3A%3ABodyType%29%3AHTTP%3A%3AClient%3A%3AResponse-instance-method\">#exec_raw</a></code> works the same as <code><a href=\"../Lucky/BaseHTTPClient.html#exec%28action%3ALucky%3A%3AAction.class%2Cparams%3ANamedTuple%29%3AHTTP%3A%3AClient%3A%3AResponse-instance-method\">#exec</a></code>, but allows you to pass in a raw string.</p>","abstract":false,"args":[{"name":"action","external_name":"action","restriction":"Lucky::Action.class"},{"name":"body","external_name":"body","restriction":"HTTP::Client::BodyType"}],"args_string":"(action : Lucky::Action.class, body : HTTP::Client::BodyType) : HTTP::Client::Response","args_html":"(action : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Action</span>.<span class=\"k\">class</span>, body : HTTP::Client::BodyType) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":110,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L110"},"def":{"name":"exec_raw","args":[{"name":"action","external_name":"action","restriction":"Lucky::Action.class"},{"name":"body","external_name":"body","restriction":"HTTP::Client::BodyType"}],"return_type":"HTTP::Client::Response","visibility":"Public","body":"exec_raw(action.route, body)"},"external_var":false},{"html_id":"exec_raw(route_helper:Lucky::RouteHelper,body:HTTP::Client::BodyType):HTTP::Client::Response-instance-method","name":"exec_raw","doc":"See docs for `exec_raw`","summary":"<p>See docs for <code><a href=\"../Lucky/BaseHTTPClient.html#exec_raw%28action%3ALucky%3A%3AAction.class%2Cbody%3AHTTP%3A%3AClient%3A%3ABodyType%29%3AHTTP%3A%3AClient%3A%3AResponse-instance-method\">#exec_raw</a></code></p>","abstract":false,"args":[{"name":"route_helper","external_name":"route_helper","restriction":"Lucky::RouteHelper"},{"name":"body","external_name":"body","restriction":"HTTP::Client::BodyType"}],"args_string":"(route_helper : Lucky::RouteHelper, body : HTTP::Client::BodyType) : HTTP::Client::Response","args_html":"(route_helper : <a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a>, body : HTTP::Client::BodyType) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":115,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L115"},"def":{"name":"exec_raw","args":[{"name":"route_helper","external_name":"route_helper","restriction":"Lucky::RouteHelper"},{"name":"body","external_name":"body","restriction":"HTTP::Client::BodyType"}],"return_type":"HTTP::Client::Response","visibility":"Public","body":"@client.exec(method: route_helper.method.to_s.upcase, path: route_helper.path, body: body)"},"external_var":false},{"html_id":"get(path:String,params:NamedTuple):HTTP::Client::Response-instance-method","name":"get","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"args_string":"(path : String, params : NamedTuple) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, params : NamedTuple) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"get","args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"return_type":"HTTP::Client::Response","visibility":"Public","body":"@client.get(path, form: params.to_json)"},"external_var":false},{"html_id":"get(path:String,**params):HTTP::Client::Response-instance-method","name":"get","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String, **params) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, **params) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"get","args":[{"name":"path","external_name":"path","restriction":"String"}],"double_splat":{"name":"params","external_name":"params","restriction":""},"return_type":"HTTP::Client::Response","visibility":"Public","body":"get(path, params)"},"external_var":false},{"html_id":"head(path:String,params:NamedTuple):HTTP::Client::Response-instance-method","name":"head","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"args_string":"(path : String, params : NamedTuple) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, params : NamedTuple) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"head","args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"return_type":"HTTP::Client::Response","visibility":"Public","body":"@client.head(path, form: params.to_json)"},"external_var":false},{"html_id":"head(path:String,**params):HTTP::Client::Response-instance-method","name":"head","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String, **params) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, **params) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"head","args":[{"name":"path","external_name":"path","restriction":"String"}],"double_splat":{"name":"params","external_name":"params","restriction":""},"return_type":"HTTP::Client::Response","visibility":"Public","body":"head(path, params)"},"external_var":false},{"html_id":"headers(**header_values):self-instance-method","name":"headers","doc":"The header call is chainable and returns the client:\n\n```\n# content_type will be normalized to `content-type`\nAppClient.new\n  .headers(content_type: \"application/json\")\n  .headers(accept: \"text/plain\")\n  .get(\"/some-path\")\n```\n\nYou can also set up headers in `initialize` or in instance methods:\n\n```\nclass AppClient < Lucky::BaseHTTPClient\n  def initialize\n    headers(content_type: \"application/json\")\n  end\n\n  def accept_plain_text\n    headers(accept: \"text/plain\")\n  end\nend\n\nAppClient.new\n  .accept_plain_text\n  .get(\"/some-path\")\n```","summary":"<p>The header call is chainable and returns the client:</p>","abstract":false,"location":{"filename":"src/lucky/base_http_client.cr","line_number":67,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L67"},"def":{"name":"headers","double_splat":{"name":"header_values","external_name":"header_values","restriction":""},"return_type":"self","visibility":"Public","body":"@client.before_request do |request|\n  header_values.each do |key, value|\n    request.headers[key.to_s.gsub(\"-\", \"_\")] = value.to_s\n  end\nend\nself\n"},"external_var":false},{"html_id":"options(path:String,params:NamedTuple):HTTP::Client::Response-instance-method","name":"options","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"args_string":"(path : String, params : NamedTuple) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, params : NamedTuple) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"options","args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"return_type":"HTTP::Client::Response","visibility":"Public","body":"@client.options(path, form: params.to_json)"},"external_var":false},{"html_id":"options(path:String,**params):HTTP::Client::Response-instance-method","name":"options","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String, **params) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, **params) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"options","args":[{"name":"path","external_name":"path","restriction":"String"}],"double_splat":{"name":"params","external_name":"params","restriction":""},"return_type":"HTTP::Client::Response","visibility":"Public","body":"options(path, params)"},"external_var":false},{"html_id":"patch(path:String,params:NamedTuple):HTTP::Client::Response-instance-method","name":"patch","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"args_string":"(path : String, params : NamedTuple) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, params : NamedTuple) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"patch","args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"return_type":"HTTP::Client::Response","visibility":"Public","body":"@client.patch(path, form: params.to_json)"},"external_var":false},{"html_id":"patch(path:String,**params):HTTP::Client::Response-instance-method","name":"patch","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String, **params) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, **params) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"patch","args":[{"name":"path","external_name":"path","restriction":"String"}],"double_splat":{"name":"params","external_name":"params","restriction":""},"return_type":"HTTP::Client::Response","visibility":"Public","body":"patch(path, params)"},"external_var":false},{"html_id":"post(path:String,params:NamedTuple):HTTP::Client::Response-instance-method","name":"post","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"args_string":"(path : String, params : NamedTuple) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, params : NamedTuple) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"post","args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"return_type":"HTTP::Client::Response","visibility":"Public","body":"@client.post(path, form: params.to_json)"},"external_var":false},{"html_id":"post(path:String,**params):HTTP::Client::Response-instance-method","name":"post","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String, **params) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, **params) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"post","args":[{"name":"path","external_name":"path","restriction":"String"}],"double_splat":{"name":"params","external_name":"params","restriction":""},"return_type":"HTTP::Client::Response","visibility":"Public","body":"post(path, params)"},"external_var":false},{"html_id":"put(path:String,params:NamedTuple):HTTP::Client::Response-instance-method","name":"put","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"args_string":"(path : String, params : NamedTuple) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, params : NamedTuple) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"put","args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple"}],"return_type":"HTTP::Client::Response","visibility":"Public","body":"@client.put(path, form: params.to_json)"},"external_var":false},{"html_id":"put(path:String,**params):HTTP::Client::Response-instance-method","name":"put","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String, **params) : HTTP::Client::Response","args_html":"(path : <a href=\"../String.html\">String</a>, **params) : HTTP::Client::Response","location":{"filename":"src/lucky/base_http_client.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_http_client.cr#L119"},"def":{"name":"put","args":[{"name":"path","external_name":"path","restriction":"String"}],"double_splat":{"name":"params","external_name":"params","restriction":""},"return_type":"HTTP::Client::Response","visibility":"Public","body":"put(path, params)"},"external_var":false}]},{"html_id":"lucky/Lucky/BaseLogFormatter","path":"Lucky/BaseLogFormatter.html","kind":"class","full_name":"Lucky::BaseLogFormatter","name":"BaseLogFormatter","abstract":true,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/base_log_formatter.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_log_formatter.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"format(severity:::Logger::Severity,timestamp:Time,progname:String,data:NamedTuple,io:IO):Nil-instance-method","name":"format","abstract":true,"args":[{"name":"severity","external_name":"severity","restriction":"::Logger::Severity"},{"name":"timestamp","external_name":"timestamp","restriction":"Time"},{"name":"progname","external_name":"progname","restriction":"String"},{"name":"data","external_name":"data","restriction":"NamedTuple"},{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(severity : ::Logger::Severity, timestamp : Time, progname : String, data : NamedTuple, io : IO) : Nil","args_html":"(severity : ::Logger::Severity, timestamp : Time, progname : <a href=\"../String.html\">String</a>, data : NamedTuple, io : IO) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/base_log_formatter.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/base_log_formatter.cr#L2"},"def":{"name":"format","args":[{"name":"severity","external_name":"severity","restriction":"::Logger::Severity"},{"name":"timestamp","external_name":"timestamp","restriction":"Time"},{"name":"progname","external_name":"progname","restriction":"String"},{"name":"data","external_name":"data","restriction":"NamedTuple"},{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":""},"external_var":false}]},{"html_id":"lucky/Lucky/BaseTags","path":"Lucky/BaseTags.html","kind":"module","full_name":"Lucky::BaseTags","name":"BaseTags","abstract":false,"ancestors":[{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"}],"locations":[{"filename":"src/lucky/tags/base_tags.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"EMPTY_HTML_ATTRS","name":"EMPTY_HTML_ATTRS","value":"{} of String => String"},{"id":"EMPTY_TAGS","name":"EMPTY_TAGS","value":"[:img, :br, :hr, :input, :meta, :source] of ::Symbol"},{"id":"RENAMED_TAGS","name":"RENAMED_TAGS","value":"{para: \"p\", select_tag: \"select\"}"},{"id":"TAGS","name":"TAGS","value":"[:a, :abbr, :address, :area, :article, :aside, :b, :bdi, :bdo, :blockquote, :body, :button, :caption, :cite, :code, :col, :colgroup, :data, :datalist, :del, :details, :dfn, :dialog, :div, :dd, :dl, :dt, :em, :embed, :fieldset, :figcaption, :figure, :footer, :form, :h1, :h2, :h3, :h4, :h5, :h6, :head, :header, :html, :i, :iframe, :ins, :kbd, :label, :legend, :li, :main, :map, :mark, :menuitem, :meter, :nav, :noscript, :object, :ol, :optgroup, :option, :output, :param, :picture, :pre, :progress, :q, :rp, :rt, :ruby, :s, :samp, :script, :section, :slot, :small, :span, :strong, :sub, :summary, :sup, :table, :tbody, :td, :template, :textarea, :tfoot, :th, :thead, :time, :title, :tr, :track, :u, :ul, :video, :wbr] of ::Symbol"}],"included_modules":[{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"}],"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"a(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"a","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"a","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<a>\") << (HTML.escape(content.to_s))) << \"</a>\""},"external_var":false},{"html_id":"a(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"a","doc":"Generates a `&lt;a&gt;&lt;/a&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\na(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <a class=\"cls-1 red\" required>Sample</a>\n```","summary":"<p>Generates a <code>&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"a","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<a\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</a>\"\n"},"external_var":false},{"html_id":"a(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"a","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"a","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    a(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"a(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"a","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"a","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\na received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  a(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"a(options,**other_options):Nil-instance-method","name":"a","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"a","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"a(\"\", options, **other_options)"},"external_var":false},{"html_id":"a(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"a","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"a","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<a\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</a>\"\n"},"external_var":false},{"html_id":"a(&):Nil-instance-method","name":"a","abstract":false,"def":{"name":"a","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<a>\"\ncheck_tag_content!(yield)\nview << \"</a>\"\n"},"external_var":false},{"html_id":"a(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"a","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"a","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<a\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</a>\"\n"},"external_var":false},{"html_id":"abbr(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"abbr","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"abbr","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<abbr>\") << (HTML.escape(content.to_s))) << \"</abbr>\""},"external_var":false},{"html_id":"abbr(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"abbr","doc":"Generates a `&lt;abbr&gt;&lt;/abbr&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nabbr(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <abbr class=\"cls-1 red\" required>Sample</abbr>\n```","summary":"<p>Generates a <code>&amp;lt;abbr&amp;gt;&amp;lt;/abbr&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"abbr","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<abbr\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</abbr>\"\n"},"external_var":false},{"html_id":"abbr(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"abbr","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"abbr","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    abbr(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"abbr(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"abbr","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"abbr","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nabbr received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  abbr(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"abbr(options,**other_options):Nil-instance-method","name":"abbr","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"abbr","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"abbr(\"\", options, **other_options)"},"external_var":false},{"html_id":"abbr(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"abbr","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"abbr","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<abbr\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</abbr>\"\n"},"external_var":false},{"html_id":"abbr(&):Nil-instance-method","name":"abbr","abstract":false,"def":{"name":"abbr","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<abbr>\"\ncheck_tag_content!(yield)\nview << \"</abbr>\"\n"},"external_var":false},{"html_id":"abbr(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"abbr","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"abbr","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<abbr\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</abbr>\"\n"},"external_var":false},{"html_id":"address(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"address","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"address","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<address>\") << (HTML.escape(content.to_s))) << \"</address>\""},"external_var":false},{"html_id":"address(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"address","doc":"Generates a `&lt;address&gt;&lt;/address&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\naddress(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <address class=\"cls-1 red\" required>Sample</address>\n```","summary":"<p>Generates a <code>&amp;lt;address&amp;gt;&amp;lt;/address&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"address","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<address\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</address>\"\n"},"external_var":false},{"html_id":"address(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"address","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"address","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    address(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"address(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"address","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"address","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\naddress received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  address(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"address(options,**other_options):Nil-instance-method","name":"address","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"address","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"address(\"\", options, **other_options)"},"external_var":false},{"html_id":"address(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"address","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"address","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<address\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</address>\"\n"},"external_var":false},{"html_id":"address(&):Nil-instance-method","name":"address","abstract":false,"def":{"name":"address","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<address>\"\ncheck_tag_content!(yield)\nview << \"</address>\"\n"},"external_var":false},{"html_id":"address(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"address","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"address","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<address\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</address>\"\n"},"external_var":false},{"html_id":"area(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"area","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"area","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<area>\") << (HTML.escape(content.to_s))) << \"</area>\""},"external_var":false},{"html_id":"area(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"area","doc":"Generates a `&lt;area&gt;&lt;/area&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\narea(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <area class=\"cls-1 red\" required>Sample</area>\n```","summary":"<p>Generates a <code>&amp;lt;area&amp;gt;&amp;lt;/area&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"area","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<area\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</area>\"\n"},"external_var":false},{"html_id":"area(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"area","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"area","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    area(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"area(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"area","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"area","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\narea received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  area(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"area(options,**other_options):Nil-instance-method","name":"area","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"area","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"area(\"\", options, **other_options)"},"external_var":false},{"html_id":"area(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"area","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"area","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<area\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</area>\"\n"},"external_var":false},{"html_id":"area(&):Nil-instance-method","name":"area","abstract":false,"def":{"name":"area","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<area>\"\ncheck_tag_content!(yield)\nview << \"</area>\"\n"},"external_var":false},{"html_id":"area(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"area","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"area","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<area\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</area>\"\n"},"external_var":false},{"html_id":"article(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"article","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"article","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<article>\") << (HTML.escape(content.to_s))) << \"</article>\""},"external_var":false},{"html_id":"article(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"article","doc":"Generates a `&lt;article&gt;&lt;/article&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\narticle(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <article class=\"cls-1 red\" required>Sample</article>\n```","summary":"<p>Generates a <code>&amp;lt;article&amp;gt;&amp;lt;/article&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"article","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<article\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</article>\"\n"},"external_var":false},{"html_id":"article(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"article","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"article","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    article(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"article(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"article","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"article","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\narticle received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  article(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"article(options,**other_options):Nil-instance-method","name":"article","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"article","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"article(\"\", options, **other_options)"},"external_var":false},{"html_id":"article(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"article","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"article","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<article\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</article>\"\n"},"external_var":false},{"html_id":"article(&):Nil-instance-method","name":"article","abstract":false,"def":{"name":"article","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<article>\"\ncheck_tag_content!(yield)\nview << \"</article>\"\n"},"external_var":false},{"html_id":"article(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"article","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"article","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<article\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</article>\"\n"},"external_var":false},{"html_id":"aside(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"aside","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"aside","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<aside>\") << (HTML.escape(content.to_s))) << \"</aside>\""},"external_var":false},{"html_id":"aside(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"aside","doc":"Generates a `&lt;aside&gt;&lt;/aside&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\naside(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <aside class=\"cls-1 red\" required>Sample</aside>\n```","summary":"<p>Generates a <code>&amp;lt;aside&amp;gt;&amp;lt;/aside&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"aside","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<aside\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</aside>\"\n"},"external_var":false},{"html_id":"aside(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"aside","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"aside","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    aside(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"aside(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"aside","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"aside","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\naside received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  aside(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"aside(options,**other_options):Nil-instance-method","name":"aside","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"aside","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"aside(\"\", options, **other_options)"},"external_var":false},{"html_id":"aside(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"aside","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"aside","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<aside\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</aside>\"\n"},"external_var":false},{"html_id":"aside(&):Nil-instance-method","name":"aside","abstract":false,"def":{"name":"aside","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<aside>\"\ncheck_tag_content!(yield)\nview << \"</aside>\"\n"},"external_var":false},{"html_id":"aside(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"aside","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"aside","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<aside\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</aside>\"\n"},"external_var":false},{"html_id":"b(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"b","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"b","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<b>\") << (HTML.escape(content.to_s))) << \"</b>\""},"external_var":false},{"html_id":"b(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"b","doc":"Generates a `&lt;b&gt;&lt;/b&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nb(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <b class=\"cls-1 red\" required>Sample</b>\n```","summary":"<p>Generates a <code>&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"b","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<b\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</b>\"\n"},"external_var":false},{"html_id":"b(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"b","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"b","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    b(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"b(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"b","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"b","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nb received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  b(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"b(options,**other_options):Nil-instance-method","name":"b","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"b","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"b(\"\", options, **other_options)"},"external_var":false},{"html_id":"b(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"b","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"b","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<b\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</b>\"\n"},"external_var":false},{"html_id":"b(&):Nil-instance-method","name":"b","abstract":false,"def":{"name":"b","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<b>\"\ncheck_tag_content!(yield)\nview << \"</b>\"\n"},"external_var":false},{"html_id":"b(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"b","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"b","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<b\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</b>\"\n"},"external_var":false},{"html_id":"bdi(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"bdi","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdi","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<bdi>\") << (HTML.escape(content.to_s))) << \"</bdi>\""},"external_var":false},{"html_id":"bdi(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"bdi","doc":"Generates a `&lt;bdi&gt;&lt;/bdi&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nbdi(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <bdi class=\"cls-1 red\" required>Sample</bdi>\n```","summary":"<p>Generates a <code>&amp;lt;bdi&amp;gt;&amp;lt;/bdi&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdi","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<bdi\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</bdi>\"\n"},"external_var":false},{"html_id":"bdi(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"bdi","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdi","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    bdi(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"bdi(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"bdi","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdi","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nbdi received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  bdi(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"bdi(options,**other_options):Nil-instance-method","name":"bdi","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdi","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"bdi(\"\", options, **other_options)"},"external_var":false},{"html_id":"bdi(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"bdi","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdi","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<bdi\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</bdi>\"\n"},"external_var":false},{"html_id":"bdi(&):Nil-instance-method","name":"bdi","abstract":false,"def":{"name":"bdi","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<bdi>\"\ncheck_tag_content!(yield)\nview << \"</bdi>\"\n"},"external_var":false},{"html_id":"bdi(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"bdi","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdi","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<bdi\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</bdi>\"\n"},"external_var":false},{"html_id":"bdo(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"bdo","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdo","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<bdo>\") << (HTML.escape(content.to_s))) << \"</bdo>\""},"external_var":false},{"html_id":"bdo(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"bdo","doc":"Generates a `&lt;bdo&gt;&lt;/bdo&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nbdo(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <bdo class=\"cls-1 red\" required>Sample</bdo>\n```","summary":"<p>Generates a <code>&amp;lt;bdo&amp;gt;&amp;lt;/bdo&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdo","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<bdo\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</bdo>\"\n"},"external_var":false},{"html_id":"bdo(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"bdo","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdo","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    bdo(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"bdo(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"bdo","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdo","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nbdo received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  bdo(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"bdo(options,**other_options):Nil-instance-method","name":"bdo","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdo","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"bdo(\"\", options, **other_options)"},"external_var":false},{"html_id":"bdo(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"bdo","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdo","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<bdo\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</bdo>\"\n"},"external_var":false},{"html_id":"bdo(&):Nil-instance-method","name":"bdo","abstract":false,"def":{"name":"bdo","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<bdo>\"\ncheck_tag_content!(yield)\nview << \"</bdo>\"\n"},"external_var":false},{"html_id":"bdo(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"bdo","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"bdo","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<bdo\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</bdo>\"\n"},"external_var":false},{"html_id":"blockquote(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"blockquote","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"blockquote","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<blockquote>\") << (HTML.escape(content.to_s))) << \"</blockquote>\""},"external_var":false},{"html_id":"blockquote(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"blockquote","doc":"Generates a `&lt;blockquote&gt;&lt;/blockquote&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nblockquote(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <blockquote class=\"cls-1 red\" required>Sample</blockquote>\n```","summary":"<p>Generates a <code>&amp;lt;blockquote&amp;gt;&amp;lt;/blockquote&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"blockquote","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<blockquote\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</blockquote>\"\n"},"external_var":false},{"html_id":"blockquote(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"blockquote","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"blockquote","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    blockquote(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"blockquote(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"blockquote","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"blockquote","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nblockquote received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  blockquote(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"blockquote(options,**other_options):Nil-instance-method","name":"blockquote","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"blockquote","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"blockquote(\"\", options, **other_options)"},"external_var":false},{"html_id":"blockquote(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"blockquote","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"blockquote","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<blockquote\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</blockquote>\"\n"},"external_var":false},{"html_id":"blockquote(&):Nil-instance-method","name":"blockquote","abstract":false,"def":{"name":"blockquote","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<blockquote>\"\ncheck_tag_content!(yield)\nview << \"</blockquote>\"\n"},"external_var":false},{"html_id":"blockquote(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"blockquote","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"blockquote","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<blockquote\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</blockquote>\"\n"},"external_var":false},{"html_id":"body(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"body","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"body","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<body>\") << (HTML.escape(content.to_s))) << \"</body>\""},"external_var":false},{"html_id":"body(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"body","doc":"Generates a `&lt;body&gt;&lt;/body&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nbody(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <body class=\"cls-1 red\" required>Sample</body>\n```","summary":"<p>Generates a <code>&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"body","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<body\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</body>\"\n"},"external_var":false},{"html_id":"body(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"body","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"body","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    body(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"body(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"body","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"body","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nbody received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  body(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"body(options,**other_options):Nil-instance-method","name":"body","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"body","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"body(\"\", options, **other_options)"},"external_var":false},{"html_id":"body(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"body","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"body","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<body\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</body>\"\n"},"external_var":false},{"html_id":"body(&):Nil-instance-method","name":"body","abstract":false,"def":{"name":"body","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<body>\"\ncheck_tag_content!(yield)\nview << \"</body>\"\n"},"external_var":false},{"html_id":"body(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"body","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"body","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<body\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</body>\"\n"},"external_var":false},{"html_id":"br(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"br","doc":"Generates a `&lt;br&gt;` tag.\n\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n```\nbr([:required], {\"class\" => \"cls-1\"}) #=> <br class=\"cls-1\" required>\n```","summary":"<p>Generates a <code>&amp;lt;br&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"br","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"bool_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nview << \"<br#{tag_attrs}#{bool_attrs}>\"\n"},"external_var":false},{"html_id":"br:Nil-instance-method","name":"br","doc":"Generates a `&lt;br&gt;` tag.","summary":"<p>Generates a <code>&amp;lt;br&amp;gt;</code> tag.</p>","abstract":false,"location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"br","return_type":"Nil","visibility":"Public","body":"view << \"<br>\""},"external_var":false},{"html_id":"br(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"br","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"br","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"br([] of Symbol, options, **other_options)"},"external_var":false},{"html_id":"button(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"button","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"button","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<button>\") << (HTML.escape(content.to_s))) << \"</button>\""},"external_var":false},{"html_id":"button(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"button","doc":"Generates a `&lt;button&gt;&lt;/button&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nbutton(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <button class=\"cls-1 red\" required>Sample</button>\n```","summary":"<p>Generates a <code>&amp;lt;button&amp;gt;&amp;lt;/button&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"button","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<button\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</button>\"\n"},"external_var":false},{"html_id":"button(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"button","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"button","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    button(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"button(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"button","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"button","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nbutton received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  button(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"button(options,**other_options):Nil-instance-method","name":"button","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"button","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"button(\"\", options, **other_options)"},"external_var":false},{"html_id":"button(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"button","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"button","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<button\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</button>\"\n"},"external_var":false},{"html_id":"button(&):Nil-instance-method","name":"button","abstract":false,"def":{"name":"button","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<button>\"\ncheck_tag_content!(yield)\nview << \"</button>\"\n"},"external_var":false},{"html_id":"button(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"button","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"button","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<button\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</button>\"\n"},"external_var":false},{"html_id":"caption(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"caption","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"caption","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<caption>\") << (HTML.escape(content.to_s))) << \"</caption>\""},"external_var":false},{"html_id":"caption(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"caption","doc":"Generates a `&lt;caption&gt;&lt;/caption&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ncaption(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <caption class=\"cls-1 red\" required>Sample</caption>\n```","summary":"<p>Generates a <code>&amp;lt;caption&amp;gt;&amp;lt;/caption&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"caption","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<caption\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</caption>\"\n"},"external_var":false},{"html_id":"caption(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"caption","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"caption","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    caption(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"caption(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"caption","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"caption","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ncaption received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  caption(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"caption(options,**other_options):Nil-instance-method","name":"caption","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"caption","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"caption(\"\", options, **other_options)"},"external_var":false},{"html_id":"caption(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"caption","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"caption","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<caption\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</caption>\"\n"},"external_var":false},{"html_id":"caption(&):Nil-instance-method","name":"caption","abstract":false,"def":{"name":"caption","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<caption>\"\ncheck_tag_content!(yield)\nview << \"</caption>\"\n"},"external_var":false},{"html_id":"caption(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"caption","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"caption","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<caption\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</caption>\"\n"},"external_var":false},{"html_id":"cite(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"cite","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"cite","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<cite>\") << (HTML.escape(content.to_s))) << \"</cite>\""},"external_var":false},{"html_id":"cite(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"cite","doc":"Generates a `&lt;cite&gt;&lt;/cite&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ncite(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <cite class=\"cls-1 red\" required>Sample</cite>\n```","summary":"<p>Generates a <code>&amp;lt;cite&amp;gt;&amp;lt;/cite&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"cite","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<cite\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</cite>\"\n"},"external_var":false},{"html_id":"cite(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"cite","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"cite","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    cite(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"cite(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"cite","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"cite","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ncite received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  cite(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"cite(options,**other_options):Nil-instance-method","name":"cite","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"cite","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"cite(\"\", options, **other_options)"},"external_var":false},{"html_id":"cite(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"cite","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"cite","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<cite\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</cite>\"\n"},"external_var":false},{"html_id":"cite(&):Nil-instance-method","name":"cite","abstract":false,"def":{"name":"cite","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<cite>\"\ncheck_tag_content!(yield)\nview << \"</cite>\"\n"},"external_var":false},{"html_id":"cite(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"cite","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"cite","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<cite\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</cite>\"\n"},"external_var":false},{"html_id":"code(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"code","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"code","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<code>\") << (HTML.escape(content.to_s))) << \"</code>\""},"external_var":false},{"html_id":"code(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"code","doc":"Generates a `&lt;code&gt;&lt;/code&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ncode(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <code class=\"cls-1 red\" required>Sample</code>\n```","summary":"<p>Generates a <code>&amp;lt;code&amp;gt;&amp;lt;/code&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"code","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<code\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</code>\"\n"},"external_var":false},{"html_id":"code(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"code","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"code","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    code(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"code(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"code","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"code","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ncode received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  code(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"code(options,**other_options):Nil-instance-method","name":"code","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"code","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"code(\"\", options, **other_options)"},"external_var":false},{"html_id":"code(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"code","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"code","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<code\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</code>\"\n"},"external_var":false},{"html_id":"code(&):Nil-instance-method","name":"code","abstract":false,"def":{"name":"code","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<code>\"\ncheck_tag_content!(yield)\nview << \"</code>\"\n"},"external_var":false},{"html_id":"code(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"code","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"code","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<code\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</code>\"\n"},"external_var":false},{"html_id":"col(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"col","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"col","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<col>\") << (HTML.escape(content.to_s))) << \"</col>\""},"external_var":false},{"html_id":"col(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"col","doc":"Generates a `&lt;col&gt;&lt;/col&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ncol(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <col class=\"cls-1 red\" required>Sample</col>\n```","summary":"<p>Generates a <code>&amp;lt;col&amp;gt;&amp;lt;/col&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"col","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<col\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</col>\"\n"},"external_var":false},{"html_id":"col(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"col","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"col","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    col(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"col(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"col","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"col","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ncol received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  col(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"col(options,**other_options):Nil-instance-method","name":"col","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"col","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"col(\"\", options, **other_options)"},"external_var":false},{"html_id":"col(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"col","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"col","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<col\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</col>\"\n"},"external_var":false},{"html_id":"col(&):Nil-instance-method","name":"col","abstract":false,"def":{"name":"col","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<col>\"\ncheck_tag_content!(yield)\nview << \"</col>\"\n"},"external_var":false},{"html_id":"col(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"col","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"col","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<col\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</col>\"\n"},"external_var":false},{"html_id":"colgroup(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"colgroup","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"colgroup","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<colgroup>\") << (HTML.escape(content.to_s))) << \"</colgroup>\""},"external_var":false},{"html_id":"colgroup(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"colgroup","doc":"Generates a `&lt;colgroup&gt;&lt;/colgroup&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ncolgroup(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <colgroup class=\"cls-1 red\" required>Sample</colgroup>\n```","summary":"<p>Generates a <code>&amp;lt;colgroup&amp;gt;&amp;lt;/colgroup&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"colgroup","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<colgroup\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</colgroup>\"\n"},"external_var":false},{"html_id":"colgroup(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"colgroup","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"colgroup","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    colgroup(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"colgroup(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"colgroup","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"colgroup","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ncolgroup received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  colgroup(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"colgroup(options,**other_options):Nil-instance-method","name":"colgroup","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"colgroup","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"colgroup(\"\", options, **other_options)"},"external_var":false},{"html_id":"colgroup(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"colgroup","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"colgroup","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<colgroup\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</colgroup>\"\n"},"external_var":false},{"html_id":"colgroup(&):Nil-instance-method","name":"colgroup","abstract":false,"def":{"name":"colgroup","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<colgroup>\"\ncheck_tag_content!(yield)\nview << \"</colgroup>\"\n"},"external_var":false},{"html_id":"colgroup(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"colgroup","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"colgroup","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<colgroup\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</colgroup>\"\n"},"external_var":false},{"html_id":"data(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"data","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"data","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<data>\") << (HTML.escape(content.to_s))) << \"</data>\""},"external_var":false},{"html_id":"data(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"data","doc":"Generates a `&lt;data&gt;&lt;/data&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndata(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <data class=\"cls-1 red\" required>Sample</data>\n```","summary":"<p>Generates a <code>&amp;lt;data&amp;gt;&amp;lt;/data&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"data","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<data\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</data>\"\n"},"external_var":false},{"html_id":"data(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"data","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"data","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    data(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"data(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"data","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"data","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ndata received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  data(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"data(options,**other_options):Nil-instance-method","name":"data","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"data","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"data(\"\", options, **other_options)"},"external_var":false},{"html_id":"data(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"data","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"data","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<data\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</data>\"\n"},"external_var":false},{"html_id":"data(&):Nil-instance-method","name":"data","abstract":false,"def":{"name":"data","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<data>\"\ncheck_tag_content!(yield)\nview << \"</data>\"\n"},"external_var":false},{"html_id":"data(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"data","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"data","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<data\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</data>\"\n"},"external_var":false},{"html_id":"datalist(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"datalist","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"datalist","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<datalist>\") << (HTML.escape(content.to_s))) << \"</datalist>\""},"external_var":false},{"html_id":"datalist(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"datalist","doc":"Generates a `&lt;datalist&gt;&lt;/datalist&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndatalist(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <datalist class=\"cls-1 red\" required>Sample</datalist>\n```","summary":"<p>Generates a <code>&amp;lt;datalist&amp;gt;&amp;lt;/datalist&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"datalist","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<datalist\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</datalist>\"\n"},"external_var":false},{"html_id":"datalist(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"datalist","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"datalist","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    datalist(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"datalist(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"datalist","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"datalist","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ndatalist received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  datalist(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"datalist(options,**other_options):Nil-instance-method","name":"datalist","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"datalist","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"datalist(\"\", options, **other_options)"},"external_var":false},{"html_id":"datalist(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"datalist","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"datalist","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<datalist\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</datalist>\"\n"},"external_var":false},{"html_id":"datalist(&):Nil-instance-method","name":"datalist","abstract":false,"def":{"name":"datalist","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<datalist>\"\ncheck_tag_content!(yield)\nview << \"</datalist>\"\n"},"external_var":false},{"html_id":"datalist(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"datalist","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"datalist","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<datalist\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</datalist>\"\n"},"external_var":false},{"html_id":"dd(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"dd","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dd","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<dd>\") << (HTML.escape(content.to_s))) << \"</dd>\""},"external_var":false},{"html_id":"dd(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dd","doc":"Generates a `&lt;dd&gt;&lt;/dd&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndd(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <dd class=\"cls-1 red\" required>Sample</dd>\n```","summary":"<p>Generates a <code>&amp;lt;dd&amp;gt;&amp;lt;/dd&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dd","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<dd\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</dd>\"\n"},"external_var":false},{"html_id":"dd(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dd","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dd","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    dd(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"dd(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dd","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dd","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ndd received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  dd(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"dd(options,**other_options):Nil-instance-method","name":"dd","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dd","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"dd(\"\", options, **other_options)"},"external_var":false},{"html_id":"dd(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dd","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dd","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<dd\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dd>\"\n"},"external_var":false},{"html_id":"dd(&):Nil-instance-method","name":"dd","abstract":false,"def":{"name":"dd","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<dd>\"\ncheck_tag_content!(yield)\nview << \"</dd>\"\n"},"external_var":false},{"html_id":"dd(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dd","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dd","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<dd\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dd>\"\n"},"external_var":false},{"html_id":"del(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"del","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"del","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<del>\") << (HTML.escape(content.to_s))) << \"</del>\""},"external_var":false},{"html_id":"del(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"del","doc":"Generates a `&lt;del&gt;&lt;/del&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndel(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <del class=\"cls-1 red\" required>Sample</del>\n```","summary":"<p>Generates a <code>&amp;lt;del&amp;gt;&amp;lt;/del&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"del","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<del\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</del>\"\n"},"external_var":false},{"html_id":"del(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"del","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"del","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    del(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"del(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"del","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"del","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ndel received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  del(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"del(options,**other_options):Nil-instance-method","name":"del","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"del","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"del(\"\", options, **other_options)"},"external_var":false},{"html_id":"del(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"del","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"del","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<del\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</del>\"\n"},"external_var":false},{"html_id":"del(&):Nil-instance-method","name":"del","abstract":false,"def":{"name":"del","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<del>\"\ncheck_tag_content!(yield)\nview << \"</del>\"\n"},"external_var":false},{"html_id":"del(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"del","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"del","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<del\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</del>\"\n"},"external_var":false},{"html_id":"details(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"details","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"details","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<details>\") << (HTML.escape(content.to_s))) << \"</details>\""},"external_var":false},{"html_id":"details(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"details","doc":"Generates a `&lt;details&gt;&lt;/details&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndetails(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <details class=\"cls-1 red\" required>Sample</details>\n```","summary":"<p>Generates a <code>&amp;lt;details&amp;gt;&amp;lt;/details&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"details","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<details\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</details>\"\n"},"external_var":false},{"html_id":"details(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"details","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"details","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    details(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"details(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"details","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"details","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ndetails received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  details(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"details(options,**other_options):Nil-instance-method","name":"details","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"details","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"details(\"\", options, **other_options)"},"external_var":false},{"html_id":"details(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"details","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"details","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<details\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</details>\"\n"},"external_var":false},{"html_id":"details(&):Nil-instance-method","name":"details","abstract":false,"def":{"name":"details","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<details>\"\ncheck_tag_content!(yield)\nview << \"</details>\"\n"},"external_var":false},{"html_id":"details(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"details","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"details","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<details\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</details>\"\n"},"external_var":false},{"html_id":"dfn(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"dfn","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dfn","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<dfn>\") << (HTML.escape(content.to_s))) << \"</dfn>\""},"external_var":false},{"html_id":"dfn(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dfn","doc":"Generates a `&lt;dfn&gt;&lt;/dfn&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndfn(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <dfn class=\"cls-1 red\" required>Sample</dfn>\n```","summary":"<p>Generates a <code>&amp;lt;dfn&amp;gt;&amp;lt;/dfn&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dfn","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<dfn\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</dfn>\"\n"},"external_var":false},{"html_id":"dfn(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dfn","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dfn","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    dfn(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"dfn(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dfn","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dfn","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ndfn received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  dfn(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"dfn(options,**other_options):Nil-instance-method","name":"dfn","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dfn","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"dfn(\"\", options, **other_options)"},"external_var":false},{"html_id":"dfn(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dfn","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dfn","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<dfn\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dfn>\"\n"},"external_var":false},{"html_id":"dfn(&):Nil-instance-method","name":"dfn","abstract":false,"def":{"name":"dfn","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<dfn>\"\ncheck_tag_content!(yield)\nview << \"</dfn>\"\n"},"external_var":false},{"html_id":"dfn(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dfn","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dfn","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<dfn\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dfn>\"\n"},"external_var":false},{"html_id":"dialog(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"dialog","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dialog","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<dialog>\") << (HTML.escape(content.to_s))) << \"</dialog>\""},"external_var":false},{"html_id":"dialog(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dialog","doc":"Generates a `&lt;dialog&gt;&lt;/dialog&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndialog(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <dialog class=\"cls-1 red\" required>Sample</dialog>\n```","summary":"<p>Generates a <code>&amp;lt;dialog&amp;gt;&amp;lt;/dialog&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dialog","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<dialog\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</dialog>\"\n"},"external_var":false},{"html_id":"dialog(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dialog","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dialog","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    dialog(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"dialog(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dialog","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dialog","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ndialog received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  dialog(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"dialog(options,**other_options):Nil-instance-method","name":"dialog","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dialog","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"dialog(\"\", options, **other_options)"},"external_var":false},{"html_id":"dialog(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dialog","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dialog","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<dialog\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dialog>\"\n"},"external_var":false},{"html_id":"dialog(&):Nil-instance-method","name":"dialog","abstract":false,"def":{"name":"dialog","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<dialog>\"\ncheck_tag_content!(yield)\nview << \"</dialog>\"\n"},"external_var":false},{"html_id":"dialog(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dialog","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dialog","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<dialog\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dialog>\"\n"},"external_var":false},{"html_id":"div(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"div","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"div","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<div>\") << (HTML.escape(content.to_s))) << \"</div>\""},"external_var":false},{"html_id":"div(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"div","doc":"Generates a `&lt;div&gt;&lt;/div&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndiv(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <div class=\"cls-1 red\" required>Sample</div>\n```","summary":"<p>Generates a <code>&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"div","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<div\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</div>\"\n"},"external_var":false},{"html_id":"div(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"div","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"div","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    div(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"div(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"div","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"div","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ndiv received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  div(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"div(options,**other_options):Nil-instance-method","name":"div","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"div","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"div(\"\", options, **other_options)"},"external_var":false},{"html_id":"div(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"div","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"div","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<div\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</div>\"\n"},"external_var":false},{"html_id":"div(&):Nil-instance-method","name":"div","abstract":false,"def":{"name":"div","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<div>\"\ncheck_tag_content!(yield)\nview << \"</div>\"\n"},"external_var":false},{"html_id":"div(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"div","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"div","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<div\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</div>\"\n"},"external_var":false},{"html_id":"dl(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"dl","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dl","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<dl>\") << (HTML.escape(content.to_s))) << \"</dl>\""},"external_var":false},{"html_id":"dl(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dl","doc":"Generates a `&lt;dl&gt;&lt;/dl&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndl(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <dl class=\"cls-1 red\" required>Sample</dl>\n```","summary":"<p>Generates a <code>&amp;lt;dl&amp;gt;&amp;lt;/dl&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dl","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<dl\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</dl>\"\n"},"external_var":false},{"html_id":"dl(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dl","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dl","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    dl(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"dl(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dl","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dl","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ndl received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  dl(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"dl(options,**other_options):Nil-instance-method","name":"dl","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dl","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"dl(\"\", options, **other_options)"},"external_var":false},{"html_id":"dl(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dl","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dl","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<dl\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dl>\"\n"},"external_var":false},{"html_id":"dl(&):Nil-instance-method","name":"dl","abstract":false,"def":{"name":"dl","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<dl>\"\ncheck_tag_content!(yield)\nview << \"</dl>\"\n"},"external_var":false},{"html_id":"dl(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dl","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dl","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<dl\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dl>\"\n"},"external_var":false},{"html_id":"dt(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"dt","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dt","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<dt>\") << (HTML.escape(content.to_s))) << \"</dt>\""},"external_var":false},{"html_id":"dt(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dt","doc":"Generates a `&lt;dt&gt;&lt;/dt&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndt(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <dt class=\"cls-1 red\" required>Sample</dt>\n```","summary":"<p>Generates a <code>&amp;lt;dt&amp;gt;&amp;lt;/dt&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dt","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<dt\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</dt>\"\n"},"external_var":false},{"html_id":"dt(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dt","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dt","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    dt(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"dt(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dt","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dt","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ndt received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  dt(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"dt(options,**other_options):Nil-instance-method","name":"dt","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dt","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"dt(\"\", options, **other_options)"},"external_var":false},{"html_id":"dt(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dt","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dt","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<dt\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dt>\"\n"},"external_var":false},{"html_id":"dt(&):Nil-instance-method","name":"dt","abstract":false,"def":{"name":"dt","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<dt>\"\ncheck_tag_content!(yield)\nview << \"</dt>\"\n"},"external_var":false},{"html_id":"dt(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dt","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"dt","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<dt\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dt>\"\n"},"external_var":false},{"html_id":"em(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"em","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"em","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<em>\") << (HTML.escape(content.to_s))) << \"</em>\""},"external_var":false},{"html_id":"em(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"em","doc":"Generates a `&lt;em&gt;&lt;/em&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nem(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <em class=\"cls-1 red\" required>Sample</em>\n```","summary":"<p>Generates a <code>&amp;lt;em&amp;gt;&amp;lt;/em&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"em","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<em\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</em>\"\n"},"external_var":false},{"html_id":"em(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"em","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"em","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    em(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"em(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"em","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"em","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nem received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  em(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"em(options,**other_options):Nil-instance-method","name":"em","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"em","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"em(\"\", options, **other_options)"},"external_var":false},{"html_id":"em(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"em","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"em","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<em\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</em>\"\n"},"external_var":false},{"html_id":"em(&):Nil-instance-method","name":"em","abstract":false,"def":{"name":"em","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<em>\"\ncheck_tag_content!(yield)\nview << \"</em>\"\n"},"external_var":false},{"html_id":"em(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"em","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"em","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<em\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</em>\"\n"},"external_var":false},{"html_id":"embed(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"embed","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"embed","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<embed>\") << (HTML.escape(content.to_s))) << \"</embed>\""},"external_var":false},{"html_id":"embed(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"embed","doc":"Generates a `&lt;embed&gt;&lt;/embed&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nembed(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <embed class=\"cls-1 red\" required>Sample</embed>\n```","summary":"<p>Generates a <code>&amp;lt;embed&amp;gt;&amp;lt;/embed&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"embed","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<embed\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</embed>\"\n"},"external_var":false},{"html_id":"embed(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"embed","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"embed","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    embed(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"embed(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"embed","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"embed","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nembed received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  embed(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"embed(options,**other_options):Nil-instance-method","name":"embed","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"embed","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"embed(\"\", options, **other_options)"},"external_var":false},{"html_id":"embed(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"embed","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"embed","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<embed\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</embed>\"\n"},"external_var":false},{"html_id":"embed(&):Nil-instance-method","name":"embed","abstract":false,"def":{"name":"embed","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<embed>\"\ncheck_tag_content!(yield)\nview << \"</embed>\"\n"},"external_var":false},{"html_id":"embed(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"embed","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"embed","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<embed\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</embed>\"\n"},"external_var":false},{"html_id":"fieldset(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"fieldset","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"fieldset","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<fieldset>\") << (HTML.escape(content.to_s))) << \"</fieldset>\""},"external_var":false},{"html_id":"fieldset(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"fieldset","doc":"Generates a `&lt;fieldset&gt;&lt;/fieldset&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nfieldset(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <fieldset class=\"cls-1 red\" required>Sample</fieldset>\n```","summary":"<p>Generates a <code>&amp;lt;fieldset&amp;gt;&amp;lt;/fieldset&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"fieldset","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<fieldset\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</fieldset>\"\n"},"external_var":false},{"html_id":"fieldset(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"fieldset","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"fieldset","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    fieldset(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"fieldset(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"fieldset","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"fieldset","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nfieldset received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  fieldset(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"fieldset(options,**other_options):Nil-instance-method","name":"fieldset","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"fieldset","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"fieldset(\"\", options, **other_options)"},"external_var":false},{"html_id":"fieldset(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"fieldset","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"fieldset","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<fieldset\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</fieldset>\"\n"},"external_var":false},{"html_id":"fieldset(&):Nil-instance-method","name":"fieldset","abstract":false,"def":{"name":"fieldset","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<fieldset>\"\ncheck_tag_content!(yield)\nview << \"</fieldset>\"\n"},"external_var":false},{"html_id":"fieldset(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"fieldset","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"fieldset","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<fieldset\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</fieldset>\"\n"},"external_var":false},{"html_id":"figcaption(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"figcaption","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figcaption","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<figcaption>\") << (HTML.escape(content.to_s))) << \"</figcaption>\""},"external_var":false},{"html_id":"figcaption(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"figcaption","doc":"Generates a `&lt;figcaption&gt;&lt;/figcaption&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nfigcaption(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <figcaption class=\"cls-1 red\" required>Sample</figcaption>\n```","summary":"<p>Generates a <code>&amp;lt;figcaption&amp;gt;&amp;lt;/figcaption&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figcaption","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<figcaption\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</figcaption>\"\n"},"external_var":false},{"html_id":"figcaption(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"figcaption","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figcaption","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    figcaption(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"figcaption(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"figcaption","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figcaption","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nfigcaption received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  figcaption(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"figcaption(options,**other_options):Nil-instance-method","name":"figcaption","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figcaption","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"figcaption(\"\", options, **other_options)"},"external_var":false},{"html_id":"figcaption(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"figcaption","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figcaption","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<figcaption\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</figcaption>\"\n"},"external_var":false},{"html_id":"figcaption(&):Nil-instance-method","name":"figcaption","abstract":false,"def":{"name":"figcaption","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<figcaption>\"\ncheck_tag_content!(yield)\nview << \"</figcaption>\"\n"},"external_var":false},{"html_id":"figcaption(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"figcaption","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figcaption","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<figcaption\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</figcaption>\"\n"},"external_var":false},{"html_id":"figure(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"figure","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figure","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<figure>\") << (HTML.escape(content.to_s))) << \"</figure>\""},"external_var":false},{"html_id":"figure(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"figure","doc":"Generates a `&lt;figure&gt;&lt;/figure&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nfigure(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <figure class=\"cls-1 red\" required>Sample</figure>\n```","summary":"<p>Generates a <code>&amp;lt;figure&amp;gt;&amp;lt;/figure&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figure","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<figure\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</figure>\"\n"},"external_var":false},{"html_id":"figure(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"figure","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figure","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    figure(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"figure(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"figure","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figure","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nfigure received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  figure(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"figure(options,**other_options):Nil-instance-method","name":"figure","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figure","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"figure(\"\", options, **other_options)"},"external_var":false},{"html_id":"figure(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"figure","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figure","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<figure\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</figure>\"\n"},"external_var":false},{"html_id":"figure(&):Nil-instance-method","name":"figure","abstract":false,"def":{"name":"figure","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<figure>\"\ncheck_tag_content!(yield)\nview << \"</figure>\"\n"},"external_var":false},{"html_id":"figure(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"figure","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"figure","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<figure\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</figure>\"\n"},"external_var":false},{"html_id":"footer(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"footer","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"footer","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<footer>\") << (HTML.escape(content.to_s))) << \"</footer>\""},"external_var":false},{"html_id":"footer(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"footer","doc":"Generates a `&lt;footer&gt;&lt;/footer&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nfooter(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <footer class=\"cls-1 red\" required>Sample</footer>\n```","summary":"<p>Generates a <code>&amp;lt;footer&amp;gt;&amp;lt;/footer&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"footer","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<footer\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</footer>\"\n"},"external_var":false},{"html_id":"footer(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"footer","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"footer","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    footer(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"footer(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"footer","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"footer","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nfooter received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  footer(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"footer(options,**other_options):Nil-instance-method","name":"footer","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"footer","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"footer(\"\", options, **other_options)"},"external_var":false},{"html_id":"footer(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"footer","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"footer","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<footer\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</footer>\"\n"},"external_var":false},{"html_id":"footer(&):Nil-instance-method","name":"footer","abstract":false,"def":{"name":"footer","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<footer>\"\ncheck_tag_content!(yield)\nview << \"</footer>\"\n"},"external_var":false},{"html_id":"footer(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"footer","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"footer","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<footer\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</footer>\"\n"},"external_var":false},{"html_id":"form(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"form","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"form","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<form>\") << (HTML.escape(content.to_s))) << \"</form>\""},"external_var":false},{"html_id":"form(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"form","doc":"Generates a `&lt;form&gt;&lt;/form&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nform(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <form class=\"cls-1 red\" required>Sample</form>\n```","summary":"<p>Generates a <code>&amp;lt;form&amp;gt;&amp;lt;/form&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"form","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<form\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</form>\"\n"},"external_var":false},{"html_id":"form(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"form","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"form","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    form(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"form(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"form","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"form","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nform received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  form(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"form(options,**other_options):Nil-instance-method","name":"form","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"form","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"form(\"\", options, **other_options)"},"external_var":false},{"html_id":"form(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"form","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"form","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<form\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</form>\"\n"},"external_var":false},{"html_id":"form(&):Nil-instance-method","name":"form","abstract":false,"def":{"name":"form","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<form>\"\ncheck_tag_content!(yield)\nview << \"</form>\"\n"},"external_var":false},{"html_id":"form(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"form","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"form","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<form\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</form>\"\n"},"external_var":false},{"html_id":"h1(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"h1","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h1","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<h1>\") << (HTML.escape(content.to_s))) << \"</h1>\""},"external_var":false},{"html_id":"h1(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h1","doc":"Generates a `&lt;h1&gt;&lt;/h1&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nh1(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <h1 class=\"cls-1 red\" required>Sample</h1>\n```","summary":"<p>Generates a <code>&amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h1","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<h1\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</h1>\"\n"},"external_var":false},{"html_id":"h1(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h1","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h1","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    h1(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"h1(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h1","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h1","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nh1 received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  h1(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"h1(options,**other_options):Nil-instance-method","name":"h1","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h1","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"h1(\"\", options, **other_options)"},"external_var":false},{"html_id":"h1(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h1","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h1","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<h1\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h1>\"\n"},"external_var":false},{"html_id":"h1(&):Nil-instance-method","name":"h1","abstract":false,"def":{"name":"h1","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<h1>\"\ncheck_tag_content!(yield)\nview << \"</h1>\"\n"},"external_var":false},{"html_id":"h1(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h1","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h1","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<h1\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h1>\"\n"},"external_var":false},{"html_id":"h2(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"h2","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h2","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<h2>\") << (HTML.escape(content.to_s))) << \"</h2>\""},"external_var":false},{"html_id":"h2(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h2","doc":"Generates a `&lt;h2&gt;&lt;/h2&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nh2(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <h2 class=\"cls-1 red\" required>Sample</h2>\n```","summary":"<p>Generates a <code>&amp;lt;h2&amp;gt;&amp;lt;/h2&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h2","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<h2\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</h2>\"\n"},"external_var":false},{"html_id":"h2(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h2","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h2","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    h2(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"h2(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h2","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h2","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nh2 received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  h2(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"h2(options,**other_options):Nil-instance-method","name":"h2","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h2","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"h2(\"\", options, **other_options)"},"external_var":false},{"html_id":"h2(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h2","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h2","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<h2\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h2>\"\n"},"external_var":false},{"html_id":"h2(&):Nil-instance-method","name":"h2","abstract":false,"def":{"name":"h2","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<h2>\"\ncheck_tag_content!(yield)\nview << \"</h2>\"\n"},"external_var":false},{"html_id":"h2(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h2","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h2","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<h2\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h2>\"\n"},"external_var":false},{"html_id":"h3(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"h3","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h3","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<h3>\") << (HTML.escape(content.to_s))) << \"</h3>\""},"external_var":false},{"html_id":"h3(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h3","doc":"Generates a `&lt;h3&gt;&lt;/h3&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nh3(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <h3 class=\"cls-1 red\" required>Sample</h3>\n```","summary":"<p>Generates a <code>&amp;lt;h3&amp;gt;&amp;lt;/h3&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h3","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<h3\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</h3>\"\n"},"external_var":false},{"html_id":"h3(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h3","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h3","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    h3(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"h3(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h3","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h3","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nh3 received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  h3(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"h3(options,**other_options):Nil-instance-method","name":"h3","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h3","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"h3(\"\", options, **other_options)"},"external_var":false},{"html_id":"h3(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h3","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h3","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<h3\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h3>\"\n"},"external_var":false},{"html_id":"h3(&):Nil-instance-method","name":"h3","abstract":false,"def":{"name":"h3","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<h3>\"\ncheck_tag_content!(yield)\nview << \"</h3>\"\n"},"external_var":false},{"html_id":"h3(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h3","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h3","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<h3\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h3>\"\n"},"external_var":false},{"html_id":"h4(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"h4","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h4","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<h4>\") << (HTML.escape(content.to_s))) << \"</h4>\""},"external_var":false},{"html_id":"h4(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h4","doc":"Generates a `&lt;h4&gt;&lt;/h4&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nh4(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <h4 class=\"cls-1 red\" required>Sample</h4>\n```","summary":"<p>Generates a <code>&amp;lt;h4&amp;gt;&amp;lt;/h4&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h4","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<h4\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</h4>\"\n"},"external_var":false},{"html_id":"h4(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h4","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h4","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    h4(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"h4(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h4","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h4","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nh4 received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  h4(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"h4(options,**other_options):Nil-instance-method","name":"h4","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h4","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"h4(\"\", options, **other_options)"},"external_var":false},{"html_id":"h4(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h4","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h4","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<h4\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h4>\"\n"},"external_var":false},{"html_id":"h4(&):Nil-instance-method","name":"h4","abstract":false,"def":{"name":"h4","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<h4>\"\ncheck_tag_content!(yield)\nview << \"</h4>\"\n"},"external_var":false},{"html_id":"h4(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h4","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h4","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<h4\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h4>\"\n"},"external_var":false},{"html_id":"h5(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"h5","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h5","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<h5>\") << (HTML.escape(content.to_s))) << \"</h5>\""},"external_var":false},{"html_id":"h5(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h5","doc":"Generates a `&lt;h5&gt;&lt;/h5&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nh5(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <h5 class=\"cls-1 red\" required>Sample</h5>\n```","summary":"<p>Generates a <code>&amp;lt;h5&amp;gt;&amp;lt;/h5&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h5","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<h5\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</h5>\"\n"},"external_var":false},{"html_id":"h5(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h5","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h5","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    h5(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"h5(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h5","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h5","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nh5 received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  h5(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"h5(options,**other_options):Nil-instance-method","name":"h5","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h5","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"h5(\"\", options, **other_options)"},"external_var":false},{"html_id":"h5(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h5","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h5","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<h5\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h5>\"\n"},"external_var":false},{"html_id":"h5(&):Nil-instance-method","name":"h5","abstract":false,"def":{"name":"h5","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<h5>\"\ncheck_tag_content!(yield)\nview << \"</h5>\"\n"},"external_var":false},{"html_id":"h5(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h5","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h5","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<h5\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h5>\"\n"},"external_var":false},{"html_id":"h6(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"h6","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h6","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<h6>\") << (HTML.escape(content.to_s))) << \"</h6>\""},"external_var":false},{"html_id":"h6(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h6","doc":"Generates a `&lt;h6&gt;&lt;/h6&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nh6(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <h6 class=\"cls-1 red\" required>Sample</h6>\n```","summary":"<p>Generates a <code>&amp;lt;h6&amp;gt;&amp;lt;/h6&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h6","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<h6\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</h6>\"\n"},"external_var":false},{"html_id":"h6(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h6","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h6","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    h6(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"h6(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h6","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h6","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nh6 received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  h6(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"h6(options,**other_options):Nil-instance-method","name":"h6","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h6","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"h6(\"\", options, **other_options)"},"external_var":false},{"html_id":"h6(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h6","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h6","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<h6\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h6>\"\n"},"external_var":false},{"html_id":"h6(&):Nil-instance-method","name":"h6","abstract":false,"def":{"name":"h6","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<h6>\"\ncheck_tag_content!(yield)\nview << \"</h6>\"\n"},"external_var":false},{"html_id":"h6(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h6","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"h6","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<h6\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h6>\"\n"},"external_var":false},{"html_id":"head(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"head","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"head","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<head>\") << (HTML.escape(content.to_s))) << \"</head>\""},"external_var":false},{"html_id":"head(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"head","doc":"Generates a `&lt;head&gt;&lt;/head&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nhead(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <head class=\"cls-1 red\" required>Sample</head>\n```","summary":"<p>Generates a <code>&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"head","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<head\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</head>\"\n"},"external_var":false},{"html_id":"head(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"head","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"head","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    head(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"head(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"head","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"head","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nhead received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  head(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"head(options,**other_options):Nil-instance-method","name":"head","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"head","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"head(\"\", options, **other_options)"},"external_var":false},{"html_id":"head(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"head","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"head","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<head\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</head>\"\n"},"external_var":false},{"html_id":"head(&):Nil-instance-method","name":"head","abstract":false,"def":{"name":"head","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<head>\"\ncheck_tag_content!(yield)\nview << \"</head>\"\n"},"external_var":false},{"html_id":"head(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"head","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"head","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<head\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</head>\"\n"},"external_var":false},{"html_id":"header(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"header","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"header","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<header>\") << (HTML.escape(content.to_s))) << \"</header>\""},"external_var":false},{"html_id":"header(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"header","doc":"Generates a `&lt;header&gt;&lt;/header&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nheader(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <header class=\"cls-1 red\" required>Sample</header>\n```","summary":"<p>Generates a <code>&amp;lt;header&amp;gt;&amp;lt;/header&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"header","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<header\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</header>\"\n"},"external_var":false},{"html_id":"header(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"header","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"header","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    header(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"header(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"header","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"header","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nheader received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  header(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"header(options,**other_options):Nil-instance-method","name":"header","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"header","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"header(\"\", options, **other_options)"},"external_var":false},{"html_id":"header(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"header","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"header","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<header\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</header>\"\n"},"external_var":false},{"html_id":"header(&):Nil-instance-method","name":"header","abstract":false,"def":{"name":"header","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<header>\"\ncheck_tag_content!(yield)\nview << \"</header>\"\n"},"external_var":false},{"html_id":"header(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"header","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"header","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<header\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</header>\"\n"},"external_var":false},{"html_id":"hr(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"hr","doc":"Generates a `&lt;hr&gt;` tag.\n\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n```\nhr([:required], {\"class\" => \"cls-1\"}) #=> <hr class=\"cls-1\" required>\n```","summary":"<p>Generates a <code>&amp;lt;hr&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"hr","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"bool_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nview << \"<hr#{tag_attrs}#{bool_attrs}>\"\n"},"external_var":false},{"html_id":"hr:Nil-instance-method","name":"hr","doc":"Generates a `&lt;hr&gt;` tag.","summary":"<p>Generates a <code>&amp;lt;hr&amp;gt;</code> tag.</p>","abstract":false,"location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"hr","return_type":"Nil","visibility":"Public","body":"view << \"<hr>\""},"external_var":false},{"html_id":"hr(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"hr","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"hr","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"hr([] of Symbol, options, **other_options)"},"external_var":false},{"html_id":"html(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"html","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"html","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<html>\") << (HTML.escape(content.to_s))) << \"</html>\""},"external_var":false},{"html_id":"html(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"html","doc":"Generates a `&lt;html&gt;&lt;/html&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nhtml(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <html class=\"cls-1 red\" required>Sample</html>\n```","summary":"<p>Generates a <code>&amp;lt;html&amp;gt;&amp;lt;/html&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"html","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<html\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</html>\"\n"},"external_var":false},{"html_id":"html(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"html","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"html","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    html(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"html(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"html","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"html","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nhtml received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  html(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"html(options,**other_options):Nil-instance-method","name":"html","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"html","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"html(\"\", options, **other_options)"},"external_var":false},{"html_id":"html(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"html","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"html","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<html\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</html>\"\n"},"external_var":false},{"html_id":"html(&):Nil-instance-method","name":"html","abstract":false,"def":{"name":"html","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<html>\"\ncheck_tag_content!(yield)\nview << \"</html>\"\n"},"external_var":false},{"html_id":"html(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"html","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"html","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<html\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</html>\"\n"},"external_var":false},{"html_id":"i(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"i","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"i","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<i>\") << (HTML.escape(content.to_s))) << \"</i>\""},"external_var":false},{"html_id":"i(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"i","doc":"Generates a `&lt;i&gt;&lt;/i&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ni(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <i class=\"cls-1 red\" required>Sample</i>\n```","summary":"<p>Generates a <code>&amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"i","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<i\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</i>\"\n"},"external_var":false},{"html_id":"i(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"i","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"i","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    i(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"i(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"i","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"i","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ni received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  i(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"i(options,**other_options):Nil-instance-method","name":"i","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"i","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"i(\"\", options, **other_options)"},"external_var":false},{"html_id":"i(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"i","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"i","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<i\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</i>\"\n"},"external_var":false},{"html_id":"i(&):Nil-instance-method","name":"i","abstract":false,"def":{"name":"i","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<i>\"\ncheck_tag_content!(yield)\nview << \"</i>\"\n"},"external_var":false},{"html_id":"i(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"i","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"i","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<i\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</i>\"\n"},"external_var":false},{"html_id":"iframe(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"iframe","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"iframe","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<iframe>\") << (HTML.escape(content.to_s))) << \"</iframe>\""},"external_var":false},{"html_id":"iframe(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"iframe","doc":"Generates a `&lt;iframe&gt;&lt;/iframe&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\niframe(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <iframe class=\"cls-1 red\" required>Sample</iframe>\n```","summary":"<p>Generates a <code>&amp;lt;iframe&amp;gt;&amp;lt;/iframe&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"iframe","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<iframe\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</iframe>\"\n"},"external_var":false},{"html_id":"iframe(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"iframe","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"iframe","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    iframe(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"iframe(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"iframe","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"iframe","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\niframe received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  iframe(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"iframe(options,**other_options):Nil-instance-method","name":"iframe","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"iframe","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"iframe(\"\", options, **other_options)"},"external_var":false},{"html_id":"iframe(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"iframe","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"iframe","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<iframe\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</iframe>\"\n"},"external_var":false},{"html_id":"iframe(&):Nil-instance-method","name":"iframe","abstract":false,"def":{"name":"iframe","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<iframe>\"\ncheck_tag_content!(yield)\nview << \"</iframe>\"\n"},"external_var":false},{"html_id":"iframe(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"iframe","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"iframe","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<iframe\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</iframe>\"\n"},"external_var":false},{"html_id":"img(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"img","doc":"Generates a `&lt;img&gt;` tag.\n\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n```\nimg([:required], {\"class\" => \"cls-1\"}) #=> <img class=\"cls-1\" required>\n```","summary":"<p>Generates a <code>&amp;lt;img&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"img","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"bool_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nview << \"<img#{tag_attrs}#{bool_attrs}>\"\n"},"external_var":false},{"html_id":"img:Nil-instance-method","name":"img","doc":"Generates a `&lt;img&gt;` tag.","summary":"<p>Generates a <code>&amp;lt;img&amp;gt;</code> tag.</p>","abstract":false,"location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"img","return_type":"Nil","visibility":"Public","body":"view << \"<img>\""},"external_var":false},{"html_id":"img(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"img","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"img","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"img([] of Symbol, options, **other_options)"},"external_var":false},{"html_id":"input(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"input","doc":"Generates a `&lt;input&gt;` tag.\n\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n```\ninput([:required], {\"class\" => \"cls-1\"}) #=> <input class=\"cls-1\" required>\n```","summary":"<p>Generates a <code>&amp;lt;input&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"input","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"bool_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nview << \"<input#{tag_attrs}#{bool_attrs}>\"\n"},"external_var":false},{"html_id":"input:Nil-instance-method","name":"input","doc":"Generates a `&lt;input&gt;` tag.","summary":"<p>Generates a <code>&amp;lt;input&amp;gt;</code> tag.</p>","abstract":false,"location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"input","return_type":"Nil","visibility":"Public","body":"view << \"<input>\""},"external_var":false},{"html_id":"input(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"input","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"input","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"input([] of Symbol, options, **other_options)"},"external_var":false},{"html_id":"ins(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"ins","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ins","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<ins>\") << (HTML.escape(content.to_s))) << \"</ins>\""},"external_var":false},{"html_id":"ins(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ins","doc":"Generates a `&lt;ins&gt;&lt;/ins&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nins(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <ins class=\"cls-1 red\" required>Sample</ins>\n```","summary":"<p>Generates a <code>&amp;lt;ins&amp;gt;&amp;lt;/ins&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ins","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<ins\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</ins>\"\n"},"external_var":false},{"html_id":"ins(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ins","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ins","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    ins(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"ins(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ins","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ins","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nins received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  ins(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"ins(options,**other_options):Nil-instance-method","name":"ins","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ins","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"ins(\"\", options, **other_options)"},"external_var":false},{"html_id":"ins(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ins","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ins","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<ins\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ins>\"\n"},"external_var":false},{"html_id":"ins(&):Nil-instance-method","name":"ins","abstract":false,"def":{"name":"ins","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<ins>\"\ncheck_tag_content!(yield)\nview << \"</ins>\"\n"},"external_var":false},{"html_id":"ins(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ins","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ins","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<ins\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ins>\"\n"},"external_var":false},{"html_id":"kbd(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"kbd","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"kbd","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<kbd>\") << (HTML.escape(content.to_s))) << \"</kbd>\""},"external_var":false},{"html_id":"kbd(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"kbd","doc":"Generates a `&lt;kbd&gt;&lt;/kbd&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nkbd(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <kbd class=\"cls-1 red\" required>Sample</kbd>\n```","summary":"<p>Generates a <code>&amp;lt;kbd&amp;gt;&amp;lt;/kbd&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"kbd","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<kbd\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</kbd>\"\n"},"external_var":false},{"html_id":"kbd(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"kbd","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"kbd","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    kbd(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"kbd(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"kbd","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"kbd","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nkbd received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  kbd(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"kbd(options,**other_options):Nil-instance-method","name":"kbd","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"kbd","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"kbd(\"\", options, **other_options)"},"external_var":false},{"html_id":"kbd(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"kbd","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"kbd","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<kbd\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</kbd>\"\n"},"external_var":false},{"html_id":"kbd(&):Nil-instance-method","name":"kbd","abstract":false,"def":{"name":"kbd","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<kbd>\"\ncheck_tag_content!(yield)\nview << \"</kbd>\"\n"},"external_var":false},{"html_id":"kbd(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"kbd","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"kbd","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<kbd\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</kbd>\"\n"},"external_var":false},{"html_id":"label(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"label","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"label","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<label>\") << (HTML.escape(content.to_s))) << \"</label>\""},"external_var":false},{"html_id":"label(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"label","doc":"Generates a `&lt;label&gt;&lt;/label&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nlabel(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <label class=\"cls-1 red\" required>Sample</label>\n```","summary":"<p>Generates a <code>&amp;lt;label&amp;gt;&amp;lt;/label&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"label","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<label\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</label>\"\n"},"external_var":false},{"html_id":"label(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"label","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"label","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    label(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"label(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"label","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"label","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nlabel received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  label(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"label(options,**other_options):Nil-instance-method","name":"label","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"label","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"label(\"\", options, **other_options)"},"external_var":false},{"html_id":"label(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"label","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"label","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<label\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</label>\"\n"},"external_var":false},{"html_id":"label(&):Nil-instance-method","name":"label","abstract":false,"def":{"name":"label","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<label>\"\ncheck_tag_content!(yield)\nview << \"</label>\"\n"},"external_var":false},{"html_id":"label(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"label","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"label","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<label\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</label>\"\n"},"external_var":false},{"html_id":"legend(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"legend","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"legend","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<legend>\") << (HTML.escape(content.to_s))) << \"</legend>\""},"external_var":false},{"html_id":"legend(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"legend","doc":"Generates a `&lt;legend&gt;&lt;/legend&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nlegend(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <legend class=\"cls-1 red\" required>Sample</legend>\n```","summary":"<p>Generates a <code>&amp;lt;legend&amp;gt;&amp;lt;/legend&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"legend","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<legend\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</legend>\"\n"},"external_var":false},{"html_id":"legend(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"legend","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"legend","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    legend(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"legend(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"legend","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"legend","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nlegend received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  legend(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"legend(options,**other_options):Nil-instance-method","name":"legend","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"legend","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"legend(\"\", options, **other_options)"},"external_var":false},{"html_id":"legend(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"legend","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"legend","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<legend\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</legend>\"\n"},"external_var":false},{"html_id":"legend(&):Nil-instance-method","name":"legend","abstract":false,"def":{"name":"legend","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<legend>\"\ncheck_tag_content!(yield)\nview << \"</legend>\"\n"},"external_var":false},{"html_id":"legend(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"legend","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"legend","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<legend\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</legend>\"\n"},"external_var":false},{"html_id":"li(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"li","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"li","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<li>\") << (HTML.escape(content.to_s))) << \"</li>\""},"external_var":false},{"html_id":"li(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"li","doc":"Generates a `&lt;li&gt;&lt;/li&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nli(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <li class=\"cls-1 red\" required>Sample</li>\n```","summary":"<p>Generates a <code>&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"li","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<li\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</li>\"\n"},"external_var":false},{"html_id":"li(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"li","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"li","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    li(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"li(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"li","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"li","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nli received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  li(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"li(options,**other_options):Nil-instance-method","name":"li","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"li","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"li(\"\", options, **other_options)"},"external_var":false},{"html_id":"li(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"li","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"li","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<li\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</li>\"\n"},"external_var":false},{"html_id":"li(&):Nil-instance-method","name":"li","abstract":false,"def":{"name":"li","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<li>\"\ncheck_tag_content!(yield)\nview << \"</li>\"\n"},"external_var":false},{"html_id":"li(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"li","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"li","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<li\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</li>\"\n"},"external_var":false},{"html_id":"main(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"main","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"main","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<main>\") << (HTML.escape(content.to_s))) << \"</main>\""},"external_var":false},{"html_id":"main(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"main","doc":"Generates a `&lt;main&gt;&lt;/main&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nmain(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <main class=\"cls-1 red\" required>Sample</main>\n```","summary":"<p>Generates a <code>&amp;lt;main&amp;gt;&amp;lt;/main&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"main","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<main\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</main>\"\n"},"external_var":false},{"html_id":"main(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"main","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"main","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    main(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"main(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"main","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"main","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nmain received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  main(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"main(options,**other_options):Nil-instance-method","name":"main","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"main","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"main(\"\", options, **other_options)"},"external_var":false},{"html_id":"main(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"main","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"main","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<main\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</main>\"\n"},"external_var":false},{"html_id":"main(&):Nil-instance-method","name":"main","abstract":false,"def":{"name":"main","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<main>\"\ncheck_tag_content!(yield)\nview << \"</main>\"\n"},"external_var":false},{"html_id":"main(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"main","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"main","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<main\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</main>\"\n"},"external_var":false},{"html_id":"map(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"map","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"map","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<map>\") << (HTML.escape(content.to_s))) << \"</map>\""},"external_var":false},{"html_id":"map(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"map","doc":"Generates a `&lt;map&gt;&lt;/map&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nmap(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <map class=\"cls-1 red\" required>Sample</map>\n```","summary":"<p>Generates a <code>&amp;lt;map&amp;gt;&amp;lt;/map&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"map","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<map\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</map>\"\n"},"external_var":false},{"html_id":"map(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"map","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"map","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    map(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"map(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"map","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"map","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nmap received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  map(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"map(options,**other_options):Nil-instance-method","name":"map","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"map","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"map(\"\", options, **other_options)"},"external_var":false},{"html_id":"map(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"map","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"map","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<map\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</map>\"\n"},"external_var":false},{"html_id":"map(&):Nil-instance-method","name":"map","abstract":false,"def":{"name":"map","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<map>\"\ncheck_tag_content!(yield)\nview << \"</map>\"\n"},"external_var":false},{"html_id":"map(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"map","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"map","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<map\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</map>\"\n"},"external_var":false},{"html_id":"mark(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"mark","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"mark","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<mark>\") << (HTML.escape(content.to_s))) << \"</mark>\""},"external_var":false},{"html_id":"mark(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"mark","doc":"Generates a `&lt;mark&gt;&lt;/mark&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nmark(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <mark class=\"cls-1 red\" required>Sample</mark>\n```","summary":"<p>Generates a <code>&amp;lt;mark&amp;gt;&amp;lt;/mark&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"mark","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<mark\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</mark>\"\n"},"external_var":false},{"html_id":"mark(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"mark","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"mark","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    mark(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"mark(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"mark","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"mark","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nmark received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  mark(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"mark(options,**other_options):Nil-instance-method","name":"mark","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"mark","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"mark(\"\", options, **other_options)"},"external_var":false},{"html_id":"mark(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"mark","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"mark","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<mark\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</mark>\"\n"},"external_var":false},{"html_id":"mark(&):Nil-instance-method","name":"mark","abstract":false,"def":{"name":"mark","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<mark>\"\ncheck_tag_content!(yield)\nview << \"</mark>\"\n"},"external_var":false},{"html_id":"mark(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"mark","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"mark","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<mark\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</mark>\"\n"},"external_var":false},{"html_id":"menuitem(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"menuitem","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"menuitem","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<menuitem>\") << (HTML.escape(content.to_s))) << \"</menuitem>\""},"external_var":false},{"html_id":"menuitem(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"menuitem","doc":"Generates a `&lt;menuitem&gt;&lt;/menuitem&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nmenuitem(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <menuitem class=\"cls-1 red\" required>Sample</menuitem>\n```","summary":"<p>Generates a <code>&amp;lt;menuitem&amp;gt;&amp;lt;/menuitem&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"menuitem","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<menuitem\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</menuitem>\"\n"},"external_var":false},{"html_id":"menuitem(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"menuitem","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"menuitem","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    menuitem(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"menuitem(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"menuitem","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"menuitem","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nmenuitem received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  menuitem(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"menuitem(options,**other_options):Nil-instance-method","name":"menuitem","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"menuitem","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"menuitem(\"\", options, **other_options)"},"external_var":false},{"html_id":"menuitem(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"menuitem","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"menuitem","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<menuitem\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</menuitem>\"\n"},"external_var":false},{"html_id":"menuitem(&):Nil-instance-method","name":"menuitem","abstract":false,"def":{"name":"menuitem","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<menuitem>\"\ncheck_tag_content!(yield)\nview << \"</menuitem>\"\n"},"external_var":false},{"html_id":"menuitem(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"menuitem","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"menuitem","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<menuitem\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</menuitem>\"\n"},"external_var":false},{"html_id":"meta(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"meta","doc":"Generates a `&lt;meta&gt;` tag.\n\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n```\nmeta([:required], {\"class\" => \"cls-1\"}) #=> <meta class=\"cls-1\" required>\n```","summary":"<p>Generates a <code>&amp;lt;meta&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"meta","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"bool_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nview << \"<meta#{tag_attrs}#{bool_attrs}>\"\n"},"external_var":false},{"html_id":"meta:Nil-instance-method","name":"meta","doc":"Generates a `&lt;meta&gt;` tag.","summary":"<p>Generates a <code>&amp;lt;meta&amp;gt;</code> tag.</p>","abstract":false,"location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"meta","return_type":"Nil","visibility":"Public","body":"view << \"<meta>\""},"external_var":false},{"html_id":"meta(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"meta","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"meta","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"meta([] of Symbol, options, **other_options)"},"external_var":false},{"html_id":"meter(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"meter","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"meter","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<meter>\") << (HTML.escape(content.to_s))) << \"</meter>\""},"external_var":false},{"html_id":"meter(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"meter","doc":"Generates a `&lt;meter&gt;&lt;/meter&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nmeter(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <meter class=\"cls-1 red\" required>Sample</meter>\n```","summary":"<p>Generates a <code>&amp;lt;meter&amp;gt;&amp;lt;/meter&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"meter","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<meter\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</meter>\"\n"},"external_var":false},{"html_id":"meter(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"meter","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"meter","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    meter(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"meter(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"meter","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"meter","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nmeter received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  meter(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"meter(options,**other_options):Nil-instance-method","name":"meter","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"meter","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"meter(\"\", options, **other_options)"},"external_var":false},{"html_id":"meter(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"meter","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"meter","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<meter\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</meter>\"\n"},"external_var":false},{"html_id":"meter(&):Nil-instance-method","name":"meter","abstract":false,"def":{"name":"meter","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<meter>\"\ncheck_tag_content!(yield)\nview << \"</meter>\"\n"},"external_var":false},{"html_id":"meter(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"meter","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"meter","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<meter\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</meter>\"\n"},"external_var":false},{"html_id":"nav(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"nav","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"nav","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<nav>\") << (HTML.escape(content.to_s))) << \"</nav>\""},"external_var":false},{"html_id":"nav(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"nav","doc":"Generates a `&lt;nav&gt;&lt;/nav&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nnav(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <nav class=\"cls-1 red\" required>Sample</nav>\n```","summary":"<p>Generates a <code>&amp;lt;nav&amp;gt;&amp;lt;/nav&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"nav","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<nav\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</nav>\"\n"},"external_var":false},{"html_id":"nav(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"nav","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"nav","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    nav(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"nav(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"nav","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"nav","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nnav received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  nav(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"nav(options,**other_options):Nil-instance-method","name":"nav","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"nav","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"nav(\"\", options, **other_options)"},"external_var":false},{"html_id":"nav(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"nav","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"nav","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<nav\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</nav>\"\n"},"external_var":false},{"html_id":"nav(&):Nil-instance-method","name":"nav","abstract":false,"def":{"name":"nav","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<nav>\"\ncheck_tag_content!(yield)\nview << \"</nav>\"\n"},"external_var":false},{"html_id":"nav(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"nav","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"nav","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<nav\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</nav>\"\n"},"external_var":false},{"html_id":"noscript(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"noscript","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"noscript","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<noscript>\") << (HTML.escape(content.to_s))) << \"</noscript>\""},"external_var":false},{"html_id":"noscript(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"noscript","doc":"Generates a `&lt;noscript&gt;&lt;/noscript&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nnoscript(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <noscript class=\"cls-1 red\" required>Sample</noscript>\n```","summary":"<p>Generates a <code>&amp;lt;noscript&amp;gt;&amp;lt;/noscript&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"noscript","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<noscript\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</noscript>\"\n"},"external_var":false},{"html_id":"noscript(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"noscript","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"noscript","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    noscript(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"noscript(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"noscript","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"noscript","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nnoscript received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  noscript(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"noscript(options,**other_options):Nil-instance-method","name":"noscript","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"noscript","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"noscript(\"\", options, **other_options)"},"external_var":false},{"html_id":"noscript(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"noscript","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"noscript","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<noscript\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</noscript>\"\n"},"external_var":false},{"html_id":"noscript(&):Nil-instance-method","name":"noscript","abstract":false,"def":{"name":"noscript","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<noscript>\"\ncheck_tag_content!(yield)\nview << \"</noscript>\"\n"},"external_var":false},{"html_id":"noscript(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"noscript","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"noscript","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<noscript\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</noscript>\"\n"},"external_var":false},{"html_id":"object(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"object","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"object","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<object>\") << (HTML.escape(content.to_s))) << \"</object>\""},"external_var":false},{"html_id":"object(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"object","doc":"Generates a `&lt;object&gt;&lt;/object&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nobject(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <object class=\"cls-1 red\" required>Sample</object>\n```","summary":"<p>Generates a <code>&amp;lt;object&amp;gt;&amp;lt;/object&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"object","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<object\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</object>\"\n"},"external_var":false},{"html_id":"object(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"object","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"object","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    object(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"object(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"object","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"object","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nobject received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  object(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"object(options,**other_options):Nil-instance-method","name":"object","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"object","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"object(\"\", options, **other_options)"},"external_var":false},{"html_id":"object(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"object","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"object","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<object\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</object>\"\n"},"external_var":false},{"html_id":"object(&):Nil-instance-method","name":"object","abstract":false,"def":{"name":"object","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<object>\"\ncheck_tag_content!(yield)\nview << \"</object>\"\n"},"external_var":false},{"html_id":"object(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"object","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"object","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<object\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</object>\"\n"},"external_var":false},{"html_id":"ol(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"ol","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ol","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<ol>\") << (HTML.escape(content.to_s))) << \"</ol>\""},"external_var":false},{"html_id":"ol(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ol","doc":"Generates a `&lt;ol&gt;&lt;/ol&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nol(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <ol class=\"cls-1 red\" required>Sample</ol>\n```","summary":"<p>Generates a <code>&amp;lt;ol&amp;gt;&amp;lt;/ol&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ol","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<ol\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</ol>\"\n"},"external_var":false},{"html_id":"ol(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ol","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ol","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    ol(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"ol(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ol","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ol","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nol received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  ol(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"ol(options,**other_options):Nil-instance-method","name":"ol","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ol","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"ol(\"\", options, **other_options)"},"external_var":false},{"html_id":"ol(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ol","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ol","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<ol\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ol>\"\n"},"external_var":false},{"html_id":"ol(&):Nil-instance-method","name":"ol","abstract":false,"def":{"name":"ol","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<ol>\"\ncheck_tag_content!(yield)\nview << \"</ol>\"\n"},"external_var":false},{"html_id":"ol(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ol","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ol","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<ol\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ol>\"\n"},"external_var":false},{"html_id":"optgroup(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"optgroup","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"optgroup","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<optgroup>\") << (HTML.escape(content.to_s))) << \"</optgroup>\""},"external_var":false},{"html_id":"optgroup(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"optgroup","doc":"Generates a `&lt;optgroup&gt;&lt;/optgroup&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\noptgroup(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <optgroup class=\"cls-1 red\" required>Sample</optgroup>\n```","summary":"<p>Generates a <code>&amp;lt;optgroup&amp;gt;&amp;lt;/optgroup&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"optgroup","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<optgroup\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</optgroup>\"\n"},"external_var":false},{"html_id":"optgroup(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"optgroup","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"optgroup","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    optgroup(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"optgroup(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"optgroup","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"optgroup","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\noptgroup received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  optgroup(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"optgroup(options,**other_options):Nil-instance-method","name":"optgroup","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"optgroup","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"optgroup(\"\", options, **other_options)"},"external_var":false},{"html_id":"optgroup(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"optgroup","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"optgroup","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<optgroup\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</optgroup>\"\n"},"external_var":false},{"html_id":"optgroup(&):Nil-instance-method","name":"optgroup","abstract":false,"def":{"name":"optgroup","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<optgroup>\"\ncheck_tag_content!(yield)\nview << \"</optgroup>\"\n"},"external_var":false},{"html_id":"optgroup(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"optgroup","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"optgroup","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<optgroup\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</optgroup>\"\n"},"external_var":false},{"html_id":"option(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"option","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"option","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<option>\") << (HTML.escape(content.to_s))) << \"</option>\""},"external_var":false},{"html_id":"option(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"option","doc":"Generates a `&lt;option&gt;&lt;/option&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\noption(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <option class=\"cls-1 red\" required>Sample</option>\n```","summary":"<p>Generates a <code>&amp;lt;option&amp;gt;&amp;lt;/option&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"option","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<option\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</option>\"\n"},"external_var":false},{"html_id":"option(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"option","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"option","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    option(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"option(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"option","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"option","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\noption received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  option(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"option(options,**other_options):Nil-instance-method","name":"option","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"option","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"option(\"\", options, **other_options)"},"external_var":false},{"html_id":"option(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"option","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"option","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<option\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</option>\"\n"},"external_var":false},{"html_id":"option(&):Nil-instance-method","name":"option","abstract":false,"def":{"name":"option","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<option>\"\ncheck_tag_content!(yield)\nview << \"</option>\"\n"},"external_var":false},{"html_id":"option(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"option","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"option","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<option\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</option>\"\n"},"external_var":false},{"html_id":"output(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"output","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"output","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<output>\") << (HTML.escape(content.to_s))) << \"</output>\""},"external_var":false},{"html_id":"output(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"output","doc":"Generates a `&lt;output&gt;&lt;/output&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\noutput(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <output class=\"cls-1 red\" required>Sample</output>\n```","summary":"<p>Generates a <code>&amp;lt;output&amp;gt;&amp;lt;/output&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"output","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<output\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</output>\"\n"},"external_var":false},{"html_id":"output(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"output","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"output","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    output(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"output(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"output","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"output","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\noutput received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  output(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"output(options,**other_options):Nil-instance-method","name":"output","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"output","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"output(\"\", options, **other_options)"},"external_var":false},{"html_id":"output(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"output","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"output","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<output\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</output>\"\n"},"external_var":false},{"html_id":"output(&):Nil-instance-method","name":"output","abstract":false,"def":{"name":"output","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<output>\"\ncheck_tag_content!(yield)\nview << \"</output>\"\n"},"external_var":false},{"html_id":"output(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"output","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"output","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<output\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</output>\"\n"},"external_var":false},{"html_id":"para(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"para","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"para","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<p>\") << (HTML.escape(content.to_s))) << \"</p>\""},"external_var":false},{"html_id":"para(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"para","doc":"Generates a `&lt;para&gt;&lt;/para&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\npara(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <para class=\"cls-1 red\" required>Sample</para>\n```","summary":"<p>Generates a <code>&amp;lt;para&amp;gt;&amp;lt;/para&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"para","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<p\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</p>\"\n"},"external_var":false},{"html_id":"para(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"para","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"para","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    para(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"para(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"para","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"para","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\npara received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  para(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"para(options,**other_options):Nil-instance-method","name":"para","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"para","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"para(\"\", options, **other_options)"},"external_var":false},{"html_id":"para(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"para","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"para","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<p\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</p>\"\n"},"external_var":false},{"html_id":"para(&):Nil-instance-method","name":"para","abstract":false,"def":{"name":"para","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<p>\"\ncheck_tag_content!(yield)\nview << \"</p>\"\n"},"external_var":false},{"html_id":"para(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"para","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"para","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<p\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</p>\"\n"},"external_var":false},{"html_id":"param(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"param","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"param","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<param>\") << (HTML.escape(content.to_s))) << \"</param>\""},"external_var":false},{"html_id":"param(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"param","doc":"Generates a `&lt;param&gt;&lt;/param&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nparam(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <param class=\"cls-1 red\" required>Sample</param>\n```","summary":"<p>Generates a <code>&amp;lt;param&amp;gt;&amp;lt;/param&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"param","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<param\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</param>\"\n"},"external_var":false},{"html_id":"param(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"param","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"param","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    param(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"param(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"param","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"param","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nparam received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  param(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"param(options,**other_options):Nil-instance-method","name":"param","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"param","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"param(\"\", options, **other_options)"},"external_var":false},{"html_id":"param(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"param","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"param","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<param\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</param>\"\n"},"external_var":false},{"html_id":"param(&):Nil-instance-method","name":"param","abstract":false,"def":{"name":"param","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<param>\"\ncheck_tag_content!(yield)\nview << \"</param>\"\n"},"external_var":false},{"html_id":"param(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"param","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"param","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<param\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</param>\"\n"},"external_var":false},{"html_id":"picture(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"picture","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"picture","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<picture>\") << (HTML.escape(content.to_s))) << \"</picture>\""},"external_var":false},{"html_id":"picture(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"picture","doc":"Generates a `&lt;picture&gt;&lt;/picture&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\npicture(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <picture class=\"cls-1 red\" required>Sample</picture>\n```","summary":"<p>Generates a <code>&amp;lt;picture&amp;gt;&amp;lt;/picture&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"picture","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<picture\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</picture>\"\n"},"external_var":false},{"html_id":"picture(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"picture","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"picture","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    picture(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"picture(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"picture","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"picture","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\npicture received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  picture(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"picture(options,**other_options):Nil-instance-method","name":"picture","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"picture","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"picture(\"\", options, **other_options)"},"external_var":false},{"html_id":"picture(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"picture","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"picture","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<picture\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</picture>\"\n"},"external_var":false},{"html_id":"picture(&):Nil-instance-method","name":"picture","abstract":false,"def":{"name":"picture","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<picture>\"\ncheck_tag_content!(yield)\nview << \"</picture>\"\n"},"external_var":false},{"html_id":"picture(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"picture","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"picture","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<picture\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</picture>\"\n"},"external_var":false},{"html_id":"pre(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"pre","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"pre","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<pre>\") << (HTML.escape(content.to_s))) << \"</pre>\""},"external_var":false},{"html_id":"pre(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"pre","doc":"Generates a `&lt;pre&gt;&lt;/pre&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\npre(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <pre class=\"cls-1 red\" required>Sample</pre>\n```","summary":"<p>Generates a <code>&amp;lt;pre&amp;gt;&amp;lt;/pre&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"pre","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<pre\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</pre>\"\n"},"external_var":false},{"html_id":"pre(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"pre","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"pre","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    pre(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"pre(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"pre","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"pre","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\npre received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  pre(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"pre(options,**other_options):Nil-instance-method","name":"pre","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"pre","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"pre(\"\", options, **other_options)"},"external_var":false},{"html_id":"pre(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"pre","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"pre","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<pre\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</pre>\"\n"},"external_var":false},{"html_id":"pre(&):Nil-instance-method","name":"pre","abstract":false,"def":{"name":"pre","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<pre>\"\ncheck_tag_content!(yield)\nview << \"</pre>\"\n"},"external_var":false},{"html_id":"pre(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"pre","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"pre","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<pre\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</pre>\"\n"},"external_var":false},{"html_id":"progress(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"progress","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"progress","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<progress>\") << (HTML.escape(content.to_s))) << \"</progress>\""},"external_var":false},{"html_id":"progress(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"progress","doc":"Generates a `&lt;progress&gt;&lt;/progress&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nprogress(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <progress class=\"cls-1 red\" required>Sample</progress>\n```","summary":"<p>Generates a <code>&amp;lt;progress&amp;gt;&amp;lt;/progress&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"progress","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<progress\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</progress>\"\n"},"external_var":false},{"html_id":"progress(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"progress","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"progress","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    progress(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"progress(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"progress","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"progress","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nprogress received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  progress(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"progress(options,**other_options):Nil-instance-method","name":"progress","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"progress","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"progress(\"\", options, **other_options)"},"external_var":false},{"html_id":"progress(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"progress","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"progress","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<progress\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</progress>\"\n"},"external_var":false},{"html_id":"progress(&):Nil-instance-method","name":"progress","abstract":false,"def":{"name":"progress","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<progress>\"\ncheck_tag_content!(yield)\nview << \"</progress>\"\n"},"external_var":false},{"html_id":"progress(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"progress","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"progress","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<progress\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</progress>\"\n"},"external_var":false},{"html_id":"q(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"q","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"q","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<q>\") << (HTML.escape(content.to_s))) << \"</q>\""},"external_var":false},{"html_id":"q(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"q","doc":"Generates a `&lt;q&gt;&lt;/q&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nq(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <q class=\"cls-1 red\" required>Sample</q>\n```","summary":"<p>Generates a <code>&amp;lt;q&amp;gt;&amp;lt;/q&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"q","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<q\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</q>\"\n"},"external_var":false},{"html_id":"q(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"q","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"q","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    q(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"q(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"q","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"q","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nq received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  q(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"q(options,**other_options):Nil-instance-method","name":"q","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"q","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"q(\"\", options, **other_options)"},"external_var":false},{"html_id":"q(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"q","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"q","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<q\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</q>\"\n"},"external_var":false},{"html_id":"q(&):Nil-instance-method","name":"q","abstract":false,"def":{"name":"q","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<q>\"\ncheck_tag_content!(yield)\nview << \"</q>\"\n"},"external_var":false},{"html_id":"q(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"q","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"q","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<q\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</q>\"\n"},"external_var":false},{"html_id":"rp(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"rp","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rp","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<rp>\") << (HTML.escape(content.to_s))) << \"</rp>\""},"external_var":false},{"html_id":"rp(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"rp","doc":"Generates a `&lt;rp&gt;&lt;/rp&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nrp(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <rp class=\"cls-1 red\" required>Sample</rp>\n```","summary":"<p>Generates a <code>&amp;lt;rp&amp;gt;&amp;lt;/rp&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rp","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<rp\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</rp>\"\n"},"external_var":false},{"html_id":"rp(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"rp","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rp","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    rp(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"rp(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"rp","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rp","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nrp received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  rp(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"rp(options,**other_options):Nil-instance-method","name":"rp","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rp","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"rp(\"\", options, **other_options)"},"external_var":false},{"html_id":"rp(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"rp","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rp","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<rp\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</rp>\"\n"},"external_var":false},{"html_id":"rp(&):Nil-instance-method","name":"rp","abstract":false,"def":{"name":"rp","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<rp>\"\ncheck_tag_content!(yield)\nview << \"</rp>\"\n"},"external_var":false},{"html_id":"rp(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"rp","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rp","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<rp\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</rp>\"\n"},"external_var":false},{"html_id":"rt(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"rt","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rt","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<rt>\") << (HTML.escape(content.to_s))) << \"</rt>\""},"external_var":false},{"html_id":"rt(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"rt","doc":"Generates a `&lt;rt&gt;&lt;/rt&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nrt(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <rt class=\"cls-1 red\" required>Sample</rt>\n```","summary":"<p>Generates a <code>&amp;lt;rt&amp;gt;&amp;lt;/rt&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rt","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<rt\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</rt>\"\n"},"external_var":false},{"html_id":"rt(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"rt","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rt","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    rt(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"rt(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"rt","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rt","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nrt received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  rt(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"rt(options,**other_options):Nil-instance-method","name":"rt","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rt","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"rt(\"\", options, **other_options)"},"external_var":false},{"html_id":"rt(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"rt","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rt","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<rt\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</rt>\"\n"},"external_var":false},{"html_id":"rt(&):Nil-instance-method","name":"rt","abstract":false,"def":{"name":"rt","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<rt>\"\ncheck_tag_content!(yield)\nview << \"</rt>\"\n"},"external_var":false},{"html_id":"rt(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"rt","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"rt","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<rt\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</rt>\"\n"},"external_var":false},{"html_id":"ruby(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"ruby","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ruby","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<ruby>\") << (HTML.escape(content.to_s))) << \"</ruby>\""},"external_var":false},{"html_id":"ruby(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ruby","doc":"Generates a `&lt;ruby&gt;&lt;/ruby&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nruby(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <ruby class=\"cls-1 red\" required>Sample</ruby>\n```","summary":"<p>Generates a <code>&amp;lt;ruby&amp;gt;&amp;lt;/ruby&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ruby","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<ruby\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</ruby>\"\n"},"external_var":false},{"html_id":"ruby(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ruby","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ruby","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    ruby(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"ruby(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ruby","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ruby","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nruby received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  ruby(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"ruby(options,**other_options):Nil-instance-method","name":"ruby","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ruby","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"ruby(\"\", options, **other_options)"},"external_var":false},{"html_id":"ruby(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ruby","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ruby","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<ruby\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ruby>\"\n"},"external_var":false},{"html_id":"ruby(&):Nil-instance-method","name":"ruby","abstract":false,"def":{"name":"ruby","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<ruby>\"\ncheck_tag_content!(yield)\nview << \"</ruby>\"\n"},"external_var":false},{"html_id":"ruby(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ruby","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ruby","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<ruby\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ruby>\"\n"},"external_var":false},{"html_id":"s(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"s","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"s","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<s>\") << (HTML.escape(content.to_s))) << \"</s>\""},"external_var":false},{"html_id":"s(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"s","doc":"Generates a `&lt;s&gt;&lt;/s&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ns(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <s class=\"cls-1 red\" required>Sample</s>\n```","summary":"<p>Generates a <code>&amp;lt;s&amp;gt;&amp;lt;/s&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"s","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<s\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</s>\"\n"},"external_var":false},{"html_id":"s(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"s","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"s","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    s(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"s(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"s","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"s","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ns received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  s(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"s(options,**other_options):Nil-instance-method","name":"s","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"s","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"s(\"\", options, **other_options)"},"external_var":false},{"html_id":"s(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"s","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"s","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<s\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</s>\"\n"},"external_var":false},{"html_id":"s(&):Nil-instance-method","name":"s","abstract":false,"def":{"name":"s","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<s>\"\ncheck_tag_content!(yield)\nview << \"</s>\"\n"},"external_var":false},{"html_id":"s(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"s","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"s","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<s\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</s>\"\n"},"external_var":false},{"html_id":"samp(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"samp","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"samp","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<samp>\") << (HTML.escape(content.to_s))) << \"</samp>\""},"external_var":false},{"html_id":"samp(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"samp","doc":"Generates a `&lt;samp&gt;&lt;/samp&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nsamp(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <samp class=\"cls-1 red\" required>Sample</samp>\n```","summary":"<p>Generates a <code>&amp;lt;samp&amp;gt;&amp;lt;/samp&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"samp","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<samp\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</samp>\"\n"},"external_var":false},{"html_id":"samp(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"samp","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"samp","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    samp(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"samp(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"samp","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"samp","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nsamp received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  samp(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"samp(options,**other_options):Nil-instance-method","name":"samp","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"samp","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"samp(\"\", options, **other_options)"},"external_var":false},{"html_id":"samp(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"samp","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"samp","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<samp\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</samp>\"\n"},"external_var":false},{"html_id":"samp(&):Nil-instance-method","name":"samp","abstract":false,"def":{"name":"samp","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<samp>\"\ncheck_tag_content!(yield)\nview << \"</samp>\"\n"},"external_var":false},{"html_id":"samp(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"samp","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"samp","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<samp\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</samp>\"\n"},"external_var":false},{"html_id":"script(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"script","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"script","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<script>\") << (HTML.escape(content.to_s))) << \"</script>\""},"external_var":false},{"html_id":"script(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"script","doc":"Generates a `&lt;script&gt;&lt;/script&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nscript(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <script class=\"cls-1 red\" required>Sample</script>\n```","summary":"<p>Generates a <code>&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"script","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<script\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</script>\"\n"},"external_var":false},{"html_id":"script(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"script","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"script","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    script(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"script(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"script","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"script","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nscript received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  script(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"script(options,**other_options):Nil-instance-method","name":"script","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"script","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"script(\"\", options, **other_options)"},"external_var":false},{"html_id":"script(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"script","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"script","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<script\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</script>\"\n"},"external_var":false},{"html_id":"script(&):Nil-instance-method","name":"script","abstract":false,"def":{"name":"script","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<script>\"\ncheck_tag_content!(yield)\nview << \"</script>\"\n"},"external_var":false},{"html_id":"script(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"script","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"script","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<script\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</script>\"\n"},"external_var":false},{"html_id":"section(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"section","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"section","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<section>\") << (HTML.escape(content.to_s))) << \"</section>\""},"external_var":false},{"html_id":"section(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"section","doc":"Generates a `&lt;section&gt;&lt;/section&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nsection(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <section class=\"cls-1 red\" required>Sample</section>\n```","summary":"<p>Generates a <code>&amp;lt;section&amp;gt;&amp;lt;/section&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"section","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<section\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</section>\"\n"},"external_var":false},{"html_id":"section(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"section","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"section","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    section(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"section(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"section","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"section","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nsection received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  section(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"section(options,**other_options):Nil-instance-method","name":"section","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"section","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"section(\"\", options, **other_options)"},"external_var":false},{"html_id":"section(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"section","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"section","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<section\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</section>\"\n"},"external_var":false},{"html_id":"section(&):Nil-instance-method","name":"section","abstract":false,"def":{"name":"section","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<section>\"\ncheck_tag_content!(yield)\nview << \"</section>\"\n"},"external_var":false},{"html_id":"section(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"section","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"section","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<section\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</section>\"\n"},"external_var":false},{"html_id":"select_tag(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"select_tag","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"select_tag","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<select>\") << (HTML.escape(content.to_s))) << \"</select>\""},"external_var":false},{"html_id":"select_tag(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"select_tag","doc":"Generates a `&lt;select_tag&gt;&lt;/select_tag&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nselect_tag(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <select_tag class=\"cls-1 red\" required>Sample</select_tag>\n```","summary":"<p>Generates a <code>&amp;lt;select_tag&amp;gt;&amp;lt;/select_tag&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"select_tag","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<select\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</select>\"\n"},"external_var":false},{"html_id":"select_tag(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"select_tag","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"select_tag","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    select_tag(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"select_tag(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"select_tag","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"select_tag","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nselect_tag received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  select_tag(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"select_tag(options,**other_options):Nil-instance-method","name":"select_tag","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"select_tag","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"select_tag(\"\", options, **other_options)"},"external_var":false},{"html_id":"select_tag(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"select_tag","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"select_tag","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<select\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</select>\"\n"},"external_var":false},{"html_id":"select_tag(&):Nil-instance-method","name":"select_tag","abstract":false,"def":{"name":"select_tag","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<select>\"\ncheck_tag_content!(yield)\nview << \"</select>\"\n"},"external_var":false},{"html_id":"select_tag(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"select_tag","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"select_tag","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<select\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</select>\"\n"},"external_var":false},{"html_id":"slot(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"slot","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"slot","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<slot>\") << (HTML.escape(content.to_s))) << \"</slot>\""},"external_var":false},{"html_id":"slot(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"slot","doc":"Generates a `&lt;slot&gt;&lt;/slot&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nslot(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <slot class=\"cls-1 red\" required>Sample</slot>\n```","summary":"<p>Generates a <code>&amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"slot","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<slot\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</slot>\"\n"},"external_var":false},{"html_id":"slot(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"slot","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"slot","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    slot(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"slot(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"slot","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"slot","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nslot received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  slot(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"slot(options,**other_options):Nil-instance-method","name":"slot","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"slot","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"slot(\"\", options, **other_options)"},"external_var":false},{"html_id":"slot(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"slot","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"slot","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<slot\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</slot>\"\n"},"external_var":false},{"html_id":"slot(&):Nil-instance-method","name":"slot","abstract":false,"def":{"name":"slot","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<slot>\"\ncheck_tag_content!(yield)\nview << \"</slot>\"\n"},"external_var":false},{"html_id":"slot(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"slot","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"slot","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<slot\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</slot>\"\n"},"external_var":false},{"html_id":"small(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"small","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"small","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<small>\") << (HTML.escape(content.to_s))) << \"</small>\""},"external_var":false},{"html_id":"small(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"small","doc":"Generates a `&lt;small&gt;&lt;/small&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nsmall(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <small class=\"cls-1 red\" required>Sample</small>\n```","summary":"<p>Generates a <code>&amp;lt;small&amp;gt;&amp;lt;/small&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"small","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<small\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</small>\"\n"},"external_var":false},{"html_id":"small(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"small","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"small","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    small(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"small(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"small","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"small","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nsmall received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  small(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"small(options,**other_options):Nil-instance-method","name":"small","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"small","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"small(\"\", options, **other_options)"},"external_var":false},{"html_id":"small(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"small","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"small","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<small\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</small>\"\n"},"external_var":false},{"html_id":"small(&):Nil-instance-method","name":"small","abstract":false,"def":{"name":"small","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<small>\"\ncheck_tag_content!(yield)\nview << \"</small>\"\n"},"external_var":false},{"html_id":"small(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"small","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"small","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<small\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</small>\"\n"},"external_var":false},{"html_id":"source(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"source","doc":"Generates a `&lt;source&gt;` tag.\n\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n```\nsource([:required], {\"class\" => \"cls-1\"}) #=> <source class=\"cls-1\" required>\n```","summary":"<p>Generates a <code>&amp;lt;source&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"source","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"bool_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nview << \"<source#{tag_attrs}#{bool_attrs}>\"\n"},"external_var":false},{"html_id":"source:Nil-instance-method","name":"source","doc":"Generates a `&lt;source&gt;` tag.","summary":"<p>Generates a <code>&amp;lt;source&amp;gt;</code> tag.</p>","abstract":false,"location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"source","return_type":"Nil","visibility":"Public","body":"view << \"<source>\""},"external_var":false},{"html_id":"source(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"source","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":207,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L207"},"def":{"name":"source","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"source([] of Symbol, options, **other_options)"},"external_var":false},{"html_id":"span(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"span","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"span","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<span>\") << (HTML.escape(content.to_s))) << \"</span>\""},"external_var":false},{"html_id":"span(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"span","doc":"Generates a `&lt;span&gt;&lt;/span&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nspan(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <span class=\"cls-1 red\" required>Sample</span>\n```","summary":"<p>Generates a <code>&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"span","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<span\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</span>\"\n"},"external_var":false},{"html_id":"span(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"span","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"span","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    span(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"span(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"span","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"span","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nspan received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  span(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"span(options,**other_options):Nil-instance-method","name":"span","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"span","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"span(\"\", options, **other_options)"},"external_var":false},{"html_id":"span(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"span","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"span","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<span\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</span>\"\n"},"external_var":false},{"html_id":"span(&):Nil-instance-method","name":"span","abstract":false,"def":{"name":"span","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<span>\"\ncheck_tag_content!(yield)\nview << \"</span>\"\n"},"external_var":false},{"html_id":"span(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"span","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"span","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<span\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</span>\"\n"},"external_var":false},{"html_id":"strong(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"strong","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"strong","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<strong>\") << (HTML.escape(content.to_s))) << \"</strong>\""},"external_var":false},{"html_id":"strong(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"strong","doc":"Generates a `&lt;strong&gt;&lt;/strong&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nstrong(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <strong class=\"cls-1 red\" required>Sample</strong>\n```","summary":"<p>Generates a <code>&amp;lt;strong&amp;gt;&amp;lt;/strong&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"strong","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<strong\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</strong>\"\n"},"external_var":false},{"html_id":"strong(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"strong","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"strong","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    strong(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"strong(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"strong","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"strong","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nstrong received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  strong(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"strong(options,**other_options):Nil-instance-method","name":"strong","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"strong","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"strong(\"\", options, **other_options)"},"external_var":false},{"html_id":"strong(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"strong","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"strong","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<strong\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</strong>\"\n"},"external_var":false},{"html_id":"strong(&):Nil-instance-method","name":"strong","abstract":false,"def":{"name":"strong","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<strong>\"\ncheck_tag_content!(yield)\nview << \"</strong>\"\n"},"external_var":false},{"html_id":"strong(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"strong","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"strong","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<strong\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</strong>\"\n"},"external_var":false},{"html_id":"style(styles:String):Nil-instance-method","name":"style","doc":"Generates a `&lt;style&gt;&lt;/style&gt;` block for adding inline CSS\n\n```\nstyle(\"a { color: red; }\") # => <style>a { color: red; }</style>\n```","summary":"<p>Generates a <code>&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;</code> block for adding inline CSS</p>","abstract":false,"args":[{"name":"styles","external_name":"styles","restriction":"String"}],"args_string":"(styles : String) : Nil","args_html":"(styles : <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":248,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L248"},"def":{"name":"style","args":[{"name":"styles","external_name":"styles","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"view << \"<style>#{styles}</style>\""},"external_var":false},{"html_id":"sub(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"sub","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sub","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<sub>\") << (HTML.escape(content.to_s))) << \"</sub>\""},"external_var":false},{"html_id":"sub(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"sub","doc":"Generates a `&lt;sub&gt;&lt;/sub&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nsub(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <sub class=\"cls-1 red\" required>Sample</sub>\n```","summary":"<p>Generates a <code>&amp;lt;sub&amp;gt;&amp;lt;/sub&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sub","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<sub\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</sub>\"\n"},"external_var":false},{"html_id":"sub(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"sub","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sub","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    sub(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"sub(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"sub","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sub","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nsub received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  sub(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"sub(options,**other_options):Nil-instance-method","name":"sub","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sub","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"sub(\"\", options, **other_options)"},"external_var":false},{"html_id":"sub(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"sub","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sub","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<sub\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</sub>\"\n"},"external_var":false},{"html_id":"sub(&):Nil-instance-method","name":"sub","abstract":false,"def":{"name":"sub","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<sub>\"\ncheck_tag_content!(yield)\nview << \"</sub>\"\n"},"external_var":false},{"html_id":"sub(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"sub","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sub","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<sub\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</sub>\"\n"},"external_var":false},{"html_id":"summary(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"summary","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"summary","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<summary>\") << (HTML.escape(content.to_s))) << \"</summary>\""},"external_var":false},{"html_id":"summary(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"summary","doc":"Generates a `&lt;summary&gt;&lt;/summary&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nsummary(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <summary class=\"cls-1 red\" required>Sample</summary>\n```","summary":"<p>Generates a <code>&amp;lt;summary&amp;gt;&amp;lt;/summary&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"summary","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<summary\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</summary>\"\n"},"external_var":false},{"html_id":"summary(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"summary","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"summary","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    summary(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"summary(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"summary","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"summary","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nsummary received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  summary(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"summary(options,**other_options):Nil-instance-method","name":"summary","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"summary","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"summary(\"\", options, **other_options)"},"external_var":false},{"html_id":"summary(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"summary","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"summary","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<summary\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</summary>\"\n"},"external_var":false},{"html_id":"summary(&):Nil-instance-method","name":"summary","abstract":false,"def":{"name":"summary","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<summary>\"\ncheck_tag_content!(yield)\nview << \"</summary>\"\n"},"external_var":false},{"html_id":"summary(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"summary","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"summary","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<summary\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</summary>\"\n"},"external_var":false},{"html_id":"sup(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"sup","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sup","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<sup>\") << (HTML.escape(content.to_s))) << \"</sup>\""},"external_var":false},{"html_id":"sup(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"sup","doc":"Generates a `&lt;sup&gt;&lt;/sup&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nsup(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <sup class=\"cls-1 red\" required>Sample</sup>\n```","summary":"<p>Generates a <code>&amp;lt;sup&amp;gt;&amp;lt;/sup&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sup","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<sup\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</sup>\"\n"},"external_var":false},{"html_id":"sup(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"sup","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sup","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    sup(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"sup(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"sup","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sup","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nsup received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  sup(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"sup(options,**other_options):Nil-instance-method","name":"sup","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sup","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"sup(\"\", options, **other_options)"},"external_var":false},{"html_id":"sup(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"sup","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sup","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<sup\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</sup>\"\n"},"external_var":false},{"html_id":"sup(&):Nil-instance-method","name":"sup","abstract":false,"def":{"name":"sup","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<sup>\"\ncheck_tag_content!(yield)\nview << \"</sup>\"\n"},"external_var":false},{"html_id":"sup(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"sup","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"sup","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<sup\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</sup>\"\n"},"external_var":false},{"html_id":"table(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"table","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"table","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<table>\") << (HTML.escape(content.to_s))) << \"</table>\""},"external_var":false},{"html_id":"table(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"table","doc":"Generates a `&lt;table&gt;&lt;/table&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntable(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <table class=\"cls-1 red\" required>Sample</table>\n```","summary":"<p>Generates a <code>&amp;lt;table&amp;gt;&amp;lt;/table&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"table","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<table\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</table>\"\n"},"external_var":false},{"html_id":"table(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"table","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"table","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    table(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"table(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"table","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"table","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ntable received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  table(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"table(options,**other_options):Nil-instance-method","name":"table","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"table","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"table(\"\", options, **other_options)"},"external_var":false},{"html_id":"table(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"table","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"table","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<table\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</table>\"\n"},"external_var":false},{"html_id":"table(&):Nil-instance-method","name":"table","abstract":false,"def":{"name":"table","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<table>\"\ncheck_tag_content!(yield)\nview << \"</table>\"\n"},"external_var":false},{"html_id":"table(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"table","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"table","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<table\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</table>\"\n"},"external_var":false},{"html_id":"tbody(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"tbody","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tbody","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<tbody>\") << (HTML.escape(content.to_s))) << \"</tbody>\""},"external_var":false},{"html_id":"tbody(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"tbody","doc":"Generates a `&lt;tbody&gt;&lt;/tbody&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntbody(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <tbody class=\"cls-1 red\" required>Sample</tbody>\n```","summary":"<p>Generates a <code>&amp;lt;tbody&amp;gt;&amp;lt;/tbody&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tbody","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<tbody\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</tbody>\"\n"},"external_var":false},{"html_id":"tbody(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"tbody","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tbody","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    tbody(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"tbody(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"tbody","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tbody","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ntbody received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  tbody(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"tbody(options,**other_options):Nil-instance-method","name":"tbody","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tbody","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"tbody(\"\", options, **other_options)"},"external_var":false},{"html_id":"tbody(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"tbody","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tbody","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<tbody\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</tbody>\"\n"},"external_var":false},{"html_id":"tbody(&):Nil-instance-method","name":"tbody","abstract":false,"def":{"name":"tbody","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<tbody>\"\ncheck_tag_content!(yield)\nview << \"</tbody>\"\n"},"external_var":false},{"html_id":"tbody(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"tbody","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tbody","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<tbody\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</tbody>\"\n"},"external_var":false},{"html_id":"td(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"td","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"td","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<td>\") << (HTML.escape(content.to_s))) << \"</td>\""},"external_var":false},{"html_id":"td(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"td","doc":"Generates a `&lt;td&gt;&lt;/td&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntd(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <td class=\"cls-1 red\" required>Sample</td>\n```","summary":"<p>Generates a <code>&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"td","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<td\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</td>\"\n"},"external_var":false},{"html_id":"td(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"td","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"td","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    td(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"td(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"td","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"td","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ntd received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  td(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"td(options,**other_options):Nil-instance-method","name":"td","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"td","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"td(\"\", options, **other_options)"},"external_var":false},{"html_id":"td(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"td","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"td","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<td\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</td>\"\n"},"external_var":false},{"html_id":"td(&):Nil-instance-method","name":"td","abstract":false,"def":{"name":"td","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<td>\"\ncheck_tag_content!(yield)\nview << \"</td>\"\n"},"external_var":false},{"html_id":"td(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"td","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"td","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<td\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</td>\"\n"},"external_var":false},{"html_id":"template(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"template","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"template","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<template>\") << (HTML.escape(content.to_s))) << \"</template>\""},"external_var":false},{"html_id":"template(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"template","doc":"Generates a `&lt;template&gt;&lt;/template&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntemplate(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <template class=\"cls-1 red\" required>Sample</template>\n```","summary":"<p>Generates a <code>&amp;lt;template&amp;gt;&amp;lt;/template&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"template","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<template\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</template>\"\n"},"external_var":false},{"html_id":"template(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"template","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"template","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    template(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"template(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"template","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"template","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ntemplate received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  template(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"template(options,**other_options):Nil-instance-method","name":"template","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"template","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"template(\"\", options, **other_options)"},"external_var":false},{"html_id":"template(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"template","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"template","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<template\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</template>\"\n"},"external_var":false},{"html_id":"template(&):Nil-instance-method","name":"template","abstract":false,"def":{"name":"template","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<template>\"\ncheck_tag_content!(yield)\nview << \"</template>\"\n"},"external_var":false},{"html_id":"template(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"template","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"template","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<template\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</template>\"\n"},"external_var":false},{"html_id":"text(content:String|Lucky::AllowedInTags):Nil-instance-method","name":"text","doc":"Outputs *content* and escapes it.\n\n```\ntext(\"Hello\") # => Hello\ntext(\"<div>\") # => &lt;div&gt;\n```","summary":"<p>Outputs <em>content</em> and escapes it.</p>","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"String | Lucky::AllowedInTags"}],"args_string":"(content : String | Lucky::AllowedInTags) : Nil","args_html":"(content : <a href=\"../String.html\">String</a> | <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":239,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L239"},"def":{"name":"text","args":[{"name":"content","external_name":"content","restriction":"String | Lucky::AllowedInTags"}],"return_type":"Nil","visibility":"Public","body":"view << (HTML.escape(content.to_s))"},"external_var":false},{"html_id":"textarea(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"textarea","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"textarea","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<textarea>\") << (HTML.escape(content.to_s))) << \"</textarea>\""},"external_var":false},{"html_id":"textarea(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"textarea","doc":"Generates a `&lt;textarea&gt;&lt;/textarea&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntextarea(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <textarea class=\"cls-1 red\" required>Sample</textarea>\n```","summary":"<p>Generates a <code>&amp;lt;textarea&amp;gt;&amp;lt;/textarea&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"textarea","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<textarea\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</textarea>\"\n"},"external_var":false},{"html_id":"textarea(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"textarea","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"textarea","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    textarea(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"textarea(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"textarea","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"textarea","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ntextarea received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  textarea(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"textarea(options,**other_options):Nil-instance-method","name":"textarea","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"textarea","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"textarea(\"\", options, **other_options)"},"external_var":false},{"html_id":"textarea(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"textarea","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"textarea","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<textarea\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</textarea>\"\n"},"external_var":false},{"html_id":"textarea(&):Nil-instance-method","name":"textarea","abstract":false,"def":{"name":"textarea","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<textarea>\"\ncheck_tag_content!(yield)\nview << \"</textarea>\"\n"},"external_var":false},{"html_id":"textarea(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"textarea","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"textarea","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<textarea\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</textarea>\"\n"},"external_var":false},{"html_id":"tfoot(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"tfoot","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tfoot","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<tfoot>\") << (HTML.escape(content.to_s))) << \"</tfoot>\""},"external_var":false},{"html_id":"tfoot(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"tfoot","doc":"Generates a `&lt;tfoot&gt;&lt;/tfoot&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntfoot(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <tfoot class=\"cls-1 red\" required>Sample</tfoot>\n```","summary":"<p>Generates a <code>&amp;lt;tfoot&amp;gt;&amp;lt;/tfoot&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tfoot","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<tfoot\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</tfoot>\"\n"},"external_var":false},{"html_id":"tfoot(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"tfoot","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tfoot","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    tfoot(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"tfoot(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"tfoot","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tfoot","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ntfoot received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  tfoot(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"tfoot(options,**other_options):Nil-instance-method","name":"tfoot","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tfoot","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"tfoot(\"\", options, **other_options)"},"external_var":false},{"html_id":"tfoot(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"tfoot","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tfoot","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<tfoot\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</tfoot>\"\n"},"external_var":false},{"html_id":"tfoot(&):Nil-instance-method","name":"tfoot","abstract":false,"def":{"name":"tfoot","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<tfoot>\"\ncheck_tag_content!(yield)\nview << \"</tfoot>\"\n"},"external_var":false},{"html_id":"tfoot(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"tfoot","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tfoot","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<tfoot\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</tfoot>\"\n"},"external_var":false},{"html_id":"th(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"th","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"th","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<th>\") << (HTML.escape(content.to_s))) << \"</th>\""},"external_var":false},{"html_id":"th(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"th","doc":"Generates a `&lt;th&gt;&lt;/th&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nth(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <th class=\"cls-1 red\" required>Sample</th>\n```","summary":"<p>Generates a <code>&amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"th","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<th\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</th>\"\n"},"external_var":false},{"html_id":"th(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"th","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"th","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    th(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"th(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"th","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"th","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nth received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  th(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"th(options,**other_options):Nil-instance-method","name":"th","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"th","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"th(\"\", options, **other_options)"},"external_var":false},{"html_id":"th(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"th","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"th","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<th\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</th>\"\n"},"external_var":false},{"html_id":"th(&):Nil-instance-method","name":"th","abstract":false,"def":{"name":"th","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<th>\"\ncheck_tag_content!(yield)\nview << \"</th>\"\n"},"external_var":false},{"html_id":"th(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"th","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"th","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<th\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</th>\"\n"},"external_var":false},{"html_id":"thead(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"thead","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"thead","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<thead>\") << (HTML.escape(content.to_s))) << \"</thead>\""},"external_var":false},{"html_id":"thead(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"thead","doc":"Generates a `&lt;thead&gt;&lt;/thead&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nthead(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <thead class=\"cls-1 red\" required>Sample</thead>\n```","summary":"<p>Generates a <code>&amp;lt;thead&amp;gt;&amp;lt;/thead&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"thead","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<thead\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</thead>\"\n"},"external_var":false},{"html_id":"thead(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"thead","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"thead","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    thead(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"thead(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"thead","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"thead","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nthead received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  thead(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"thead(options,**other_options):Nil-instance-method","name":"thead","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"thead","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"thead(\"\", options, **other_options)"},"external_var":false},{"html_id":"thead(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"thead","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"thead","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<thead\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</thead>\"\n"},"external_var":false},{"html_id":"thead(&):Nil-instance-method","name":"thead","abstract":false,"def":{"name":"thead","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<thead>\"\ncheck_tag_content!(yield)\nview << \"</thead>\"\n"},"external_var":false},{"html_id":"thead(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"thead","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"thead","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<thead\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</thead>\"\n"},"external_var":false},{"html_id":"time(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"time","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"time","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<time>\") << (HTML.escape(content.to_s))) << \"</time>\""},"external_var":false},{"html_id":"time(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"time","doc":"Generates a `&lt;time&gt;&lt;/time&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntime(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <time class=\"cls-1 red\" required>Sample</time>\n```","summary":"<p>Generates a <code>&amp;lt;time&amp;gt;&amp;lt;/time&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"time","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<time\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</time>\"\n"},"external_var":false},{"html_id":"time(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"time","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"time","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    time(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"time(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"time","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"time","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ntime received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  time(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"time(options,**other_options):Nil-instance-method","name":"time","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"time","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"time(\"\", options, **other_options)"},"external_var":false},{"html_id":"time(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"time","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"time","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<time\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</time>\"\n"},"external_var":false},{"html_id":"time(&):Nil-instance-method","name":"time","abstract":false,"def":{"name":"time","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<time>\"\ncheck_tag_content!(yield)\nview << \"</time>\"\n"},"external_var":false},{"html_id":"time(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"time","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"time","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<time\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</time>\"\n"},"external_var":false},{"html_id":"title(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"title","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"title","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<title>\") << (HTML.escape(content.to_s))) << \"</title>\""},"external_var":false},{"html_id":"title(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"title","doc":"Generates a `&lt;title&gt;&lt;/title&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntitle(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <title class=\"cls-1 red\" required>Sample</title>\n```","summary":"<p>Generates a <code>&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"title","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<title\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</title>\"\n"},"external_var":false},{"html_id":"title(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"title","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"title","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    title(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"title(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"title","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"title","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ntitle received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  title(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"title(options,**other_options):Nil-instance-method","name":"title","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"title","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"title(\"\", options, **other_options)"},"external_var":false},{"html_id":"title(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"title","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"title","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<title\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</title>\"\n"},"external_var":false},{"html_id":"title(&):Nil-instance-method","name":"title","abstract":false,"def":{"name":"title","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<title>\"\ncheck_tag_content!(yield)\nview << \"</title>\"\n"},"external_var":false},{"html_id":"title(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"title","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"title","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<title\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</title>\"\n"},"external_var":false},{"html_id":"tr(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"tr","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tr","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<tr>\") << (HTML.escape(content.to_s))) << \"</tr>\""},"external_var":false},{"html_id":"tr(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"tr","doc":"Generates a `&lt;tr&gt;&lt;/tr&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntr(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <tr class=\"cls-1 red\" required>Sample</tr>\n```","summary":"<p>Generates a <code>&amp;lt;tr&amp;gt;&amp;lt;/tr&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tr","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<tr\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</tr>\"\n"},"external_var":false},{"html_id":"tr(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"tr","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tr","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    tr(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"tr(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"tr","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tr","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ntr received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  tr(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"tr(options,**other_options):Nil-instance-method","name":"tr","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tr","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"tr(\"\", options, **other_options)"},"external_var":false},{"html_id":"tr(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"tr","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tr","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<tr\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</tr>\"\n"},"external_var":false},{"html_id":"tr(&):Nil-instance-method","name":"tr","abstract":false,"def":{"name":"tr","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<tr>\"\ncheck_tag_content!(yield)\nview << \"</tr>\"\n"},"external_var":false},{"html_id":"tr(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"tr","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"tr","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<tr\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</tr>\"\n"},"external_var":false},{"html_id":"track(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"track","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"track","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<track>\") << (HTML.escape(content.to_s))) << \"</track>\""},"external_var":false},{"html_id":"track(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"track","doc":"Generates a `&lt;track&gt;&lt;/track&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntrack(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <track class=\"cls-1 red\" required>Sample</track>\n```","summary":"<p>Generates a <code>&amp;lt;track&amp;gt;&amp;lt;/track&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"track","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<track\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</track>\"\n"},"external_var":false},{"html_id":"track(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"track","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"track","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    track(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"track(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"track","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"track","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\ntrack received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  track(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"track(options,**other_options):Nil-instance-method","name":"track","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"track","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"track(\"\", options, **other_options)"},"external_var":false},{"html_id":"track(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"track","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"track","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<track\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</track>\"\n"},"external_var":false},{"html_id":"track(&):Nil-instance-method","name":"track","abstract":false,"def":{"name":"track","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<track>\"\ncheck_tag_content!(yield)\nview << \"</track>\"\n"},"external_var":false},{"html_id":"track(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"track","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"track","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<track\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</track>\"\n"},"external_var":false},{"html_id":"u(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"u","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"u","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<u>\") << (HTML.escape(content.to_s))) << \"</u>\""},"external_var":false},{"html_id":"u(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"u","doc":"Generates a `&lt;u&gt;&lt;/u&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nu(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <u class=\"cls-1 red\" required>Sample</u>\n```","summary":"<p>Generates a <code>&amp;lt;u&amp;gt;&amp;lt;/u&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"u","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<u\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</u>\"\n"},"external_var":false},{"html_id":"u(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"u","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"u","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    u(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"u(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"u","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"u","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nu received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  u(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"u(options,**other_options):Nil-instance-method","name":"u","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"u","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"u(\"\", options, **other_options)"},"external_var":false},{"html_id":"u(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"u","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"u","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<u\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</u>\"\n"},"external_var":false},{"html_id":"u(&):Nil-instance-method","name":"u","abstract":false,"def":{"name":"u","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<u>\"\ncheck_tag_content!(yield)\nview << \"</u>\"\n"},"external_var":false},{"html_id":"u(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"u","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"u","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<u\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</u>\"\n"},"external_var":false},{"html_id":"ul(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"ul","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ul","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<ul>\") << (HTML.escape(content.to_s))) << \"</ul>\""},"external_var":false},{"html_id":"ul(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ul","doc":"Generates a `&lt;ul&gt;&lt;/ul&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nul(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <ul class=\"cls-1 red\" required>Sample</ul>\n```","summary":"<p>Generates a <code>&amp;lt;ul&amp;gt;&amp;lt;/ul&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ul","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<ul\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</ul>\"\n"},"external_var":false},{"html_id":"ul(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ul","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ul","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    ul(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"ul(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ul","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ul","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nul received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  ul(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"ul(options,**other_options):Nil-instance-method","name":"ul","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ul","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"ul(\"\", options, **other_options)"},"external_var":false},{"html_id":"ul(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ul","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ul","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<ul\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ul>\"\n"},"external_var":false},{"html_id":"ul(&):Nil-instance-method","name":"ul","abstract":false,"def":{"name":"ul","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<ul>\"\ncheck_tag_content!(yield)\nview << \"</ul>\"\n"},"external_var":false},{"html_id":"ul(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ul","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"ul","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<ul\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ul>\"\n"},"external_var":false},{"html_id":"video(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"video","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"video","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<video>\") << (HTML.escape(content.to_s))) << \"</video>\""},"external_var":false},{"html_id":"video(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"video","doc":"Generates a `&lt;video&gt;&lt;/video&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nvideo(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <video class=\"cls-1 red\" required>Sample</video>\n```","summary":"<p>Generates a <code>&amp;lt;video&amp;gt;&amp;lt;/video&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"video","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<video\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</video>\"\n"},"external_var":false},{"html_id":"video(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"video","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"video","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    video(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"video(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"video","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"video","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nvideo received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  video(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"video(options,**other_options):Nil-instance-method","name":"video","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"video","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"video(\"\", options, **other_options)"},"external_var":false},{"html_id":"video(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"video","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"video","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<video\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</video>\"\n"},"external_var":false},{"html_id":"video(&):Nil-instance-method","name":"video","abstract":false,"def":{"name":"video","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<video>\"\ncheck_tag_content!(yield)\nview << \"</video>\"\n"},"external_var":false},{"html_id":"video(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"video","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"video","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<video\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</video>\"\n"},"external_var":false},{"html_id":"wbr(content:Lucky::AllowedInTags|String):Nil-instance-method","name":"wbr","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"args_string":"(content : Lucky::AllowedInTags | String) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"wbr","args":[{"name":"content","external_name":"content","restriction":"Lucky::AllowedInTags | String"}],"return_type":"Nil","visibility":"Public","body":"((view << \"<wbr>\") << (HTML.escape(content.to_s))) << \"</wbr>\""},"external_var":false},{"html_id":"wbr(content:Lucky::AllowedInTags|String=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"wbr","doc":"Generates a `&lt;wbr&gt;&lt;/wbr&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nwbr(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <wbr class=\"cls-1 red\" required>Sample</wbr>\n```","summary":"<p>Generates a <code>&amp;lt;wbr&amp;gt;&amp;lt;/wbr&amp;gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Lucky::AllowedInTags | String = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"wbr","args":[{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((((view << \"<wbr\") << tag_attrs) << boolean_attrs) << \">\") << (HTML.escape(content.to_s))) << \"</wbr>\"\n"},"external_var":false},{"html_id":"wbr(content:Nil,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"wbr","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Nil, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : <a href=\"../Nil.html\">Nil</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"wbr","args":[{"name":"content","external_name":"content","restriction":"Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\\n\\nTry this...\\n\\n  if value = some_nilable_value\\n    wbr(value, class: \\\"header\\\")\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"wbr(content:Time,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"wbr","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Time, options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(content : Time, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"wbr","args":[{"name":"content","external_name":"content","restriction":"Time"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"HTML tags content must be a String or Lucky::AllowedInTags object.\\nwbr received a Time object which has an ambiguous display format.\\n\\nTry this...\\n\\n  wbr(current_time.to_s(\\\"%F\\\"), html_opts)\\n\")\n%}"},"external_var":false},{"html_id":"wbr(options,**other_options):Nil-instance-method","name":"wbr","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options, **other_options) : Nil","args_html":"(options, **other_options) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"wbr","args":[{"name":"options","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"wbr(\"\", options, **other_options)"},"external_var":false},{"html_id":"wbr(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"wbr","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"wbr","args":[{"name":"attrs","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<wbr\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</wbr>\"\n"},"external_var":false},{"html_id":"wbr(&):Nil-instance-method","name":"wbr","abstract":false,"def":{"name":"wbr","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"view << \"<wbr>\"\ncheck_tag_content!(yield)\nview << \"</wbr>\"\n"},"external_var":false},{"html_id":"wbr(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"wbr","abstract":false,"args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","def":{"name":"wbr","args":[{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<wbr\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</wbr>\"\n"},"external_var":false}],"macros":[{"html_id":"generate_tag_methods(method_name,tag)-macro","name":"generate_tag_methods","abstract":false,"args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"tag","external_name":"tag","restriction":""}],"args_string":"(method_name, tag)","args_html":"(method_name, tag)","location":{"filename":"src/lucky/tags/base_tags.cr","line_number":106,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/base_tags.cr#L106"},"def":{"name":"generate_tag_methods","args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"tag","external_name":"tag","restriction":""}],"visibility":"Public","body":"    \n# Generates a `&lt;\n{{ method_name.id }}\n&gt;&lt;/\n{{ method_name.id }}\n&gt;` tag.\n\n    \n#\n\n    \n# * The *content* argument is either a `String`, or any type that has included `Lucky::AllowedInTags`. This is the content that goes inside of the tag.\n\n    \n# * The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n    \n# * The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n    \n#\n\n    \n# ```\n\n    \n# \n{{ method_name.id }}\n(\"Sample\", \n{\"class\" => \"cls-1 red\"}, [:required]) #=> <\n{{ method_name.id }}\n class=\"cls-1 red\" required>Sample</\n{{ method_name.id }}\n>\n\n    \n# ```\n\n    def \n{{ method_name.id }}\n(\n        content : Lucky::AllowedInTags | String = \"\",\n        options = EMPTY_HTML_ATTRS,\n        attrs : Array(Symbol) = [] of Symbol,\n        **other_options\n      ) : Nil\n      boolean_attrs = build_boolean_attrs(attrs)\n      merged_options = merge_options(other_options, options)\n      tag_attrs = build_tag_attrs(merged_options)\n      view << \"<\n{{ tag.id }}\n\" << tag_attrs << boolean_attrs << \">\" << HTML.escape(content.to_s) << \"</\n{{ tag.id }}\n>\"\n    \nend\n\n    def \n{{ method_name.id }}\n(content : Lucky::AllowedInTags | String) : Nil\n      view << \"<\n{{ tag.id }}\n>\" << HTML.escape(content.to_s) << \"</\n{{ tag.id }}\n>\"\n    \nend\n\n    def \n{{ method_name.id }}\n(\n        content : Nil,\n        options = EMPTY_HTML_ATTRS,\n        attrs : Array(Symbol) = [] of Symbol,\n        **other_options\n      ) : Nil\n      \n\\{%\n        \nraise <<-ERROR\n          HTML tags content must be a String or Lucky::AllowedInTags object, not nil.\n\n          Try this...\n\n            if value = some_nilable_value\n              \n{{ method_name.id }}\n(value, class: \"header\")\n            end\n\n          ERROR\n          %}\n    \nend\n\n    def \n{{ method_name.id }}\n(\n        content : Time,\n        options = EMPTY_HTML_ATTRS,\n        attrs : Array(Symbol) = [] of Symbol,\n        **other_options\n      ) : Nil\n      \n\\{%\n        \nraise <<-ERROR\n          HTML tags content must be a String or Lucky::AllowedInTags object.\n          \n{{ method_name.id }}\n received a Time object which has an ambiguous display format.\n\n          Try this...\n\n            \n{{ method_name.id }}\n(current_time.to_s(\"%F\"), html_opts)\n\n          ERROR\n          %}\n    \nend\n\n    def \n{{ method_name.id }}\n(options, **other_options) : Nil\n      \n{{ method_name.id }}\n(\"\", options, **other_options)\n    \nend\n\n    def \n{{ method_name.id }}\n(options = EMPTY_HTML_ATTRS, **other_options) : Nil\n      merged_options = merge_options(other_options, options)\n      tag_attrs = build_tag_attrs(merged_options)\n      view << \"<\n{{ tag.id }}\n\" << tag_attrs << \">\"\n      check_tag_content!(yield)\n      view << \"</\n{{ tag.id }}\n>\"\n    \nend\n\n    def \n{{ method_name.id }}\n(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options) : Nil\n      boolean_attrs = build_boolean_attrs(attrs)\n      merged_options = merge_options(other_options, options)\n      tag_attrs = build_tag_attrs(merged_options)\n      view << \"<\n{{ tag.id }}\n\" << tag_attrs << boolean_attrs << \">\"\n      check_tag_content!(yield)\n      view << \"</\n{{ tag.id }}\n>\"\n    \nend\n\n    def \n{{ method_name.id }}\n : Nil\n      view << \"<\n{{ tag.id }}\n>\"\n      check_tag_content!(yield)\n      view << \"</\n{{ tag.id }}\n>\"\n    \nend\n  \n"}}]},{"html_id":"lucky/Lucky/CookieJar","path":"Lucky/CookieJar.html","kind":"class","full_name":"Lucky::CookieJar","name":"CookieJar","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: on_set : (HTTP::Cookie -> HTTP::Cookie) | ::Nil, example: nil, validation: nil}] of Nil"},{"id":"LUCKY_ENCRYPTION_PREFIX","name":"LUCKY_ENCRYPTION_PREFIX","value":"(Base64.strict_encode(\"lucky\")) + \"--\""},{"id":"MAX_COOKIE_SIZE","name":"MAX_COOKIE_SIZE","value":"4096"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L8"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"empty_jar:Lucky::CookieJar-class-method","name":"empty_jar","abstract":false,"location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":16,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L16"},"def":{"name":"empty_jar","return_type":"Lucky::CookieJar","visibility":"Public","body":"new"},"external_var":false},{"html_id":"from_request_cookies(cookies:HTTP::Cookies):Lucky::CookieJar-class-method","name":"from_request_cookies","abstract":false,"args":[{"name":"cookies","external_name":"cookies","restriction":"HTTP::Cookies"}],"args_string":"(cookies : HTTP::Cookies) : Lucky::CookieJar","args_html":"(cookies : HTTP::Cookies) : <a href=\"../Lucky/CookieJar.html\">Lucky::CookieJar</a>","location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":12,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L12"},"def":{"name":"from_request_cookies","args":[{"name":"cookies","external_name":"cookies","restriction":"HTTP::Cookies"}],"return_type":"Lucky::CookieJar","visibility":"Public","body":"new(cookies)"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L8"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"instance_methods":[{"html_id":"[](key:Key):String-instance-method","name":"[]","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : String","args_html":"(key : <a href=\"../Lucky/CookieJar/Key.html\">Key</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":100,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L100"},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"String","visibility":"Public","body":"get(key)"},"external_var":false},{"html_id":"[]=(key:Key,value:String):HTTP::Cookie-instance-method","name":"[]=","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(key : Key, value : String) : HTTP::Cookie","args_html":"(key : <a href=\"../Lucky/CookieJar/Key.html\">Key</a>, value : <a href=\"../String.html\">String</a>) : <a href=\"../HTTP/Cookie.html\">HTTP::Cookie</a>","location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":120,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L120"},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":"Key"},{"name":"value","external_name":"value","restriction":"String"}],"return_type":"HTTP::Cookie","visibility":"Public","body":"set(key, value)"},"external_var":false},{"html_id":"[]?(key:Key):String|Nil-instance-method","name":"[]?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : String | Nil","args_html":"(key : <a href=\"../Lucky/CookieJar/Key.html\">Key</a>) : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":112,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L112"},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"String | ::Nil","visibility":"Public","body":"get?(key)"},"external_var":false},{"html_id":"clear:Nil-instance-method","name":"clear","doc":"Delete all cookies.","summary":"<p>Delete all cookies.</p>","abstract":false,"location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":38,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L38"},"def":{"name":"clear","return_type":"Nil","visibility":"Public","body":"clear do\nend"},"external_var":false},{"html_id":"clear(&:HTTP::Cookie->):Nil-instance-method","name":"clear","doc":"Delete cookies with a block to add specific options.\n\njar.clear do |cookie|\n  cookie.path(\"/\")\n        .http_only(true)\n        .secure(true)\nend","summary":"<p>Delete cookies with a block to add specific options.</p>","abstract":false,"location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":49,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L49"},"def":{"name":"clear","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(HTTP::Cookie ->)"},"return_type":"Nil","visibility":"Public","body":"cookies.each do |cookie|\n  yield cookie\n  delete(cookie.name)\nend"},"external_var":false},{"html_id":"delete(key:Key):Nil-instance-method","name":"delete","doc":"https://tools.ietf.org/search/rfc6265#page-8\nto remove a cookie, the server returns a Set-Cookie header\nwith an expiration date in the past. The server will be successful\nin removing the cookie only if the Path and the Domain attribute in\nthe Set-Cookie header match the values used when the cookie was\ncreated.","summary":"<p>https://tools.ietf.org/search/rfc6265#page-8 to remove a cookie, the server returns a Set-Cookie header with an expiration date in the past.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : Nil","args_html":"(key : <a href=\"../Lucky/CookieJar/Key.html\">Key</a>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":62,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L62"},"def":{"name":"delete","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"Nil","visibility":"Public","body":"if cookie = cookies[key.to_s]?\n  (cookie.expires(1.year.ago)).value(\"\")\n  set_cookies[key.to_s] = cookie\nend"},"external_var":false},{"html_id":"delete(key:Key,&):Nil-instance-method","name":"delete","doc":"Delete a specific cookie by name `key`. Yield that cookie\nto the block so you can add additional options like domain, path, etc...","summary":"<p>Delete a specific cookie by name <code>key</code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key, &) : Nil","args_html":"(key : <a href=\"../Lucky/CookieJar/Key.html\">Key</a>, &) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":71,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L71"},"def":{"name":"delete","args":[{"name":"key","external_name":"key","restriction":"Key"}],"yields":1,"block_arity":1,"return_type":"Nil","visibility":"Public","body":"if cookie = cookies[key.to_s]?\n  yield cookie\n  delete(cookie.name)\nend"},"external_var":false},{"html_id":"deleted?(key:Key):Bool-instance-method","name":"deleted?","doc":"Returns `true` if the cookie has been expired, and has no value.\nWill return `false` if the cookie does not exist, or is valid.","summary":"<p>Returns <code>true</code> if the cookie has been expired, and has no value.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : Bool","args_html":"(key : <a href=\"../Lucky/CookieJar/Key.html\">Key</a>) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":80,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L80"},"def":{"name":"deleted?","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"Bool","visibility":"Public","body":"if cookie = cookies[key.to_s]?\n  cookie.expired? && (cookie.value == \"\")\nelse\n  false\nend"},"external_var":false},{"html_id":"get(key:Key):String-instance-method","name":"get","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : String","args_html":"(key : <a href=\"../Lucky/CookieJar/Key.html\">Key</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":96,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L96"},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"String","visibility":"Public","body":"(get?(key)) || (raise(CookieNotFoundError.new(key)))"},"external_var":false},{"html_id":"get?(key:Key):String|Nil-instance-method","name":"get?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : String | Nil","args_html":"(key : <a href=\"../Lucky/CookieJar/Key.html\">Key</a>) : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":104,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L104"},"def":{"name":"get?","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"String | ::Nil","visibility":"Public","body":"begin\n  cookies[key.to_s]?.try do |cookie|\n    decrypt(cookie.value, cookie.name)\n  end\nrescue OpenSSL::Cipher::Error\n  nil\nend"},"external_var":false},{"html_id":"get_raw(key:Key):HTTP::Cookie-instance-method","name":"get_raw","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : HTTP::Cookie","args_html":"(key : <a href=\"../Lucky/CookieJar/Key.html\">Key</a>) : <a href=\"../HTTP/Cookie.html\">HTTP::Cookie</a>","location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":88,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L88"},"def":{"name":"get_raw","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"HTTP::Cookie","visibility":"Public","body":"(get_raw?(key)) || (raise(CookieNotFoundError.new(key)))"},"external_var":false},{"html_id":"get_raw?(key:Key):HTTP::Cookie|Nil-instance-method","name":"get_raw?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : HTTP::Cookie | Nil","args_html":"(key : <a href=\"../Lucky/CookieJar/Key.html\">Key</a>) : <a href=\"../HTTP/Cookie.html\">HTTP::Cookie</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":92,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L92"},"def":{"name":"get_raw?","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"HTTP::Cookie | ::Nil","visibility":"Public","body":"cookies[key.to_s]?"},"external_var":false},{"html_id":"raw:HTTP::Cookies-instance-method","name":"raw","abstract":false,"location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L29"},"def":{"name":"raw","return_type":"HTTP::Cookies","visibility":"Public","body":"cookies"},"external_var":false},{"html_id":"set(key:Key,value:String):HTTP::Cookie-instance-method","name":"set","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(key : Key, value : String) : HTTP::Cookie","args_html":"(key : <a href=\"../Lucky/CookieJar/Key.html\">Key</a>, value : <a href=\"../String.html\">String</a>) : <a href=\"../HTTP/Cookie.html\">HTTP::Cookie</a>","location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":116,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L116"},"def":{"name":"set","args":[{"name":"key","external_name":"key","restriction":"Key"},{"name":"value","external_name":"value","restriction":"String"}],"return_type":"HTTP::Cookie","visibility":"Public","body":"set_raw(key, encrypt(value))"},"external_var":false},{"html_id":"set_raw(key:Key,value:String):HTTP::Cookie-instance-method","name":"set_raw","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(key : Key, value : String) : HTTP::Cookie","args_html":"(key : <a href=\"../Lucky/CookieJar/Key.html\">Key</a>, value : <a href=\"../String.html\">String</a>) : <a href=\"../HTTP/Cookie.html\">HTTP::Cookie</a>","location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":124,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L124"},"def":{"name":"set_raw","args":[{"name":"key","external_name":"key","restriction":"Key"},{"name":"value","external_name":"value","restriction":"String"}],"return_type":"HTTP::Cookie","visibility":"Public","body":"begin\n  raw_cookie = HTTP::Cookie.new(name: key.to_s, value: value, http_only: true).tap do |cookie|\n    settings.on_set.try(&.call(cookie))\n  end\n  if raw_cookie.to_set_cookie_header.bytesize > MAX_COOKIE_SIZE\n    raise(Lucky::CookieOverflowError.new(\"size of '#{key}' cookie is too big\"))\n  end\n  cookies[key.to_s] = set_cookies[key.to_s] = raw_cookie\nrescue IO::Error\n  raise(InvalidCookieValueError.new(key))\nend"},"external_var":false},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L8"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false},{"html_id":"updated:HTTP::Cookies-instance-method","name":"updated","abstract":false,"location":{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":33,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L33"},"def":{"name":"updated","return_type":"HTTP::Cookies","visibility":"Public","body":"set_cookies"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/CookieJar/HabitatSettings","path":"Lucky/CookieJar/HabitatSettings.html","kind":"class","full_name":"Lucky::CookieJar::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L8"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/CookieJar","kind":"class","full_name":"Lucky::CookieJar","name":"CookieJar"},"class_methods":[{"html_id":"on_set:HTTP::Cookie->HTTP::Cookie|Nil-class-method","name":"on_set","abstract":false,"def":{"name":"on_set","return_type":"(HTTP::Cookie -> HTTP::Cookie) | ::Nil","visibility":"Public","body":"@@on_set"},"external_var":false},{"html_id":"on_set=(value:HTTP::Cookie->HTTP::Cookie|Nil)-class-method","name":"on_set=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"(HTTP::Cookie -> HTTP::Cookie) | ::Nil"}],"args_string":"(value : HTTP::Cookie -> HTTP::Cookie | Nil)","args_html":"(value : <a href=\"../../HTTP/Cookie.html\">HTTP::Cookie</a> -> <a href=\"../../HTTP/Cookie.html\">HTTP::Cookie</a> | <a href=\"../../Nil.html\">Nil</a>)","def":{"name":"on_set=","args":[{"name":"value","external_name":"value","restriction":"(HTTP::Cookie -> HTTP::Cookie) | ::Nil"}],"visibility":"Public","body":"@@on_set = value"},"external_var":false},{"html_id":"on_set?-class-method","name":"on_set?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use on_set in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use on_set in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"on_set?","visibility":"Public","body":"@@on_set"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"on_set\" => on_set}"},"external_var":false}]},{"html_id":"lucky/Lucky/CookieJar/Key","path":"Lucky/CookieJar/Key.html","kind":"alias","full_name":"Lucky::CookieJar::Key","name":"Key","abstract":false,"locations":[{"filename":"src/lucky/cookies/cookie_jar.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/cookie_jar.cr#L4"}],"repository_name":"lucky","program":false,"enum":false,"alias":true,"aliased":"(String | Symbol)","aliased_html":"<a href=\"../../String.html\">String</a> | Symbol","const":false,"namespace":{"html_id":"lucky/Lucky/CookieJar","kind":"class","full_name":"Lucky::CookieJar","name":"CookieJar"}}]},{"html_id":"lucky/Lucky/CookieNotFoundError","path":"Lucky/CookieNotFoundError.html","kind":"class","full_name":"Lucky::CookieNotFoundError","name":"CookieNotFoundError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"},{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":103,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L103"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Raised when getting a cookie that doesn't exist.","summary":"<p>Raised when getting a cookie that doesn't exist.</p>","constructors":[{"html_id":"new(key:String|Symbol)-class-method","name":"new","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol)","args_html":"(key : <a href=\"../String.html\">String</a> | Symbol)","location":{"filename":"src/lucky/errors.cr","line_number":108,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L108"},"def":{"name":"new","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"visibility":"Public","body":"_ = allocate\n_.initialize(key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"key:String|Symbol-instance-method","name":"key","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":106,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L106"},"def":{"name":"key","visibility":"Public","body":"@key"},"external_var":false},{"html_id":"message:String-instance-method","name":"message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":111,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L111"},"def":{"name":"message","return_type":"String","visibility":"Public","body":"\"No cookie found with the key: '#{key}'\""},"external_var":false},{"html_id":"renderable_message:String-instance-method","name":"renderable_message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L119"},"def":{"name":"renderable_message","return_type":"String","visibility":"Public","body":"message"},"external_var":false},{"html_id":"renderable_status:Int32-instance-method","name":"renderable_status","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":115,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L115"},"def":{"name":"renderable_status","return_type":"Int32","visibility":"Public","body":"400"},"external_var":false}]},{"html_id":"lucky/Lucky/CookieOverflowError","path":"Lucky/CookieOverflowError.html","kind":"class","full_name":"Lucky::CookieOverflowError","name":"CookieOverflowError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":99,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L99"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Raised when storing more than 4K of session data.","summary":"<p>Raised when storing more than 4K of session data.</p>"},{"html_id":"lucky/Lucky/CustomTags","path":"Lucky/CustomTags.html","kind":"module","full_name":"Lucky::CustomTags","name":"CustomTags","abstract":false,"ancestors":[{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"}],"locations":[{"filename":"src/lucky/tags/custom_tags.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/custom_tags.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"EMPTY_HTML_ATTRS","name":"EMPTY_HTML_ATTRS","value":"{} of String => String"}],"included_modules":[{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"}],"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"empty_tag(tag_name:String,options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"empty_tag","doc":"Outputs a custom tag with no tag closing.\n`empty_tag(\"br\")` => `<br>`","summary":"<p>Outputs a custom tag with no tag closing.</p>","abstract":false,"args":[{"name":"tag_name","external_name":"tag_name","restriction":"String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(tag_name : String, options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(tag_name : <a href=\"../String.html\">String</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/custom_tags.cr","line_number":38,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/custom_tags.cr#L38"},"def":{"name":"empty_tag","args":[{"name":"tag_name","external_name":"tag_name","restriction":"String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<#{tag_name}\") << tag_attrs) << \">\"\n"},"external_var":false},{"html_id":"tag(tag_name:String,content:Lucky::AllowedInTags|String|Nil=\"\",options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"tag","abstract":false,"args":[{"name":"tag_name","external_name":"tag_name","restriction":"String"},{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String | ::Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(tag_name : String, content : Lucky::AllowedInTags | String | Nil = \"\", options = EMPTY_HTML_ATTRS, attrs : Array(Symbol) = [] of Symbol, **other_options) : Nil","args_html":"(tag_name : <a href=\"../String.html\">String</a>, content : <a href=\"../Lucky/AllowedInTags.html\">Lucky::AllowedInTags</a> | <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/custom_tags.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/custom_tags.cr#L5"},"def":{"name":"tag","args":[{"name":"tag_name","external_name":"tag_name","restriction":"String"},{"name":"content","default_value":"\"\"","external_name":"content","restriction":"Lucky::AllowedInTags | String | ::Nil"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\n\ntag(tag_name, attrs, merged_options) do\n  text(content)\nend\n"},"external_var":false},{"html_id":"tag(tag_name:String,options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"tag","abstract":false,"args":[{"name":"tag_name","external_name":"tag_name","restriction":"String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(tag_name : String, options = EMPTY_HTML_ATTRS, **other_options) : Nil","args_html":"(tag_name : <a href=\"../String.html\">String</a>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/custom_tags.cr","line_number":19,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/custom_tags.cr#L19"},"def":{"name":"tag","args":[{"name":"tag_name","external_name":"tag_name","restriction":"String"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"tag(tag_name, \"\", options, **other_options)"},"external_var":false},{"html_id":"tag(tag_name:String,attrs:Array(Symbol)=[]ofSymbol,options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"tag","abstract":false,"args":[{"name":"tag_name","external_name":"tag_name","restriction":"String"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(tag_name : String, attrs : Array(Symbol) = [] of Symbol, options = EMPTY_HTML_ATTRS, **other_options, &) : Nil","args_html":"(tag_name : <a href=\"../String.html\">String</a>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/custom_tags.cr","line_number":27,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/custom_tags.cr#L27"},"def":{"name":"tag","args":[{"name":"tag_name","external_name":"tag_name","restriction":"String"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","external_name":"other_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nboolean_attrs = build_boolean_attrs(attrs)\n(((view << \"<#{tag_name}\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</#{tag_name}>\"\n"},"external_var":false}]},{"html_id":"lucky/Lucky/DataResponse","path":"Lucky/DataResponse.html","kind":"class","full_name":"Lucky::DataResponse","name":"DataResponse","abstract":false,"superclass":{"html_id":"lucky/Lucky/Response","kind":"class","full_name":"Lucky::Response","name":"Response"},"ancestors":[{"html_id":"lucky/Lucky/Response","kind":"class","full_name":"Lucky::Response","name":"Response"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/data_response.cr","line_number":31,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/data_response.cr#L31"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_STATUS","name":"DEFAULT_STATUS","value":"200"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"    data result, filename: \"my_report.csv\"\n  end\nend\n```","summary":"<p>data result, filename: &quot;my_report.csv&quot;   end end ```</p>","constructors":[{"html_id":"new(context:HTTP::Server::Context,data:String,content_type:String=\"application/octet-stream\",disposition:String=\"attachment\",filename:String|Nil=nil,status:Int32|Nil=nil,debug_message:String|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"data","external_name":"data","restriction":"String"},{"name":"content_type","default_value":"\"application/octet-stream\"","external_name":"content_type","restriction":"String"},{"name":"disposition","default_value":"\"attachment\"","external_name":"disposition","restriction":"String"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"debug_message","default_value":"nil","external_name":"debug_message","restriction":"String | ::Nil"}],"args_string":"(context : HTTP::Server::Context, data : String, content_type : String = \"application/octet-stream\", disposition : String = \"attachment\", filename : String | Nil = nil, status : Int32 | Nil = nil, debug_message : String | Nil = nil)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>, data : <a href=\"../String.html\">String</a>, content_type : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;application/octet-stream&quot;</span>, disposition : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;attachment&quot;</span>, filename : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, status : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, debug_message : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/lucky/data_response.cr","line_number":37,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/data_response.cr#L37"},"def":{"name":"new","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"data","external_name":"data","restriction":"String"},{"name":"content_type","default_value":"\"application/octet-stream\"","external_name":"content_type","restriction":"String"},{"name":"disposition","default_value":"\"attachment\"","external_name":"disposition","restriction":"String"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"debug_message","default_value":"nil","external_name":"debug_message","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(context, data, content_type, disposition, filename, status, debug_message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"content_type:String-instance-method","name":"content_type","abstract":false,"location":{"filename":"src/lucky/data_response.cr","line_number":34,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/data_response.cr#L34"},"def":{"name":"content_type","visibility":"Public","body":"@content_type"},"external_var":false},{"html_id":"context:HTTP::Server::Context-instance-method","name":"context","abstract":false,"location":{"filename":"src/lucky/data_response.cr","line_number":34,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/data_response.cr#L34"},"def":{"name":"context","visibility":"Public","body":"@context"},"external_var":false},{"html_id":"data:String-instance-method","name":"data","abstract":false,"location":{"filename":"src/lucky/data_response.cr","line_number":34,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/data_response.cr#L34"},"def":{"name":"data","visibility":"Public","body":"@data"},"external_var":false},{"html_id":"debug_message:String|Nil-instance-method","name":"debug_message","abstract":false,"location":{"filename":"src/lucky/data_response.cr","line_number":35,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/data_response.cr#L35"},"def":{"name":"debug_message","return_type":"String | ::Nil","visibility":"Public","body":"@debug_message"},"external_var":false},{"html_id":"disposition:String-instance-method","name":"disposition","abstract":false,"location":{"filename":"src/lucky/data_response.cr","line_number":69,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/data_response.cr#L69"},"def":{"name":"disposition","return_type":"String","visibility":"Public","body":"if custom_filename?\n  \"#{@disposition}; filename=\\\"#{filename}\\\"\"\nelse\n  @disposition\nend"},"external_var":false},{"html_id":"filename:String?-instance-method","name":"filename","abstract":false,"location":{"filename":"src/lucky/data_response.cr","line_number":34,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/data_response.cr#L34"},"def":{"name":"filename","visibility":"Public","body":"@filename"},"external_var":false},{"html_id":"headers-instance-method","name":"headers","abstract":false,"location":{"filename":"src/lucky/data_response.cr","line_number":34,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/data_response.cr#L34"},"def":{"name":"headers","visibility":"Public","body":"@headers"},"external_var":false},{"html_id":"print:Nil-instance-method","name":"print","abstract":false,"location":{"filename":"src/lucky/data_response.cr","line_number":46,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/data_response.cr#L46"},"def":{"name":"print","return_type":"Nil","visibility":"Public","body":"set_response_headers\ncontext.response.print(data)\n"},"external_var":false},{"html_id":"status:Int-instance-method","name":"status","abstract":false,"location":{"filename":"src/lucky/data_response.cr","line_number":51,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/data_response.cr#L51"},"def":{"name":"status","return_type":"Int","visibility":"Public","body":"(@status || context.response.status_code) || DEFAULT_STATUS"},"external_var":false}]},{"html_id":"lucky/Lucky/EnforceUnderscoredRoute","path":"Lucky/EnforceUnderscoredRoute.html","kind":"module","full_name":"Lucky::EnforceUnderscoredRoute","name":"EnforceUnderscoredRoute","abstract":false,"locations":[{"filename":"src/lucky/enforce_underscored_route.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/enforce_underscored_route.cr#L5"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Include this in your actions to enforce underscores are used in your paths\n\nThis is purely to help maintain consistency in your app and can be removed if\ndesired.","summary":"<p>Include this in your actions to enforce underscores are used in your paths</p>","macros":[{"html_id":"enforce_route_style(path,action)-macro","name":"enforce_route_style","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"action","external_name":"action","restriction":""}],"args_string":"(path, action)","args_html":"(path, action)","location":{"filename":"src/lucky/enforce_underscored_route.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/enforce_underscored_route.cr#L6"},"def":{"name":"enforce_route_style","args":[{"name":"path","external_name":"path","restriction":""},{"name":"action","external_name":"action","restriction":""}],"visibility":"Public","body":"    \n{% if path.includes?(\"-\") %}\n      {% raise(\"#{path} defined in '#{action}' should use an underscore.\\n\\nIn '#{action}'\\n\\n  ▸ Change #{path}\\n  ▸ To #{path.gsub(/-/, \"_\")}\\n\\nOr, skip the style check for this action\\n\\n    class #{action}\\n  +  include Lucky::SkipRouteStyleCheck\\n    end\\n\\nOr, skip checking all actions by removing 'Lucky::EnforceUnderscoredRoute'\\n\\n    # Remove from both BrowserAction and ApiAction\\n    class BrowserAction/ApiAction\\n  -  include Lucky::EnforceUnderscoredRoute\\n    end\\n\\n\")\n%}\n    {% end %}\n\n  \n"}}]},{"html_id":"lucky/Lucky/Error","path":"Lucky/Error.html","kind":"class","full_name":"Lucky::Error","name":"Error","abstract":false,"superclass":{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L5"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"lucky/Lucky/CookieNotFoundError","kind":"class","full_name":"Lucky::CookieNotFoundError","name":"CookieNotFoundError"},{"html_id":"lucky/Lucky/CookieOverflowError","kind":"class","full_name":"Lucky::CookieOverflowError","name":"CookieOverflowError"},{"html_id":"lucky/Lucky/InvalidCookieValueError","kind":"class","full_name":"Lucky::InvalidCookieValueError","name":"InvalidCookieValueError"},{"html_id":"lucky/Lucky/InvalidFlashJSONError","kind":"class","full_name":"Lucky::InvalidFlashJSONError","name":"InvalidFlashJSONError"},{"html_id":"lucky/Lucky/InvalidMessageError","kind":"class","full_name":"Lucky::InvalidMessageError","name":"InvalidMessageError"},{"html_id":"lucky/Lucky/InvalidParamError","kind":"class","full_name":"Lucky::InvalidParamError","name":"InvalidParamError"},{"html_id":"lucky/Lucky/InvalidSignatureError","kind":"class","full_name":"Lucky::InvalidSignatureError","name":"InvalidSignatureError"},{"html_id":"lucky/Lucky/InvalidSubdomainError","kind":"class","full_name":"Lucky::InvalidSubdomainError","name":"InvalidSubdomainError"},{"html_id":"lucky/Lucky/MissingFileError","kind":"class","full_name":"Lucky::MissingFileError","name":"MissingFileError"},{"html_id":"lucky/Lucky/MissingNestedParamError","kind":"class","full_name":"Lucky::MissingNestedParamError","name":"MissingNestedParamError"},{"html_id":"lucky/Lucky/MissingParamError","kind":"class","full_name":"Lucky::MissingParamError","name":"MissingParamError"},{"html_id":"lucky/Lucky/MissingRateLimitIdentifier","kind":"class","full_name":"Lucky::MissingRateLimitIdentifier","name":"MissingRateLimitIdentifier"},{"html_id":"lucky/Lucky/NotAcceptableError","kind":"class","full_name":"Lucky::NotAcceptableError","name":"NotAcceptableError"},{"html_id":"lucky/Lucky/ParamParsingError","kind":"class","full_name":"Lucky::ParamParsingError","name":"ParamParsingError"},{"html_id":"lucky/Lucky/RouteNotFoundError","kind":"class","full_name":"Lucky::RouteNotFoundError","name":"RouteNotFoundError"},{"html_id":"lucky/Lucky/UnknownAcceptHeaderError","kind":"class","full_name":"Lucky::UnknownAcceptHeaderError","name":"UnknownAcceptHeaderError"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"= Lucky Errors\n\nGeneric Lucky Record exception class.","summary":"<p>= Lucky Errors</p>"},{"html_id":"lucky/Lucky/ErrorAction","path":"Lucky/ErrorAction.html","kind":"class","full_name":"Lucky::ErrorAction","name":"ErrorAction","abstract":true,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Lucky/Exposable","kind":"module","full_name":"Lucky::Exposable","name":"Exposable"},{"html_id":"lucky/Lucky/Redirectable","kind":"module","full_name":"Lucky::Redirectable","name":"Redirectable"},{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Lucky/Renderable","kind":"module","full_name":"Lucky::Renderable","name":"Renderable"},{"html_id":"lucky/Lucky/ParamHelpers","kind":"module","full_name":"Lucky::ParamHelpers","name":"ParamHelpers"},{"html_id":"lucky/Lucky/ActionDelegates","kind":"module","full_name":"Lucky::ActionDelegates","name":"ActionDelegates"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/error_action.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_action.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"EXPOSURES","name":"EXPOSURES","value":"[] of Symbol"}],"included_modules":[{"html_id":"lucky/Lucky/ActionDelegates","kind":"module","full_name":"Lucky::ActionDelegates","name":"ActionDelegates"},{"html_id":"lucky/Lucky/Exposable","kind":"module","full_name":"Lucky::Exposable","name":"Exposable"},{"html_id":"lucky/Lucky/ParamHelpers","kind":"module","full_name":"Lucky::ParamHelpers","name":"ParamHelpers"},{"html_id":"lucky/Lucky/Redirectable","kind":"module","full_name":"Lucky::Redirectable","name":"Redirectable"},{"html_id":"lucky/Lucky/Renderable","kind":"module","full_name":"Lucky::Renderable","name":"Renderable"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(context:HTTP::Server::Context)-class-method","name":"new","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>)","location":{"filename":"src/lucky/error_action.cr","line_number":30,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_action.cr#L30"},"def":{"name":"new","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"visibility":"Public","body":"_ = allocate\n_.initialize(context)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"_dont_report:Array(Exception.class)-instance-method","name":"_dont_report","abstract":false,"location":{"filename":"src/lucky/error_action.cr","line_number":16,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_action.cr#L16"},"def":{"name":"_dont_report","return_type":"Array(Exception.class)","visibility":"Public","body":"[] of Exception.class"},"external_var":false},{"html_id":"context:HTTP::Server::Context-instance-method","name":"context","abstract":false,"location":{"filename":"src/lucky/error_action.cr","line_number":14,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_action.cr#L14"},"def":{"name":"context","visibility":"Public","body":"@context"},"external_var":false},{"html_id":"cookies(*args,**options)-instance-method","name":"cookies","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"cookies","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"context.cookies(*args, **options)"},"external_var":false},{"html_id":"cookies(*args,**options,&)-instance-method","name":"cookies","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"cookies","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"context.cookies(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"default_render(error:Exception):Lucky::Response-instance-method","name":"default_render","abstract":true,"args":[{"name":"error","external_name":"error","restriction":"Exception"}],"args_string":"(error : Exception) : Lucky::Response","args_html":"(error : Exception) : <a href=\"../Lucky/Response.html\">Lucky::Response</a>","location":{"filename":"src/lucky/error_action.cr","line_number":37,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_action.cr#L37"},"def":{"name":"default_render","args":[{"name":"error","external_name":"error","restriction":"Exception"}],"return_type":"Lucky::Response","visibility":"Public","body":""},"external_var":false},{"html_id":"flash(*args,**options)-instance-method","name":"flash","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"flash","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"context.flash(*args, **options)"},"external_var":false},{"html_id":"flash(*args,**options,&)-instance-method","name":"flash","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"flash","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"context.flash(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"perform_action(error:Exception)-instance-method","name":"perform_action","abstract":false,"args":[{"name":"error","external_name":"error","restriction":"Exception"}],"args_string":"(error : Exception)","args_html":"(error : Exception)","location":{"filename":"src/lucky/error_action.cr","line_number":40,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_action.cr#L40"},"def":{"name":"perform_action","args":[{"name":"error","external_name":"error","restriction":"Exception"}],"visibility":"Public","body":"response = (render(error)) || (default_render(error))\nensure_response_is_returned(response)\n\nif html? && Lucky::ErrorHandler.settings.show_debug_output\n  response = render_exception_page(error, response.status)\nend\n\nresponse.print\n\nif !(_dont_report.includes?(error.class))\n  report(error)\nend\n"},"external_var":false},{"html_id":"render_exception_page(error:Exception,status:Int):Lucky::Response-instance-method","name":"render_exception_page","abstract":false,"args":[{"name":"error","external_name":"error","restriction":"Exception"},{"name":"status","external_name":"status","restriction":"Int"}],"args_string":"(error : Exception, status : Int) : Lucky::Response","args_html":"(error : Exception, status : Int) : <a href=\"../Lucky/Response.html\">Lucky::Response</a>","location":{"filename":"src/lucky/error_action.cr","line_number":81,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_action.cr#L81"},"def":{"name":"render_exception_page","args":[{"name":"error","external_name":"error","restriction":"Exception"},{"name":"status","external_name":"status","restriction":"Int"}],"return_type":"Lucky::Response","visibility":"Public","body":"exception_page = Lucky::ExceptionPage.new(error, context.request.method, context.request.path, context.response.status, \"Error #{context.response.status.to_i} #{context.response.status.description}\", context.request.query_params, context.response.headers, context.response.cookies, error.message)\nsend_text_response(body: exception_page.to_s, content_type: \"text/html\", status: status)\n"},"external_var":false},{"html_id":"report(error:Exception):Nil-instance-method","name":"report","abstract":true,"args":[{"name":"error","external_name":"error","restriction":"Exception"}],"args_string":"(error : Exception) : Nil","args_html":"(error : Exception) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/error_action.cr","line_number":38,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_action.cr#L38"},"def":{"name":"report","args":[{"name":"error","external_name":"error","restriction":"Exception"}],"return_type":"Nil","visibility":"Public","body":""},"external_var":false},{"html_id":"request(*args,**options)-instance-method","name":"request","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"request","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"context.request(*args, **options)"},"external_var":false},{"html_id":"request(*args,**options,&)-instance-method","name":"request","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"request","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"context.request(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"response(*args,**options)-instance-method","name":"response","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"response","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"context.response(*args, **options)"},"external_var":false},{"html_id":"response(*args,**options,&)-instance-method","name":"response","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"response","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"context.response(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"session(*args,**options)-instance-method","name":"session","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","def":{"name":"session","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"context.session(*args, **options)"},"external_var":false},{"html_id":"session(*args,**options,&)-instance-method","name":"session","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","def":{"name":"session","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"context.session(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false}],"macros":[{"html_id":"dont_report(exception_classes)-macro","name":"dont_report","abstract":false,"args":[{"name":"exception_classes","external_name":"exception_classes","restriction":""}],"args_string":"(exception_classes)","args_html":"(exception_classes)","location":{"filename":"src/lucky/error_action.cr","line_number":20,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_action.cr#L20"},"def":{"name":"dont_report","args":[{"name":"exception_classes","external_name":"exception_classes","restriction":""}],"visibility":"Public","body":"    \n{% if exception_classes.is_a?(ArrayLiteral) %}\n      def _dont_report : Array(Exception.class)\n        {{ exception_classes }} of Exception.class\n      end\n    {% else %}\n      {% exception_classes.raise(\"dont_report expects an array of Exception classes.\") %}\n    {% end %}\n\n  \n"}}]},{"html_id":"lucky/Lucky/ErrorHandler","path":"Lucky/ErrorHandler.html","kind":"class","full_name":"Lucky::ErrorHandler","name":"ErrorHandler","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/error_handler.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_handler.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: show_debug_output : Bool, example: nil, validation: nil}, {decl: log_error_exception : Bool = true, example: nil, validation: nil}] of Nil"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/error_handler.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_handler.cr#L4"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/error_handler.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_handler.cr#L4"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"constructors":[{"html_id":"new(action:Lucky::ErrorAction.class)-class-method","name":"new","abstract":false,"args":[{"name":"action","external_name":"action","restriction":"Lucky::ErrorAction.class"}],"args_string":"(action : Lucky::ErrorAction.class)","args_html":"(action : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">ErrorAction</span>.<span class=\"k\">class</span>)","location":{"filename":"src/lucky/error_handler.cr","line_number":11,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_handler.cr#L11"},"def":{"name":"new","args":[{"name":"action","external_name":"action","restriction":"Lucky::ErrorAction.class"}],"visibility":"Public","body":"_ = allocate\n_.initialize(action)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"call(context:HTTP::Server::Context)-instance-method","name":"call","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>)","location":{"filename":"src/lucky/error_handler.cr","line_number":14,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_handler.cr#L14"},"def":{"name":"call","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"visibility":"Public","body":"begin\n  call_next(context)\nrescue error : Exception\n  call_error_action(context, error)\nend"},"external_var":false},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/error_handler.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_handler.cr#L4"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/ErrorHandler/HabitatSettings","path":"Lucky/ErrorHandler/HabitatSettings.html","kind":"class","full_name":"Lucky::ErrorHandler::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/error_handler.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/error_handler.cr#L4"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/ErrorHandler","kind":"class","full_name":"Lucky::ErrorHandler","name":"ErrorHandler"},"class_methods":[{"html_id":"log_error_exception:Bool-class-method","name":"log_error_exception","abstract":false,"def":{"name":"log_error_exception","return_type":"Bool","visibility":"Public","body":"@@log_error_exception.not_nil!"},"external_var":false},{"html_id":"log_error_exception=(value:Bool)-class-method","name":"log_error_exception=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../../Bool.html\">Bool</a>)","def":{"name":"log_error_exception=","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"visibility":"Public","body":"@@log_error_exception = value"},"external_var":false},{"html_id":"log_error_exception?-class-method","name":"log_error_exception?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use log_error_exception in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use log_error_exception in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"log_error_exception?","visibility":"Public","body":"@@log_error_exception"},"external_var":false},{"html_id":"show_debug_output:Bool-class-method","name":"show_debug_output","abstract":false,"def":{"name":"show_debug_output","return_type":"Bool","visibility":"Public","body":"@@show_debug_output.not_nil!"},"external_var":false},{"html_id":"show_debug_output=(value:Bool)-class-method","name":"show_debug_output=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../../Bool.html\">Bool</a>)","def":{"name":"show_debug_output=","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"visibility":"Public","body":"@@show_debug_output = value"},"external_var":false},{"html_id":"show_debug_output?-class-method","name":"show_debug_output?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use show_debug_output in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use show_debug_output in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"show_debug_output?","visibility":"Public","body":"@@show_debug_output"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"show_debug_output\" => show_debug_output, \"log_error_exception\" => log_error_exception}"},"external_var":false}]}]},{"html_id":"lucky/Lucky/Events","path":"Lucky/Events.html","kind":"module","full_name":"Lucky::Events","name":"Events","abstract":false,"locations":[{"filename":"src/lucky/events/pipe_event.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/pipe_event.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"types":[{"html_id":"lucky/Lucky/Events/PipeEvent","path":"Lucky/Events/PipeEvent.html","kind":"class","full_name":"Lucky::Events::PipeEvent","name":"PipeEvent","abstract":false,"superclass":{"html_id":"lucky/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},"ancestors":[{"html_id":"lucky/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},{"html_id":"lucky/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/events/pipe_event.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/pipe_event.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/Events","kind":"module","full_name":"Lucky::Events","name":"Events"},"class_methods":[{"html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"def":{"name":"logged_events","visibility":"Public","body":"@@logged_events"},"external_var":false},{"html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","def":{"name":"logged_events=","args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"visibility":"Public","body":"@@logged_events = logged_events"},"external_var":false}],"constructors":[{"html_id":"new(name:String,position:Position,continued:Bool)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"position","external_name":"position","restriction":"Position"},{"name":"continued","external_name":"continued","restriction":"Bool"}],"args_string":"(name : String, position : Position, continued : Bool)","args_html":"(name : <a href=\"../../String.html\">String</a>, position : <a href=\"../../Lucky/Events/PipeEvent/Position.html\">Position</a>, continued : <a href=\"../../Bool.html\">Bool</a>)","location":{"filename":"src/lucky/events/pipe_event.cr","line_number":9,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/pipe_event.cr#L9"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"position","external_name":"position","restriction":"Position"},{"name":"continued","external_name":"continued","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, position, continued)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"after?:Bool-instance-method","name":"after?","abstract":false,"location":{"filename":"src/lucky/events/pipe_event.cr","line_number":20,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/pipe_event.cr#L20"},"def":{"name":"after?","return_type":"Bool","visibility":"Public","body":"position == Position::After"},"external_var":false},{"html_id":"before?:Bool-instance-method","name":"before?","abstract":false,"location":{"filename":"src/lucky/events/pipe_event.cr","line_number":16,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/pipe_event.cr#L16"},"def":{"name":"before?","return_type":"Bool","visibility":"Public","body":"position == Position::Before"},"external_var":false},{"html_id":"continued:Bool-instance-method","name":"continued","abstract":false,"location":{"filename":"src/lucky/events/pipe_event.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/pipe_event.cr#L2"},"def":{"name":"continued","visibility":"Public","body":"@continued"},"external_var":false},{"html_id":"name:String-instance-method","name":"name","doc":"Returns the name of the event.\n\nThe event name is the name of the class. So an class of `MyShard::MyEvent` would\nreturn `\"MyShard::MyEvent\"`.","summary":"<p>Returns the name of the event.</p>","abstract":false,"location":{"filename":"src/lucky/events/pipe_event.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/pipe_event.cr#L2"},"def":{"name":"name","visibility":"Public","body":"@name"},"external_var":false},{"html_id":"position:Lucky::Events::PipeEvent::Position-instance-method","name":"position","abstract":false,"location":{"filename":"src/lucky/events/pipe_event.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/pipe_event.cr#L2"},"def":{"name":"position","visibility":"Public","body":"@position"},"external_var":false},{"html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"def":{"name":"started_at","return_type":"Time","visibility":"Public","body":"@started_at"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/Events/PipeEvent/Position","path":"Lucky/Events/PipeEvent/Position.html","kind":"enum","full_name":"Lucky::Events::PipeEvent::Position","name":"Position","abstract":false,"ancestors":[{"html_id":"lucky/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"lucky/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/events/pipe_event.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/pipe_event.cr#L4"}],"repository_name":"lucky","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Before","name":"Before","value":"0"},{"id":"After","name":"After","value":"1"}],"namespace":{"html_id":"lucky/Lucky/Events/PipeEvent","kind":"class","full_name":"Lucky::Events::PipeEvent","name":"PipeEvent"},"instance_methods":[{"html_id":"after?-instance-method","name":"after?","doc":"Returns `true` if this enum value equals `After`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../../Lucky/Events/PipeEvent/Position.html#After\">After</a></code></p>","abstract":false,"location":{"filename":"src/lucky/events/pipe_event.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/pipe_event.cr#L6"},"def":{"name":"after?","visibility":"Public","body":"self == After"},"external_var":false},{"html_id":"before?-instance-method","name":"before?","doc":"Returns `true` if this enum value equals `Before`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../../Lucky/Events/PipeEvent/Position.html#Before\">Before</a></code></p>","abstract":false,"location":{"filename":"src/lucky/events/pipe_event.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/pipe_event.cr#L5"},"def":{"name":"before?","visibility":"Public","body":"self == Before"},"external_var":false}]}]},{"html_id":"lucky/Lucky/Events/RequestCompleteEvent","path":"Lucky/Events/RequestCompleteEvent.html","kind":"class","full_name":"Lucky::Events::RequestCompleteEvent","name":"RequestCompleteEvent","abstract":false,"superclass":{"html_id":"lucky/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},"ancestors":[{"html_id":"lucky/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},{"html_id":"lucky/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/events/request_complete_event.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/request_complete_event.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/Events","kind":"module","full_name":"Lucky::Events","name":"Events"},"class_methods":[{"html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"def":{"name":"logged_events","visibility":"Public","body":"@@logged_events"},"external_var":false},{"html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","def":{"name":"logged_events=","args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"visibility":"Public","body":"@@logged_events = logged_events"},"external_var":false}],"constructors":[{"html_id":"new(duration:Time::Span)-class-method","name":"new","abstract":false,"args":[{"name":"duration","external_name":"duration","restriction":"Time::Span"}],"args_string":"(duration : Time::Span)","args_html":"(duration : Time::Span)","location":{"filename":"src/lucky/events/request_complete_event.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/request_complete_event.cr#L4"},"def":{"name":"new","args":[{"name":"duration","external_name":"duration","restriction":"Time::Span"}],"visibility":"Public","body":"_ = allocate\n_.initialize(duration)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"duration:Time::Span-instance-method","name":"duration","abstract":false,"location":{"filename":"src/lucky/events/request_complete_event.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/events/request_complete_event.cr#L2"},"def":{"name":"duration","return_type":"Time::Span","visibility":"Public","body":"@duration"},"external_var":false},{"html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"def":{"name":"started_at","return_type":"Time","visibility":"Public","body":"@started_at"},"external_var":false}]}]},{"html_id":"lucky/Lucky/ExceptionPage","path":"Lucky/ExceptionPage.html","kind":"class","full_name":"Lucky::ExceptionPage","name":"ExceptionPage","abstract":false,"superclass":{"html_id":"lucky/ExceptionPage","kind":"class","full_name":"ExceptionPage","name":"ExceptionPage"},"ancestors":[{"html_id":"lucky/ExceptionPage","kind":"class","full_name":"ExceptionPage","name":"ExceptionPage"},{"html_id":"lucky/ExceptionPage/Helpers","kind":"module","full_name":"ExceptionPage::Helpers","name":"Helpers"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/exception_page.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/exception_page.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"project_url:String-instance-method","name":"project_url","doc":"Add an optional link to your project","summary":"<p>Add an optional link to your project</p>","abstract":false,"location":{"filename":"src/lucky/exception_page.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/exception_page.cr#L6"},"def":{"name":"project_url","return_type":"String","visibility":"Public","body":"\"https://luckyframework.org/\""},"external_var":false},{"html_id":"styles:ExceptionPage::Styles-instance-method","name":"styles","abstract":false,"location":{"filename":"src/lucky/exception_page.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/exception_page.cr#L2"},"def":{"name":"styles","return_type":"ExceptionPage::Styles","visibility":"Public","body":"Styles.new(accent: lucky_green, logo_uri: lucky_logo)"},"external_var":false}]},{"html_id":"lucky/Lucky/Exposable","path":"Lucky/Exposable.html","kind":"module","full_name":"Lucky::Exposable","name":"Exposable","abstract":false,"locations":[{"filename":"src/lucky/exposable.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/exposable.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/Action","kind":"class","full_name":"Lucky::Action","name":"Action"},{"html_id":"lucky/Lucky/ErrorAction","kind":"class","full_name":"Lucky::ErrorAction","name":"ErrorAction"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"macros":[{"html_id":"expose(method_name)-macro","name":"expose","doc":"Sends the result of a method to the page as if it was passed as an argument.\n\nImagine having data that is used by many actions across your app, such\nas the current user. It can get tedious to pass that data for every action.\nThe `expose` macro will make sure that whatever data you need is passed\nautomatically.\n\nHere's what things might look like without `expose`:\n\n```\nclass BrowserAction\n  def current_user\n    # some way to find the current user\n  end\nend\n```\n\nEach action must pass `current_user` manually. Note that each action\ninherits from `BrowserAction` and therefore has access to `current_user`:\n\n```\nclass Messages::Index < BrowserAction\n  get \"/messages\" do\n    html IndexPage, current_user: current_user\n  end\nend\n\nclass Messages::New < BrowserAction\n  get \"/messages/new\" do\n    html NewPage, current_user: current_user\n  end\nend\n```\n\nPassing `current_user: current_user` every time gets pretty old. Enter\n`expose`:\n\n```\nclass BrowserAction\n  expose current_user\n\n  def current_user\n    # some way to find the current user\n  end\nend\n```\n\nNow our actions are much nicer, especially when we start to have multiple\narguments for each action:\n\n```\nclass Messages::Index < BrowserAction\n  get \"/messages\" do\n    html IndexPage\n  end\nend\n\nclass Messages::New < BrowserAction\n  get \"/messages/new\" do\n    html NewPage\n  end\nend\n```\n\n## Exposing private methods\n\nAlso useful is the ability to make a private method available:\n\n```\nclass Messages::Show < BrowserAction\n  expose message\n\n  get \"/messages/:id\" do\n    html ShowPage\n  end\n\n  private def message\n    MessageQuery.find(id)\n  end\nend\n```\n\nUsing `expose` here will pass `message` to the `ShowPage`, while keeping the\nmethod private. Without `expose` the action would look like this:\n\n```\nget \"/messages/:id\" do\n  html ShowPage, message: message\nend\n```","summary":"<p>Sends the result of a method to the page as if it was passed as an argument.</p>","abstract":false,"args":[{"name":"method_name","external_name":"method_name","restriction":""}],"args_string":"(method_name)","args_html":"(method_name)","location":{"filename":"src/lucky/exposable.cr","line_number":109,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/exposable.cr#L109"},"def":{"name":"expose","args":[{"name":"method_name","external_name":"method_name","restriction":""}],"visibility":"Public","body":"    \n{% method_name_str = method_name.stringify %}\n\n    \n{% if (method_name_str.ends_with?('?')) || (method_name_str.ends_with?('!')) %}\n      {% method_name.raise(\"\\nMethods ending in '?' or '!' cannot be exposed to pages.\\n#{@type.name} called `expose #{method_name_str.id}`\\n\\nTry this...\\n\\n  ▸ Define your method without ? or ! then...\\n  ▸ expose #{(method_name_str.gsub(/[!?]$/, \"\")).id}\")\n%}\n    {% end %}\n\n    \n{% EXPOSURES << method_name.id %}\n\n  \n"}}]},{"html_id":"lucky/Lucky/FileResponse","path":"Lucky/FileResponse.html","kind":"class","full_name":"Lucky::FileResponse","name":"FileResponse","abstract":false,"superclass":{"html_id":"lucky/Lucky/Response","kind":"class","full_name":"Lucky::Response","name":"Response"},"ancestors":[{"html_id":"lucky/Lucky/Response","kind":"class","full_name":"Lucky::Response","name":"Response"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/file_response.cr","line_number":41,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/file_response.cr#L41"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_STATUS","name":"DEFAULT_STATUS","value":"200"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Return a file's contents for the request.\n\n`file` can be used to return a file and it's contents to the browser, or\nrender the contents of the file inline to a web browser. Options for the\nmethod:\n\n* `path` - first argument, _required_. The path to the file.\n* `content_type` - defaults to the mime-type that corresponds to the file's\n  extension.\n* `disposition` - default \"attachment\" (downloads file), or \"inline\"\n  (renders file in browser).\n* `filename` - default `nil`. When overridden and paired with\n  `disposition: \"attachment\"` this will download file with the provided\n  filename.\n* status - `Int32` - the HTTP status code to\n  return with.\n\nExamples:\n\n```\nclass Rendering::File < Lucky::Action\n  get \"/file\" do\n    file \"spec/fixtures/lucky_logo.png\"\n  end\nend\n```\n\nFor a plain text file with no extension, have it downloaded with the file\nnamed \"custom.html\" and the content_type \"text/html\":\n\n```\nclass Rendering::File::CustomContentType < Lucky::Action\n  get \"/foo\" do\n    file \"spec/fixtures/plain_text\",\n      disposition: \"attachment\",\n      filename: \"custom.html\",\n      content_type: \"text/html\"\n  end\nend\n```","summary":"<p>Return a file's contents for the request.</p>","constructors":[{"html_id":"new(context:HTTP::Server::Context,path:String,content_type:String|Nil=nil,disposition:String=\"attachment\",filename:String|Nil=nil,status:Int32|Nil=nil,debug_message:String|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"path","external_name":"path","restriction":"String"},{"name":"content_type","default_value":"nil","external_name":"content_type","restriction":"String | ::Nil"},{"name":"disposition","default_value":"\"attachment\"","external_name":"disposition","restriction":"String"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"debug_message","default_value":"nil","external_name":"debug_message","restriction":"String | ::Nil"}],"args_string":"(context : HTTP::Server::Context, path : String, content_type : String | Nil = nil, disposition : String = \"attachment\", filename : String | Nil = nil, status : Int32 | Nil = nil, debug_message : String | Nil = nil)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>, path : <a href=\"../String.html\">String</a>, content_type : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, disposition : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;attachment&quot;</span>, filename : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, status : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, debug_message : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/lucky/file_response.cr","line_number":47,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/file_response.cr#L47"},"def":{"name":"new","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"path","external_name":"path","restriction":"String"},{"name":"content_type","default_value":"nil","external_name":"content_type","restriction":"String | ::Nil"},{"name":"disposition","default_value":"\"attachment\"","external_name":"disposition","restriction":"String"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"debug_message","default_value":"nil","external_name":"debug_message","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(context, path, content_type, disposition, filename, status, debug_message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"content_type:String-instance-method","name":"content_type","abstract":false,"location":{"filename":"src/lucky/file_response.cr","line_number":81,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/file_response.cr#L81"},"def":{"name":"content_type","return_type":"String","visibility":"Public","body":"@content_type || content_type_from_file"},"external_var":false},{"html_id":"context:HTTP::Server::Context-instance-method","name":"context","abstract":false,"location":{"filename":"src/lucky/file_response.cr","line_number":44,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/file_response.cr#L44"},"def":{"name":"context","visibility":"Public","body":"@context"},"external_var":false},{"html_id":"debug_message:String|Nil-instance-method","name":"debug_message","abstract":false,"location":{"filename":"src/lucky/file_response.cr","line_number":45,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/file_response.cr#L45"},"def":{"name":"debug_message","return_type":"String | ::Nil","visibility":"Public","body":"@debug_message"},"external_var":false},{"html_id":"disposition:String-instance-method","name":"disposition","abstract":false,"location":{"filename":"src/lucky/file_response.cr","line_number":85,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/file_response.cr#L85"},"def":{"name":"disposition","return_type":"String","visibility":"Public","body":"if custom_filename?\n  \"#{@disposition}; filename=\\\"#{filename}\\\"\"\nelse\n  @disposition\nend"},"external_var":false},{"html_id":"filename:String?-instance-method","name":"filename","abstract":false,"location":{"filename":"src/lucky/file_response.cr","line_number":44,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/file_response.cr#L44"},"def":{"name":"filename","visibility":"Public","body":"@filename"},"external_var":false},{"html_id":"headers-instance-method","name":"headers","abstract":false,"location":{"filename":"src/lucky/file_response.cr","line_number":44,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/file_response.cr#L44"},"def":{"name":"headers","visibility":"Public","body":"@headers"},"external_var":false},{"html_id":"path:String-instance-method","name":"path","abstract":false,"location":{"filename":"src/lucky/file_response.cr","line_number":44,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/file_response.cr#L44"},"def":{"name":"path","visibility":"Public","body":"@path"},"external_var":false},{"html_id":"print:Nil-instance-method","name":"print","abstract":false,"location":{"filename":"src/lucky/file_response.cr","line_number":56,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/file_response.cr#L56"},"def":{"name":"print","return_type":"Nil","visibility":"Public","body":"if file_exists?\nelse\n  raise(Lucky::MissingFileError.new(path))\nend\n\nset_response_headers\ncontext.response.status_code = status\nFile.open(full_path) do |file|\n  IO.copy(file, context.response)\nend\n"},"external_var":false},{"html_id":"status:Int-instance-method","name":"status","abstract":false,"location":{"filename":"src/lucky/file_response.cr","line_number":64,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/file_response.cr#L64"},"def":{"name":"status","return_type":"Int","visibility":"Public","body":"(@status || context.response.status_code) || DEFAULT_STATUS"},"external_var":false}]},{"html_id":"lucky/Lucky/FlashStore","path":"Lucky/FlashStore.html","kind":"class","full_name":"Lucky::FlashStore","name":"FlashStore","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/cookies/flash_store.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"SESSION_KEY","name":"SESSION_KEY","value":"\"_flash\""}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"class_methods":[{"html_id":"from_session(session:Lucky::Session):Lucky::FlashStore-class-method","name":"from_session","abstract":false,"args":[{"name":"session","external_name":"session","restriction":"Lucky::Session"}],"args_string":"(session : Lucky::Session) : Lucky::FlashStore","args_html":"(session : <a href=\"../Lucky/Session.html\">Lucky::Session</a>) : <a href=\"../Lucky/FlashStore.html\">Lucky::FlashStore</a>","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":10,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L10"},"def":{"name":"from_session","args":[{"name":"session","external_name":"session","restriction":"Lucky::Session"}],"return_type":"Lucky::FlashStore","visibility":"Public","body":"new.from_session(session)"},"external_var":false}],"instance_methods":[{"html_id":"any?(*args,**options)-instance-method","name":"any?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L8"},"def":{"name":"any?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"flashes.any?(*args, **options)"},"external_var":false},{"html_id":"any?(*args,**options,&)-instance-method","name":"any?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L8"},"def":{"name":"any?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"flashes.any?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"clear:Nil-instance-method","name":"clear","abstract":false,"location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":47,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L47"},"def":{"name":"clear","return_type":"Nil","visibility":"Public","body":"flashes.clear\ndiscard.clear\n"},"external_var":false},{"html_id":"each(*args,**options)-instance-method","name":"each","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L8"},"def":{"name":"each","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"flashes.each(*args, **options)"},"external_var":false},{"html_id":"each(*args,**options,&)-instance-method","name":"each","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L8"},"def":{"name":"each","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"flashes.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"empty?(*args,**options)-instance-method","name":"empty?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L8"},"def":{"name":"empty?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"flashes.empty?(*args, **options)"},"external_var":false},{"html_id":"empty?(*args,**options,&)-instance-method","name":"empty?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L8"},"def":{"name":"empty?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"flashes.empty?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"failure:String-instance-method","name":"failure","abstract":false,"location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L29"},"def":{"name":"failure","return_type":"String","visibility":"Public","body":"(get?(:failure)) || \"\""},"external_var":false},{"html_id":"failure=(message:String):String-instance-method","name":"failure=","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(message : String) : String","args_html":"(message : <a href=\"../String.html\">String</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L29"},"def":{"name":"failure=","args":[{"name":"message","external_name":"message","restriction":"String"}],"return_type":"String","visibility":"Public","body":"set(:failure, message)"},"external_var":false},{"html_id":"failure?:String|Nil-instance-method","name":"failure?","abstract":false,"location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L29"},"def":{"name":"failure?","return_type":"String | ::Nil","visibility":"Public","body":"get?(:failure)"},"external_var":false},{"html_id":"from_session(session:Lucky::Session):Lucky::FlashStore-instance-method","name":"from_session","abstract":false,"args":[{"name":"session","external_name":"session","restriction":"Lucky::Session"}],"args_string":"(session : Lucky::Session) : Lucky::FlashStore","args_html":"(session : <a href=\"../Lucky/Session.html\">Lucky::Session</a>) : <a href=\"../Lucky/FlashStore.html\">Lucky::FlashStore</a>","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":14,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L14"},"def":{"name":"from_session","args":[{"name":"session","external_name":"session","restriction":"Lucky::Session"}],"return_type":"Lucky::FlashStore","visibility":"Public","body":"begin\n  (session.get?(SESSION_KEY)).try do |json|\n    (JSON.parse(json)).as_h.each do |key, value|\n      set(key, value.as_s)\n    end\n  end\n  self\nrescue e : JSON::ParseException\n  raise(Lucky::InvalidFlashJSONError.new(session.get?(SESSION_KEY)))\nend"},"external_var":false},{"html_id":"get(key:Key):String-instance-method","name":"get","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : String","args_html":"(key : <a href=\"../Lucky/FlashStore/Key.html\">Key</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":57,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L57"},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"String","visibility":"Public","body":"flashes[key.to_s]"},"external_var":false},{"html_id":"get?(key:Key):String|Nil-instance-method","name":"get?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : String | Nil","args_html":"(key : <a href=\"../Lucky/FlashStore/Key.html\">Key</a>) : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":61,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L61"},"def":{"name":"get?","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"String | ::Nil","visibility":"Public","body":"flashes[key.to_s]?"},"external_var":false},{"html_id":"info:String-instance-method","name":"info","abstract":false,"location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L29"},"def":{"name":"info","return_type":"String","visibility":"Public","body":"(get?(:info)) || \"\""},"external_var":false},{"html_id":"info=(message:String):String-instance-method","name":"info=","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(message : String) : String","args_html":"(message : <a href=\"../String.html\">String</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L29"},"def":{"name":"info=","args":[{"name":"message","external_name":"message","restriction":"String"}],"return_type":"String","visibility":"Public","body":"set(:info, message)"},"external_var":false},{"html_id":"info?:String|Nil-instance-method","name":"info?","abstract":false,"location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L29"},"def":{"name":"info?","return_type":"String | ::Nil","visibility":"Public","body":"get?(:info)"},"external_var":false},{"html_id":"keep:Nil-instance-method","name":"keep","abstract":false,"location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":25,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L25"},"def":{"name":"keep","return_type":"Nil","visibility":"Public","body":"discard.clear"},"external_var":false},{"html_id":"set(key:Key,value:String):String-instance-method","name":"set","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(key : Key, value : String) : String","args_html":"(key : <a href=\"../Lucky/FlashStore/Key.html\">Key</a>, value : <a href=\"../String.html\">String</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":52,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L52"},"def":{"name":"set","args":[{"name":"key","external_name":"key","restriction":"Key"},{"name":"value","external_name":"value","restriction":"String"}],"return_type":"String","visibility":"Public","body":"discard << key.to_s\nflashes[key.to_s] = value\n"},"external_var":false},{"html_id":"success:String-instance-method","name":"success","abstract":false,"location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L29"},"def":{"name":"success","return_type":"String","visibility":"Public","body":"(get?(:success)) || \"\""},"external_var":false},{"html_id":"success=(message:String):String-instance-method","name":"success=","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(message : String) : String","args_html":"(message : <a href=\"../String.html\">String</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L29"},"def":{"name":"success=","args":[{"name":"message","external_name":"message","restriction":"String"}],"return_type":"String","visibility":"Public","body":"set(:success, message)"},"external_var":false},{"html_id":"success?:String|Nil-instance-method","name":"success?","abstract":false,"location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L29"},"def":{"name":"success?","return_type":"String | ::Nil","visibility":"Public","body":"get?(:success)"},"external_var":false},{"html_id":"to_json:String-instance-method","name":"to_json","abstract":false,"location":{"filename":"src/lucky/cookies/flash_store.cr","line_number":43,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L43"},"def":{"name":"to_json","return_type":"String","visibility":"Public","body":"(flashes.reject(discard)).to_json"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/FlashStore/Key","path":"Lucky/FlashStore/Key.html","kind":"alias","full_name":"Lucky::FlashStore::Key","name":"Key","abstract":false,"locations":[{"filename":"src/lucky/cookies/flash_store.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/flash_store.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":true,"aliased":"(String | Symbol)","aliased_html":"<a href=\"../../String.html\">String</a> | Symbol","const":false,"namespace":{"html_id":"lucky/Lucky/FlashStore","kind":"class","full_name":"Lucky::FlashStore","name":"FlashStore"}}]},{"html_id":"lucky/Lucky/ForceSSLHandler","path":"Lucky/ForceSSLHandler.html","kind":"class","full_name":"Lucky::ForceSSLHandler","name":"ForceSSLHandler","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/force_ssl_handler.cr","line_number":26,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/force_ssl_handler.cr#L26"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: redirect_status : Int32 = HTTP::Status::PERMANENT_REDIRECT.value, example: nil, validation: nil}, {decl: enabled : Bool, example: nil, validation: nil}, {decl: strict_transport_security : NamedTuple(max_age: Time::Span | Time::MonthSpan, include_subdomains: Bool) | ::Nil, example: nil, validation: nil}] of Nil"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"*Enabled* - The handler can be enabled/disabled. This is helpful for working\nin a local development environment.\n\n*Strict-Transport-Security* - Settings to configure the ['Strict-Transport-Security' header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security)\n\n```\n# Usually in config/force_ssl_handler.cr\nLucky::ForceSSLHandler.configure do |settings|\n  settings.redirect_status = 303\n  settings.enabled = false\n  settings.strict_transport_security = {max_age: 1.year, include_subdomains: true}\nend\n```","summary":"<p><em>Enabled</em> - The handler can be enabled/disabled.</p>","class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/force_ssl_handler.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/force_ssl_handler.cr#L29"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/force_ssl_handler.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/force_ssl_handler.cr#L29"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"instance_methods":[{"html_id":"call(context:HTTP::Server::Context)-instance-method","name":"call","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>)","location":{"filename":"src/lucky/force_ssl_handler.cr","line_number":35,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/force_ssl_handler.cr#L35"},"def":{"name":"call","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"visibility":"Public","body":"if disabled?\n  call_next(context)\nelse\n  if secure?(context)\n    add_transport_header_if_enabled(context)\n    call_next(context)\n  else\n    redirect_to_secure_version(context)\n  end\nend"},"external_var":false},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/force_ssl_handler.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/force_ssl_handler.cr#L29"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/ForceSSLHandler/HabitatSettings","path":"Lucky/ForceSSLHandler/HabitatSettings.html","kind":"class","full_name":"Lucky::ForceSSLHandler::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/force_ssl_handler.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/force_ssl_handler.cr#L29"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/ForceSSLHandler","kind":"class","full_name":"Lucky::ForceSSLHandler","name":"ForceSSLHandler"},"class_methods":[{"html_id":"enabled:Bool-class-method","name":"enabled","abstract":false,"def":{"name":"enabled","return_type":"Bool","visibility":"Public","body":"@@enabled.not_nil!"},"external_var":false},{"html_id":"enabled=(value:Bool)-class-method","name":"enabled=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../../Bool.html\">Bool</a>)","def":{"name":"enabled=","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"visibility":"Public","body":"@@enabled = value"},"external_var":false},{"html_id":"enabled?-class-method","name":"enabled?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use enabled in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use enabled in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"enabled?","visibility":"Public","body":"@@enabled"},"external_var":false},{"html_id":"redirect_status:Int32-class-method","name":"redirect_status","abstract":false,"def":{"name":"redirect_status","return_type":"Int32","visibility":"Public","body":"@@redirect_status.not_nil!"},"external_var":false},{"html_id":"redirect_status=(value:Int32)-class-method","name":"redirect_status=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : <a href=\"../../Int32.html\">Int32</a>)","def":{"name":"redirect_status=","args":[{"name":"value","external_name":"value","restriction":"Int32"}],"visibility":"Public","body":"@@redirect_status = value"},"external_var":false},{"html_id":"redirect_status?-class-method","name":"redirect_status?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use redirect_status in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use redirect_status in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"redirect_status?","visibility":"Public","body":"@@redirect_status"},"external_var":false},{"html_id":"strict_transport_security:NamedTuple(max_age:Time::Span|Time::MonthSpan,include_subdomains:Bool)|Nil-class-method","name":"strict_transport_security","abstract":false,"def":{"name":"strict_transport_security","return_type":"NamedTuple(max_age: Time::Span | Time::MonthSpan, include_subdomains: Bool) | ::Nil","visibility":"Public","body":"@@strict_transport_security"},"external_var":false},{"html_id":"strict_transport_security=(value:NamedTuple(max_age:Time::Span|Time::MonthSpan,include_subdomains:Bool)|Nil)-class-method","name":"strict_transport_security=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"NamedTuple(max_age: Time::Span | Time::MonthSpan, include_subdomains: Bool) | ::Nil"}],"args_string":"(value : NamedTuple(max_age: Time::Span | Time::MonthSpan, include_subdomains: Bool) | Nil)","args_html":"(value : NamedTuple(max_age: Time::Span | Time::MonthSpan, include_subdomains: <a href=\"../../Bool.html\">Bool</a>) | <a href=\"../../Nil.html\">Nil</a>)","def":{"name":"strict_transport_security=","args":[{"name":"value","external_name":"value","restriction":"NamedTuple(max_age: Time::Span | Time::MonthSpan, include_subdomains: Bool) | ::Nil"}],"visibility":"Public","body":"@@strict_transport_security = value"},"external_var":false},{"html_id":"strict_transport_security?-class-method","name":"strict_transport_security?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use strict_transport_security in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use strict_transport_security in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"strict_transport_security?","visibility":"Public","body":"@@strict_transport_security"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"redirect_status\" => redirect_status, \"enabled\" => enabled, \"strict_transport_security\" => strict_transport_security}"},"external_var":false}]}]},{"html_id":"lucky/Lucky/ForgeryProtectionHelpers","path":"Lucky/ForgeryProtectionHelpers.html","kind":"module","full_name":"Lucky::ForgeryProtectionHelpers","name":"ForgeryProtectionHelpers","abstract":false,"locations":[{"filename":"src/lucky/tags/forgery_protection_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/forgery_protection_helpers.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"csrf_hidden_input:Nil-instance-method","name":"csrf_hidden_input","doc":"Generate a hidden input with the request CSRF token\n\nThis input is automatically generated when using\n`Lucky::FormHelpers#form_for`. It creates a hidden input with the CSRF\ntoken. THis ensures that the form is safe. If you try to submit a form\nwithout a CSRF token it will fail with a 403 forbidden status code.","summary":"<p>Generate a hidden input with the request CSRF token</p>","abstract":false,"location":{"filename":"src/lucky/tags/forgery_protection_helpers.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/forgery_protection_helpers.cr#L8"},"def":{"name":"csrf_hidden_input","return_type":"Nil","visibility":"Public","body":"input(type: \"hidden\", name: ProtectFromForgery::PARAM_KEY, value: ProtectFromForgery.get_token(context))"},"external_var":false},{"html_id":"csrf_meta_tags:Nil-instance-method","name":"csrf_meta_tags","doc":"Meta tags used for submitting AJAX links and forms\n\nThese tags are automatically added to MainLayout when generating a new\nproject. They are used by Rails UJS to safely submit forms and non-GET AJAX\nrequests","summary":"<p>Meta tags used for submitting AJAX links and forms</p>","abstract":false,"location":{"filename":"src/lucky/tags/forgery_protection_helpers.cr","line_number":19,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/forgery_protection_helpers.cr#L19"},"def":{"name":"csrf_meta_tags","return_type":"Nil","visibility":"Public","body":"meta(name: \"csrf-param\", content: ProtectFromForgery::PARAM_KEY)\nmeta(name: \"csrf-token\", content: ProtectFromForgery.get_token(context))\n"},"external_var":false}]},{"html_id":"lucky/Lucky/Format","path":"Lucky/Format.html","kind":"enum","full_name":"Lucky::Format","name":"Format","abstract":false,"ancestors":[{"html_id":"lucky/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"lucky/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/format.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L2"}],"repository_name":"lucky","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Html","name":"Html","value":"0"},{"id":"Json","name":"Json","value":"1"},{"id":"Xml","name":"Xml","value":"2"},{"id":"Csv","name":"Csv","value":"3"},{"id":"Js","name":"Js","value":"4"},{"id":"PlainText","name":"PlainText","value":"5"},{"id":"Yaml","name":"Yaml","value":"6"},{"id":"Rss","name":"Rss","value":"7"},{"id":"Atom","name":"Atom","value":"8"},{"id":"Ics","name":"Ics","value":"9"},{"id":"Css","name":"Css","value":"10"},{"id":"Ajax","name":"Ajax","value":"11"},{"id":"MultipartForm","name":"MultipartForm","value":"12"},{"id":"UrlEncodedForm","name":"UrlEncodedForm","value":"13"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Format enum for handling different content types and file extensions","summary":"<p>Format enum for handling different content types and file extensions</p>","class_methods":[{"html_id":"from_extension(extension:String):Format|Nil-class-method","name":"from_extension","doc":"Parse format from file extension\nameba:disable Metrics/CyclomaticComplexity","summary":"<p>Parse format from file extension ameba:disable Metrics/CyclomaticComplexity</p>","abstract":false,"args":[{"name":"extension","external_name":"extension","restriction":"String"}],"args_string":"(extension : String) : Format | Nil","args_html":"(extension : <a href=\"../String.html\">String</a>) : <a href=\"../Lucky/Format.html\">Format</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/format.cr","line_number":60,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L60"},"def":{"name":"from_extension","args":[{"name":"extension","external_name":"extension","restriction":"String"}],"return_type":"Format | ::Nil","visibility":"Public","body":"case extension.downcase\nwhen \"html\", \"htm\"\n  Html\nwhen \"json\"\n  Json\nwhen \"xml\"\n  Xml\nwhen \"csv\"\n  Csv\nwhen \"js\"\n  Js\nwhen \"txt\"\n  PlainText\nwhen \"yaml\", \"yml\"\n  Yaml\nwhen \"rss\"\n  Rss\nwhen \"atom\"\n  Atom\nwhen \"ics\", \"ical\"\n  Ics\nwhen \"css\"\n  Css\nelse\n  nil\nend"},"external_var":false},{"html_id":"from_mime_type(mime_type:String):Format|Nil-class-method","name":"from_mime_type","doc":"Parse format from MIME type\nameba:disable Metrics/CyclomaticComplexity","summary":"<p>Parse format from MIME type ameba:disable Metrics/CyclomaticComplexity</p>","abstract":false,"args":[{"name":"mime_type","external_name":"mime_type","restriction":"String"}],"args_string":"(mime_type : String) : Format | Nil","args_html":"(mime_type : <a href=\"../String.html\">String</a>) : <a href=\"../Lucky/Format.html\">Format</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/format.cr","line_number":79,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L79"},"def":{"name":"from_mime_type","args":[{"name":"mime_type","external_name":"mime_type","restriction":"String"}],"return_type":"Format | ::Nil","visibility":"Public","body":"case mime_type.downcase\nwhen \"text/html\"\n  Html\nwhen \"application/json\", \"text/json\"\n  Json\nwhen \"application/xml\"\n  Xml\nwhen \"text/csv\"\n  Csv\nwhen \"text/javascript\"\n  Js\nwhen \"text/plain\"\n  PlainText\nwhen \"application/x-yaml\", \"text/yaml\"\n  Yaml\nwhen \"application/rss+xml\"\n  Rss\nwhen \"application/atom+xml\"\n  Atom\nwhen \"text/calendar\"\n  Ics\nwhen \"text/css\"\n  Css\nwhen \"multipart/form-data\"\n  MultipartForm\nwhen \"application/x-www-form-urlencoded\"\n  UrlEncodedForm\nelse\n  nil\nend"},"external_var":false}],"instance_methods":[{"html_id":"ajax?-instance-method","name":"ajax?","doc":"Returns `true` if this enum value equals `Ajax`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#Ajax\">Ajax</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":14,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L14"},"def":{"name":"ajax?","visibility":"Public","body":"self == Ajax"},"external_var":false},{"html_id":"atom?-instance-method","name":"atom?","doc":"Returns `true` if this enum value equals `Atom`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#Atom\">Atom</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":11,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L11"},"def":{"name":"atom?","visibility":"Public","body":"self == Atom"},"external_var":false},{"html_id":"css?-instance-method","name":"css?","doc":"Returns `true` if this enum value equals `Css`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#Css\">Css</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L13"},"def":{"name":"css?","visibility":"Public","body":"self == Css"},"external_var":false},{"html_id":"csv?-instance-method","name":"csv?","doc":"Returns `true` if this enum value equals `Csv`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#Csv\">Csv</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L6"},"def":{"name":"csv?","visibility":"Public","body":"self == Csv"},"external_var":false},{"html_id":"html?-instance-method","name":"html?","doc":"Returns `true` if this enum value equals `Html`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#Html\">Html</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L3"},"def":{"name":"html?","visibility":"Public","body":"self == Html"},"external_var":false},{"html_id":"ics?-instance-method","name":"ics?","doc":"Returns `true` if this enum value equals `Ics`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#Ics\">Ics</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":12,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L12"},"def":{"name":"ics?","visibility":"Public","body":"self == Ics"},"external_var":false},{"html_id":"js?-instance-method","name":"js?","doc":"Returns `true` if this enum value equals `Js`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#Js\">Js</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L7"},"def":{"name":"js?","visibility":"Public","body":"self == Js"},"external_var":false},{"html_id":"json?-instance-method","name":"json?","doc":"Returns `true` if this enum value equals `Json`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#Json\">Json</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L4"},"def":{"name":"json?","visibility":"Public","body":"self == Json"},"external_var":false},{"html_id":"multipart_form?-instance-method","name":"multipart_form?","doc":"Returns `true` if this enum value equals `MultipartForm`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#MultipartForm\">MultipartForm</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":15,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L15"},"def":{"name":"multipart_form?","visibility":"Public","body":"self == MultipartForm"},"external_var":false},{"html_id":"plain_text?-instance-method","name":"plain_text?","doc":"Returns `true` if this enum value equals `PlainText`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#PlainText\">PlainText</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L8"},"def":{"name":"plain_text?","visibility":"Public","body":"self == PlainText"},"external_var":false},{"html_id":"rss?-instance-method","name":"rss?","doc":"Returns `true` if this enum value equals `Rss`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#Rss\">Rss</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":10,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L10"},"def":{"name":"rss?","visibility":"Public","body":"self == Rss"},"external_var":false},{"html_id":"to_extension:String-instance-method","name":"to_extension","doc":"Convert format to file extension","summary":"<p>Convert format to file extension</p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":19,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L19"},"def":{"name":"to_extension","return_type":"String","visibility":"Public","body":"case self\nin .html?\n  \"html\"\nin .json?\n  \"json\"\nin .xml?\n  \"xml\"\nin .csv?\n  \"csv\"\nin .js?\n  \"js\"\nin .plain_text?\n  \"txt\"\nin .yaml?\n  \"yaml\"\nin .rss?\n  \"rss\"\nin .atom?\n  \"atom\"\nin .ics?\n  \"ics\"\nin .css?\n  \"css\"\nin .ajax?\n  \"\"\nin .multipart_form?\n  \"\"\nin .url_encoded_form?\n  \"\"\nend"},"external_var":false},{"html_id":"to_mime_type:String-instance-method","name":"to_mime_type","doc":"Convert format to MIME type","summary":"<p>Convert format to MIME type</p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":39,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L39"},"def":{"name":"to_mime_type","return_type":"String","visibility":"Public","body":"case self\nin .html?\n  \"text/html\"\nin .json?\n  \"application/json\"\nin .xml?\n  \"application/xml\"\nin .csv?\n  \"text/csv\"\nin .js?\n  \"text/javascript\"\nin .plain_text?\n  \"text/plain\"\nin .yaml?\n  \"application/x-yaml\"\nin .rss?\n  \"application/rss+xml\"\nin .atom?\n  \"application/atom+xml\"\nin .ics?\n  \"text/calendar\"\nin .css?\n  \"text/css\"\nin .ajax?\n  \"text/plain\"\nin .multipart_form?\n  \"multipart/form-data\"\nin .url_encoded_form?\n  \"application/x-www-form-urlencoded\"\nend"},"external_var":false},{"html_id":"url_encoded_form?-instance-method","name":"url_encoded_form?","doc":"Returns `true` if this enum value equals `UrlEncodedForm`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#UrlEncodedForm\">UrlEncodedForm</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":16,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L16"},"def":{"name":"url_encoded_form?","visibility":"Public","body":"self == UrlEncodedForm"},"external_var":false},{"html_id":"xml?-instance-method","name":"xml?","doc":"Returns `true` if this enum value equals `Xml`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#Xml\">Xml</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L5"},"def":{"name":"xml?","visibility":"Public","body":"self == Xml"},"external_var":false},{"html_id":"yaml?-instance-method","name":"yaml?","doc":"Returns `true` if this enum value equals `Yaml`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Lucky/Format.html#Yaml\">Yaml</a></code></p>","abstract":false,"location":{"filename":"src/lucky/format.cr","line_number":9,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format.cr#L9"},"def":{"name":"yaml?","visibility":"Public","body":"self == Yaml"},"external_var":false}]},{"html_id":"lucky/Lucky/FormatRegistry","path":"Lucky/FormatRegistry.html","kind":"module","full_name":"Lucky::FormatRegistry","name":"FormatRegistry","abstract":false,"locations":[{"filename":"src/lucky/format_registry.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format_registry.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Registry for custom formats that extends the built-in Format enum","summary":"<p>Registry for custom formats that extends the built-in Format enum</p>","class_methods":[{"html_id":"custom_formats-class-method","name":"custom_formats","doc":"Storage for custom format mappings","summary":"<p>Storage for custom format mappings</p>","abstract":false,"location":{"filename":"src/lucky/format_registry.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format_registry.cr#L4"},"def":{"name":"custom_formats","visibility":"Public","body":"@@custom_formats"},"external_var":false},{"html_id":"from_extension(extension:String):Lucky::Format|CustomFormat|Nil-class-method","name":"from_extension","doc":"Find format by extension (checks both built-in and custom formats)","summary":"<p>Find format by extension (checks both built-in and custom formats)</p>","abstract":false,"args":[{"name":"extension","external_name":"extension","restriction":"String"}],"args_string":"(extension : String) : Lucky::Format | CustomFormat | Nil","args_html":"(extension : <a href=\"../String.html\">String</a>) : <a href=\"../Lucky/Format.html\">Lucky::Format</a> | <a href=\"../Lucky/FormatRegistry/CustomFormat.html\">CustomFormat</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/format_registry.cr","line_number":26,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format_registry.cr#L26"},"def":{"name":"from_extension","args":[{"name":"extension","external_name":"extension","restriction":"String"}],"return_type":"Lucky::Format | CustomFormat | Nil","visibility":"Public","body":"if format = Lucky::Format.from_extension(extension)\n  return format\nend\n\n\ncustom_formats.each_value do |custom_format|\n  if custom_format.extension.downcase == extension.downcase\n    return custom_format\n  end\nend\n\nnil\n"},"external_var":false},{"html_id":"from_mime_type(mime_type:String):Lucky::Format|CustomFormat|Nil-class-method","name":"from_mime_type","doc":"Find format by MIME type (checks both built-in and custom formats)","summary":"<p>Find format by MIME type (checks both built-in and custom formats)</p>","abstract":false,"args":[{"name":"mime_type","external_name":"mime_type","restriction":"String"}],"args_string":"(mime_type : String) : Lucky::Format | CustomFormat | Nil","args_html":"(mime_type : <a href=\"../String.html\">String</a>) : <a href=\"../Lucky/Format.html\">Lucky::Format</a> | <a href=\"../Lucky/FormatRegistry/CustomFormat.html\">CustomFormat</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/format_registry.cr","line_number":41,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format_registry.cr#L41"},"def":{"name":"from_mime_type","args":[{"name":"mime_type","external_name":"mime_type","restriction":"String"}],"return_type":"Lucky::Format | CustomFormat | Nil","visibility":"Public","body":"if format = Lucky::Format.from_mime_type(mime_type)\n  return format\nend\n\n\ncustom_formats.each_value do |custom_format|\n  if custom_format.mime_type.downcase == mime_type.downcase\n    return custom_format\n  end\nend\n\nnil\n"},"external_var":false},{"html_id":"known_extensions:Array(String)-class-method","name":"known_extensions","doc":"Get all known extensions (built-in + custom)","summary":"<p>Get all known extensions (built-in + custom)</p>","abstract":false,"location":{"filename":"src/lucky/format_registry.cr","line_number":56,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format_registry.cr#L56"},"def":{"name":"known_extensions","return_type":"Array(String)","visibility":"Public","body":"built_in = Lucky::Format.values.map(&.to_extension).reject(&.empty?)\ncustom = custom_formats.values.map(&.extension)\n(built_in + custom).uniq\n"},"external_var":false},{"html_id":"known_mime_types:Array(String)-class-method","name":"known_mime_types","doc":"Get all known MIME types (built-in + custom)","summary":"<p>Get all known MIME types (built-in + custom)</p>","abstract":false,"location":{"filename":"src/lucky/format_registry.cr","line_number":63,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format_registry.cr#L63"},"def":{"name":"known_mime_types","return_type":"Array(String)","visibility":"Public","body":"built_in = Lucky::Format.values.map(&.to_mime_type)\ncustom = custom_formats.values.map(&.mime_type)\n(built_in + custom).uniq\n"},"external_var":false},{"html_id":"register(name:String,extension:String,mime_type:String):Nil-class-method","name":"register","doc":"Register a custom format","summary":"<p>Register a custom format</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"extension","external_name":"extension","restriction":"String"},{"name":"mime_type","external_name":"mime_type","restriction":"String"}],"args_string":"(name : String, extension : String, mime_type : String) : Nil","args_html":"(name : <a href=\"../String.html\">String</a>, extension : <a href=\"../String.html\">String</a>, mime_type : <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/format_registry.cr","line_number":21,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format_registry.cr#L21"},"def":{"name":"register","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"extension","external_name":"extension","restriction":"String"},{"name":"mime_type","external_name":"mime_type","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"custom_formats[name] = CustomFormat.new(name, extension, mime_type)"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/FormatRegistry/CustomFormat","path":"Lucky/FormatRegistry/CustomFormat.html","kind":"struct","full_name":"Lucky::FormatRegistry::CustomFormat","name":"CustomFormat","abstract":false,"superclass":{"html_id":"lucky/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"lucky/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/format_registry.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format_registry.cr#L7"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/FormatRegistry","kind":"module","full_name":"Lucky::FormatRegistry","name":"FormatRegistry"},"doc":"Represents a custom format that users can register","summary":"<p>Represents a custom format that users can register</p>","constructors":[{"html_id":"new(name:String,extension:String,mime_type:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"extension","external_name":"extension","restriction":"String"},{"name":"mime_type","external_name":"mime_type","restriction":"String"}],"args_string":"(name : String, extension : String, mime_type : String)","args_html":"(name : <a href=\"../../String.html\">String</a>, extension : <a href=\"../../String.html\">String</a>, mime_type : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/lucky/format_registry.cr","line_number":12,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format_registry.cr#L12"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"extension","external_name":"extension","restriction":"String"},{"name":"mime_type","external_name":"mime_type","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, extension, mime_type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"extension:String-instance-method","name":"extension","abstract":false,"location":{"filename":"src/lucky/format_registry.cr","line_number":9,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format_registry.cr#L9"},"def":{"name":"extension","return_type":"String","visibility":"Public","body":"@extension"},"external_var":false},{"html_id":"mime_type:String-instance-method","name":"mime_type","abstract":false,"location":{"filename":"src/lucky/format_registry.cr","line_number":10,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format_registry.cr#L10"},"def":{"name":"mime_type","return_type":"String","visibility":"Public","body":"@mime_type"},"external_var":false},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/lucky/format_registry.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format_registry.cr#L8"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"},"external_var":false},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : <a href=\"../../Nil.html\">Nil</a>","location":{"filename":"src/lucky/format_registry.cr","line_number":15,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/format_registry.cr#L15"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << name"},"external_var":false}]}]},{"html_id":"lucky/Lucky/FormData","path":"Lucky/FormData.html","kind":"class","full_name":"Lucky::FormData","name":"FormData","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/form_data.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/form_data.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"add(part:HTTP::FormData::Part)-instance-method","name":"add","abstract":false,"args":[{"name":"part","external_name":"part","restriction":"HTTP::FormData::Part"}],"args_string":"(part : HTTP::FormData::Part)","args_html":"(part : HTTP::FormData::Part)","location":{"filename":"src/lucky/form_data.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/form_data.cr#L5"},"def":{"name":"add","args":[{"name":"part","external_name":"part","restriction":"HTTP::FormData::Part"}],"visibility":"Public","body":"case part.headers\nwhen .includes_word?(\"Content-Disposition\", \"filename\")\n  files.add(part.name, Lucky::UploadedFile.new(part))\nelse\n  params.add(part.name, part.body.gets_to_end)\nend"},"external_var":false},{"html_id":"files:Lucky::FormData::MultiValueStorage(Lucky::UploadedFile)-instance-method","name":"files","abstract":false,"location":{"filename":"src/lucky/form_data.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/form_data.cr#L3"},"def":{"name":"files","visibility":"Public","body":"@files"},"external_var":false},{"html_id":"params:Lucky::FormData::MultiValueStorage(String)-instance-method","name":"params","abstract":false,"location":{"filename":"src/lucky/form_data.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/form_data.cr#L2"},"def":{"name":"params","visibility":"Public","body":"@params"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/FormData/MultiValueStorage","path":"Lucky/FormData/MultiValueStorage.html","kind":"class","full_name":"Lucky::FormData::MultiValueStorage(T)","name":"MultiValueStorage","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/form_data.cr","line_number":15,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/form_data.cr#L15"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"lucky/Lucky/FormData","kind":"class","full_name":"Lucky::FormData","name":"FormData"},"doc":"Simpler, generic implementation of HTTP::Params","summary":"<p>Simpler, generic implementation of HTTP::Params</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/lucky/form_data.cr","line_number":20,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/form_data.cr#L20"},"def":{"name":"new","visibility":"Public","body":"_ = MultiValueStorage(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"[]?(key:String):T|Nil-instance-method","name":"[]?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : T | Nil","args_html":"(key : <a href=\"../../String.html\">String</a>) : T | <a href=\"../../Nil.html\">Nil</a>","location":{"filename":"src/lucky/form_data.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/form_data.cr#L24"},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"T | ::Nil","visibility":"Public","body":"storage[key]?.try(&.first?)"},"external_var":false},{"html_id":"add(key:String,value:T)-instance-method","name":"add","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(key : String, value : T)","args_html":"(key : <a href=\"../../String.html\">String</a>, value : T)","location":{"filename":"src/lucky/form_data.cr","line_number":32,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/form_data.cr#L32"},"def":{"name":"add","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"__temp_189 = key\n__temp_190 = storage\n__temp_190[__temp_189]? || (__temp_190[__temp_189] = [] of T)\nstorage[key] << value\n"},"external_var":false},{"html_id":"each(&)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"location":{"filename":"src/lucky/form_data.cr","line_number":37,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/form_data.cr#L37"},"def":{"name":"each","yields":1,"block_arity":1,"visibility":"Public","body":"storage.each do |name, values|\n  values.each do |value|\n    yield({name, value})\n  end\nend"},"external_var":false},{"html_id":"fetch_all(key:String):Array(T)-instance-method","name":"fetch_all","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Array(T)","args_html":"(key : <a href=\"../../String.html\">String</a>) : Array(T)","location":{"filename":"src/lucky/form_data.cr","line_number":28,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/form_data.cr#L28"},"def":{"name":"fetch_all","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Array(T)","visibility":"Public","body":"storage.fetch(key) do\n  [] of T\nend"},"external_var":false}]}]},{"html_id":"lucky/Lucky/FormHelpers","path":"Lucky/FormHelpers.html","kind":"module","full_name":"Lucky::FormHelpers","name":"FormHelpers","abstract":false,"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"locations":[{"filename":"src/lucky/tags/form_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/form_helpers.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: include_csrf_tag : Bool = true, example: nil, validation: nil}] of Nil"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/tags/form_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/form_helpers.cr#L2"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/tags/form_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/form_helpers.cr#L2"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"instance_methods":[{"html_id":"form_for(route:Lucky::RouteHelper,attrs:Array(Symbol)=[]ofSymbol,**html_options,&):Nil-instance-method","name":"form_for","abstract":false,"args":[{"name":"route","external_name":"route","restriction":"Lucky::RouteHelper"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(route : Lucky::RouteHelper, attrs : Array(Symbol) = [] of Symbol, **html_options, &) : Nil","args_html":"(route : <a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **html_options, &) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/form_helpers.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/form_helpers.cr#L6"},"def":{"name":"form_for","args":[{"name":"route","external_name":"route","restriction":"Lucky::RouteHelper"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","external_name":"html_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"form(attrs, build_form_options(route, html_options)) do\n  if Lucky::FormHelpers.settings.include_csrf_tag\n    csrf_hidden_input\n  end\n  method_override_input(route)\n  yield\nend"},"external_var":false},{"html_id":"form_for(routeaction:Lucky::Action.class,attrs:Array(Symbol)=[]ofSymbol,**html_options,&):Nil-instance-method","name":"form_for","abstract":false,"args":[{"name":"action","external_name":"route","restriction":"Lucky::Action.class"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(route action : Lucky::Action.class, attrs : Array(Symbol) = [] of Symbol, **html_options, &) : Nil","args_html":"(route action : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Action</span>.<span class=\"k\">class</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **html_options, &) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/form_helpers.cr","line_number":14,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/form_helpers.cr#L14"},"def":{"name":"form_for","args":[{"name":"action","external_name":"route","restriction":"Lucky::Action.class"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","external_name":"html_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"form_for(action.route, attrs, **html_options) do\n  yield\nend"},"external_var":false},{"html_id":"form_method(route):String-instance-method","name":"form_method","abstract":false,"args":[{"name":"route","external_name":"route","restriction":""}],"args_string":"(route) : String","args_html":"(route) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/tags/form_helpers.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/form_helpers.cr#L24"},"def":{"name":"form_method","args":[{"name":"route","external_name":"route","restriction":""}],"return_type":"String","visibility":"Public","body":"if route.method == (:get)\n  \"get\"\nelse\n  \"post\"\nend"},"external_var":false},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/tags/form_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/form_helpers.cr#L2"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false},{"html_id":"submit(text:String,attrs:Array(Symbol)=[]ofSymbol,**html_options):Nil-instance-method","name":"submit","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(text : String, attrs : Array(Symbol) = [] of Symbol, **html_options) : Nil","args_html":"(text : <a href=\"../String.html\">String</a>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **html_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/form_helpers.cr","line_number":20,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/form_helpers.cr#L20"},"def":{"name":"submit","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","external_name":"html_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"input(attrs, merge_options(html_options, {\"type\" => \"submit\", \"value\" => text}))"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/FormHelpers/HabitatSettings","path":"Lucky/FormHelpers/HabitatSettings.html","kind":"class","full_name":"Lucky::FormHelpers::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/tags/form_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/form_helpers.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/FormHelpers","kind":"module","full_name":"Lucky::FormHelpers","name":"FormHelpers"},"class_methods":[{"html_id":"include_csrf_tag:Bool-class-method","name":"include_csrf_tag","abstract":false,"def":{"name":"include_csrf_tag","return_type":"Bool","visibility":"Public","body":"@@include_csrf_tag.not_nil!"},"external_var":false},{"html_id":"include_csrf_tag=(value:Bool)-class-method","name":"include_csrf_tag=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../../Bool.html\">Bool</a>)","def":{"name":"include_csrf_tag=","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"visibility":"Public","body":"@@include_csrf_tag = value"},"external_var":false},{"html_id":"include_csrf_tag?-class-method","name":"include_csrf_tag?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use include_csrf_tag in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use include_csrf_tag in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"include_csrf_tag?","visibility":"Public","body":"@@include_csrf_tag"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"include_csrf_tag\" => include_csrf_tag}"},"external_var":false}]}]},{"html_id":"lucky/Lucky/HTMLBuilder","path":"Lucky/HTMLBuilder.html","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder","abstract":false,"ancestors":[{"html_id":"lucky/Lucky/SvgInliner","kind":"module","full_name":"Lucky::SvgInliner","name":"SvgInliner"},{"html_id":"lucky/Lucky/LiveReloadTag","kind":"module","full_name":"Lucky::LiveReloadTag","name":"LiveReloadTag"},{"html_id":"lucky/Lucky/TagDefaults","kind":"module","full_name":"Lucky::TagDefaults","name":"TagDefaults"},{"html_id":"lucky/Lucky/RenderIfDefined","kind":"module","full_name":"Lucky::RenderIfDefined","name":"RenderIfDefined"},{"html_id":"lucky/Lucky/HelpfulParagraphError","kind":"module","full_name":"Lucky::HelpfulParagraphError","name":"HelpfulParagraphError"},{"html_id":"lucky/Lucky/MountComponent","kind":"module","full_name":"Lucky::MountComponent","name":"MountComponent"},{"html_id":"lucky/Lucky/ForgeryProtectionHelpers","kind":"module","full_name":"Lucky::ForgeryProtectionHelpers","name":"ForgeryProtectionHelpers"},{"html_id":"lucky/Lucky/TimeHelpers","kind":"module","full_name":"Lucky::TimeHelpers","name":"TimeHelpers"},{"html_id":"lucky/Lucky/UrlHelpers","kind":"module","full_name":"Lucky::UrlHelpers","name":"UrlHelpers"},{"html_id":"lucky/Lucky/HTMLTextHelpers","kind":"module","full_name":"Lucky::HTMLTextHelpers","name":"HTMLTextHelpers"},{"html_id":"lucky/Lucky/TextHelpers","kind":"module","full_name":"Lucky::TextHelpers","name":"TextHelpers"},{"html_id":"lucky/Lucky/NumberToCurrency","kind":"module","full_name":"Lucky::NumberToCurrency","name":"NumberToCurrency"},{"html_id":"lucky/Lucky/AssetHelpers","kind":"module","full_name":"Lucky::AssetHelpers","name":"AssetHelpers"},{"html_id":"lucky/Lucky/Assignable","kind":"module","full_name":"Lucky::Assignable","name":"Assignable"},{"html_id":"lucky/Lucky/SpecialtyTags","kind":"module","full_name":"Lucky::SpecialtyTags","name":"SpecialtyTags"},{"html_id":"lucky/Lucky/FormHelpers","kind":"module","full_name":"Lucky::FormHelpers","name":"FormHelpers"},{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Lucky/LinkHelpers","kind":"module","full_name":"Lucky::LinkHelpers","name":"LinkHelpers"},{"html_id":"lucky/Lucky/CustomTags","kind":"module","full_name":"Lucky::CustomTags","name":"CustomTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"},{"html_id":"lucky/Lucky/BaseTags","kind":"module","full_name":"Lucky::BaseTags","name":"BaseTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"}],"locations":[{"filename":"src/lucky/html_builder.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/html_builder.cr#L5"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ASSIGNS","name":"ASSIGNS","value":"[] of Nil"}],"included_modules":[{"html_id":"lucky/Lucky/AssetHelpers","kind":"module","full_name":"Lucky::AssetHelpers","name":"AssetHelpers"},{"html_id":"lucky/Lucky/Assignable","kind":"module","full_name":"Lucky::Assignable","name":"Assignable"},{"html_id":"lucky/Lucky/BaseTags","kind":"module","full_name":"Lucky::BaseTags","name":"BaseTags"},{"html_id":"lucky/Lucky/CustomTags","kind":"module","full_name":"Lucky::CustomTags","name":"CustomTags"},{"html_id":"lucky/Lucky/ForgeryProtectionHelpers","kind":"module","full_name":"Lucky::ForgeryProtectionHelpers","name":"ForgeryProtectionHelpers"},{"html_id":"lucky/Lucky/FormHelpers","kind":"module","full_name":"Lucky::FormHelpers","name":"FormHelpers"},{"html_id":"lucky/Lucky/HelpfulParagraphError","kind":"module","full_name":"Lucky::HelpfulParagraphError","name":"HelpfulParagraphError"},{"html_id":"lucky/Lucky/HTMLTextHelpers","kind":"module","full_name":"Lucky::HTMLTextHelpers","name":"HTMLTextHelpers"},{"html_id":"lucky/Lucky/LinkHelpers","kind":"module","full_name":"Lucky::LinkHelpers","name":"LinkHelpers"},{"html_id":"lucky/Lucky/LiveReloadTag","kind":"module","full_name":"Lucky::LiveReloadTag","name":"LiveReloadTag"},{"html_id":"lucky/Lucky/MountComponent","kind":"module","full_name":"Lucky::MountComponent","name":"MountComponent"},{"html_id":"lucky/Lucky/NumberToCurrency","kind":"module","full_name":"Lucky::NumberToCurrency","name":"NumberToCurrency"},{"html_id":"lucky/Lucky/RenderIfDefined","kind":"module","full_name":"Lucky::RenderIfDefined","name":"RenderIfDefined"},{"html_id":"lucky/Lucky/SpecialtyTags","kind":"module","full_name":"Lucky::SpecialtyTags","name":"SpecialtyTags"},{"html_id":"lucky/Lucky/SvgInliner","kind":"module","full_name":"Lucky::SvgInliner","name":"SvgInliner"},{"html_id":"lucky/Lucky/TagDefaults","kind":"module","full_name":"Lucky::TagDefaults","name":"TagDefaults"},{"html_id":"lucky/Lucky/TextHelpers","kind":"module","full_name":"Lucky::TextHelpers","name":"TextHelpers"},{"html_id":"lucky/Lucky/TimeHelpers","kind":"module","full_name":"Lucky::TimeHelpers","name":"TimeHelpers"},{"html_id":"lucky/Lucky/UrlHelpers","kind":"module","full_name":"Lucky::UrlHelpers","name":"UrlHelpers"}],"including_types":[{"html_id":"lucky/Lucky/BaseComponent","kind":"class","full_name":"Lucky::BaseComponent","name":"BaseComponent"},{"html_id":"lucky/Lucky/HTMLPage","kind":"module","full_name":"Lucky::HTMLPage","name":"HTMLPage"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(**unused_exposures)-class-method","name":"new","abstract":false,"def":{"name":"new","double_splat":{"name":"unused_exposures","external_name":"unused_exposures","restriction":""},"visibility":"Public","body":"_ = allocate\n_.initialize(**unused_exposures)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"perform_render:IO-instance-method","name":"perform_render","abstract":false,"location":{"filename":"src/lucky/html_builder.cr","line_number":28,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/html_builder.cr#L28"},"def":{"name":"perform_render","return_type":"IO","visibility":"Public","body":"render\nview\n"},"external_var":false},{"html_id":"view:IO-instance-method","name":"view","abstract":true,"location":{"filename":"src/lucky/html_builder.cr","line_number":26,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/html_builder.cr#L26"},"def":{"name":"view","return_type":"IO","visibility":"Public","body":""},"external_var":false}]},{"html_id":"lucky/Lucky/HTMLPage","path":"Lucky/HTMLPage.html","kind":"module","full_name":"Lucky::HTMLPage","name":"HTMLPage","abstract":false,"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"},{"html_id":"lucky/Lucky/SvgInliner","kind":"module","full_name":"Lucky::SvgInliner","name":"SvgInliner"},{"html_id":"lucky/Lucky/LiveReloadTag","kind":"module","full_name":"Lucky::LiveReloadTag","name":"LiveReloadTag"},{"html_id":"lucky/Lucky/TagDefaults","kind":"module","full_name":"Lucky::TagDefaults","name":"TagDefaults"},{"html_id":"lucky/Lucky/RenderIfDefined","kind":"module","full_name":"Lucky::RenderIfDefined","name":"RenderIfDefined"},{"html_id":"lucky/Lucky/HelpfulParagraphError","kind":"module","full_name":"Lucky::HelpfulParagraphError","name":"HelpfulParagraphError"},{"html_id":"lucky/Lucky/MountComponent","kind":"module","full_name":"Lucky::MountComponent","name":"MountComponent"},{"html_id":"lucky/Lucky/ForgeryProtectionHelpers","kind":"module","full_name":"Lucky::ForgeryProtectionHelpers","name":"ForgeryProtectionHelpers"},{"html_id":"lucky/Lucky/TimeHelpers","kind":"module","full_name":"Lucky::TimeHelpers","name":"TimeHelpers"},{"html_id":"lucky/Lucky/UrlHelpers","kind":"module","full_name":"Lucky::UrlHelpers","name":"UrlHelpers"},{"html_id":"lucky/Lucky/HTMLTextHelpers","kind":"module","full_name":"Lucky::HTMLTextHelpers","name":"HTMLTextHelpers"},{"html_id":"lucky/Lucky/TextHelpers","kind":"module","full_name":"Lucky::TextHelpers","name":"TextHelpers"},{"html_id":"lucky/Lucky/NumberToCurrency","kind":"module","full_name":"Lucky::NumberToCurrency","name":"NumberToCurrency"},{"html_id":"lucky/Lucky/AssetHelpers","kind":"module","full_name":"Lucky::AssetHelpers","name":"AssetHelpers"},{"html_id":"lucky/Lucky/Assignable","kind":"module","full_name":"Lucky::Assignable","name":"Assignable"},{"html_id":"lucky/Lucky/SpecialtyTags","kind":"module","full_name":"Lucky::SpecialtyTags","name":"SpecialtyTags"},{"html_id":"lucky/Lucky/FormHelpers","kind":"module","full_name":"Lucky::FormHelpers","name":"FormHelpers"},{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Lucky/LinkHelpers","kind":"module","full_name":"Lucky::LinkHelpers","name":"LinkHelpers"},{"html_id":"lucky/Lucky/CustomTags","kind":"module","full_name":"Lucky::CustomTags","name":"CustomTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"},{"html_id":"lucky/Lucky/BaseTags","kind":"module","full_name":"Lucky::BaseTags","name":"BaseTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"}],"locations":[{"filename":"src/lucky/html_page.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/html_page.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ASSIGNS","name":"ASSIGNS","value":"[context : HTTP::Server::Context] of Nil"},{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: render_component_comments : Bool = false, example: nil, validation: nil}] of Nil"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"including_types":[{"html_id":"lucky/Lucky/WelcomePage","kind":"class","full_name":"Lucky::WelcomePage","name":"WelcomePage"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/html_page.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/html_page.cr#L6"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/html_page.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/html_page.cr#L6"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"constructors":[{"html_id":"new(context:HTTP::Server::Context,**unused_exposures)-class-method","name":"new","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context, **unused_exposures)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>, **unused_exposures)","def":{"name":"new","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"double_splat":{"name":"unused_exposures","external_name":"unused_exposures","restriction":""},"visibility":"Public","body":"_ = allocate\n_.initialize(context, **unused_exposures)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"context-instance-method","name":"context","abstract":false,"def":{"name":"context","visibility":"Public","body":"@context"},"external_var":false},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/html_page.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/html_page.cr#L6"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false},{"html_id":"to_s(io)-instance-method","name":"to_s","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/lucky/html_page.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/html_page.cr#L13"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"io << view"},"external_var":false},{"html_id":"view:IO-instance-method","name":"view","abstract":false,"location":{"filename":"src/lucky/html_page.cr","line_number":10,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/html_page.cr#L10"},"def":{"name":"view","return_type":"IO","visibility":"Public","body":"@view"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/HTMLPage/HabitatSettings","path":"Lucky/HTMLPage/HabitatSettings.html","kind":"class","full_name":"Lucky::HTMLPage::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/html_page.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/html_page.cr#L6"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/HTMLPage","kind":"module","full_name":"Lucky::HTMLPage","name":"HTMLPage"},"class_methods":[{"html_id":"render_component_comments:Bool-class-method","name":"render_component_comments","abstract":false,"def":{"name":"render_component_comments","return_type":"Bool","visibility":"Public","body":"@@render_component_comments.not_nil!"},"external_var":false},{"html_id":"render_component_comments=(value:Bool)-class-method","name":"render_component_comments=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../../Bool.html\">Bool</a>)","def":{"name":"render_component_comments=","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"visibility":"Public","body":"@@render_component_comments = value"},"external_var":false},{"html_id":"render_component_comments?-class-method","name":"render_component_comments?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use render_component_comments in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use render_component_comments in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"render_component_comments?","visibility":"Public","body":"@@render_component_comments"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"render_component_comments\" => render_component_comments}"},"external_var":false}]}]},{"html_id":"lucky/Lucky/HTMLTextHelpers","path":"Lucky/HTMLTextHelpers.html","kind":"module","full_name":"Lucky::HTMLTextHelpers","name":"HTMLTextHelpers","abstract":false,"locations":[{"filename":"src/lucky/page_helpers/html_text_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/html_text_helpers.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"These helper methods will write directly to the view.","summary":"<p>These helper methods will write directly to the view.</p>","instance_methods":[{"html_id":"highlight(text:String,phrases:Array(String|Regex),highlighter:Proc|String=\"<mark>\\\\1</mark>\",escape:Bool=true):Nil-instance-method","name":"highlight","doc":"Wrap phrases to make them stand out\n\nThis will wrap all the phrases inside a piece of `text` specified by the\n`phrases` array. The default is to wrap each with the `<mark>` element.\nThis can be customized with the `highlighter` argument.\n\n**Note: This method writes HTML directly to the page. It does not return a\nString**\n\n```\nhighlight(\"Crystal is type-safe and compiled.\", phrases: [\"type-safe\", \"compiled\"])\n```\noutputs:\n```html\nCrystal is <mark>type-safe</mark> and <mark>compiled</mark>.\n```\n\n**With a custom highlighter**\n\n```\nhighlight(\n  \"You're such a nice and attractive person.\",\n  phrases: [\"nice\", \"attractive\"],\n  highlighter: \"<strong>\\\\1</strong>\"\n)\n```\noutputs:\n```html\nYou're such a <strong>nice</strong> and <strong>attractive</strong> person.\n```","summary":"<p>Wrap phrases to make them stand out</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"phrases","external_name":"phrases","restriction":"Array(String | Regex)"},{"name":"highlighter","default_value":"\"<mark>\\\\1</mark>\"","external_name":"highlighter","restriction":"Proc | String"},{"name":"escape","default_value":"true","external_name":"escape","restriction":"Bool"}],"args_string":"(text : String, phrases : Array(String | Regex), highlighter : Proc | String = \"<mark>\\\\1</mark>\", escape : Bool = true) : Nil","args_html":"(text : <a href=\"../String.html\">String</a>, phrases : Array(<a href=\"../String.html\">String</a> | Regex), highlighter : Proc | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&lt;mark&gt;\\\\1&lt;/mark&gt;&quot;</span>, escape : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">true</span>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/page_helpers/html_text_helpers.cr","line_number":73,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/html_text_helpers.cr#L73"},"def":{"name":"highlight","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"phrases","external_name":"phrases","restriction":"Array(String | Regex)"},{"name":"highlighter","default_value":"\"<mark>\\\\1</mark>\"","external_name":"highlighter","restriction":"Proc | String"},{"name":"escape","default_value":"true","external_name":"escape","restriction":"Bool"}],"return_type":"Nil","visibility":"Public","body":"text = escape ? HTML.escape(text) : text\n\nif text.blank? || phrases.all?() do |__arg0|\n  __arg0.to_s.blank?\nend\n  raw(text || \"\")\nelse\n  match = phrases.map do |p|\n    p.is_a?(Regex) ? p.to_s : Regex.escape(p.to_s)\n  end.join(\"|\")\n\n  if highlighter.is_a?(Proc)\n    raw(text.gsub(/(#{match})(?![^<]*?>)/i, &highlighter))\n  else\n    raw(text.gsub(/(#{match})(?![^<]*?>)/i, highlighter))\n  end\nend\n"},"external_var":false},{"html_id":"highlight(text:String,phrases:Array(String|Regex),escape:Bool=false,&block:String->_):Nil-instance-method","name":"highlight","doc":"Highlight a single phrase\n\nExactly the same as the `highlight` that takes multiple phrases, but with a\nsingular `phrase` argument for readability.\n```","summary":"<p>Highlight a single phrase</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"phrases","external_name":"phrases","restriction":"Array(String | Regex)"},{"name":"escape","default_value":"false","external_name":"escape","restriction":"Bool"}],"args_string":"(text : String, phrases : Array(String | Regex), escape : Bool = false, &block : String -> _) : Nil","args_html":"(text : <a href=\"../String.html\">String</a>, phrases : Array(<a href=\"../String.html\">String</a> | Regex), escape : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>, &block : <a href=\"../String.html\">String</a> -> _) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/page_helpers/html_text_helpers.cr","line_number":96,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/html_text_helpers.cr#L96"},"def":{"name":"highlight","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"phrases","external_name":"phrases","restriction":"Array(String | Regex)"},{"name":"escape","default_value":"false","external_name":"escape","restriction":"Bool"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(String -> _)"},"return_type":"Nil","visibility":"Public","body":"highlight(text, phrases, highlighter: block, escape: escape)"},"external_var":false},{"html_id":"highlight(text:String,phrase:String|Regex,highlighter:Proc|String=\"<mark>\\\\1</mark>\",escape:Bool=true):Nil-instance-method","name":"highlight","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"phrase","external_name":"phrase","restriction":"String | Regex"},{"name":"highlighter","default_value":"\"<mark>\\\\1</mark>\"","external_name":"highlighter","restriction":"Proc | String"},{"name":"escape","default_value":"true","external_name":"escape","restriction":"Bool"}],"args_string":"(text : String, phrase : String | Regex, highlighter : Proc | String = \"<mark>\\\\1</mark>\", escape : Bool = true) : Nil","args_html":"(text : <a href=\"../String.html\">String</a>, phrase : <a href=\"../String.html\">String</a> | Regex, highlighter : Proc | <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&lt;mark&gt;\\\\1&lt;/mark&gt;&quot;</span>, escape : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">true</span>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/page_helpers/html_text_helpers.cr","line_number":100,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/html_text_helpers.cr#L100"},"def":{"name":"highlight","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"phrase","external_name":"phrase","restriction":"String | Regex"},{"name":"highlighter","default_value":"\"<mark>\\\\1</mark>\"","external_name":"highlighter","restriction":"Proc | String"},{"name":"escape","default_value":"true","external_name":"escape","restriction":"Bool"}],"return_type":"Nil","visibility":"Public","body":"phrases = [phrase] of String | Regex\nhighlight(text, phrases, highlighter: highlighter, escape: escape)\n"},"external_var":false},{"html_id":"highlight(text:String,phrase:String|Regex,escape:Bool=true,&block:String->_):Nil-instance-method","name":"highlight","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"phrase","external_name":"phrase","restriction":"String | Regex"},{"name":"escape","default_value":"true","external_name":"escape","restriction":"Bool"}],"args_string":"(text : String, phrase : String | Regex, escape : Bool = true, &block : String -> _) : Nil","args_html":"(text : <a href=\"../String.html\">String</a>, phrase : <a href=\"../String.html\">String</a> | Regex, escape : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">true</span>, &block : <a href=\"../String.html\">String</a> -> _) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/page_helpers/html_text_helpers.cr","line_number":105,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/html_text_helpers.cr#L105"},"def":{"name":"highlight","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"phrase","external_name":"phrase","restriction":"String | Regex"},{"name":"escape","default_value":"true","external_name":"escape","restriction":"Bool"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(String -> _)"},"return_type":"Nil","visibility":"Public","body":"phrases = [phrase] of String | Regex\nhighlight(text, phrases, highlighter: block, escape: escape)\n"},"external_var":false},{"html_id":"simple_format(text:String,&:String->_):Nil-instance-method","name":"simple_format","doc":"Wraps text in whatever you'd like based on line breaks\n\n**Note: This method writes HTML directly to the page. It does not return a\nString**\n\n```\nsimple_format(\"foo\\n\\nbar\\n\\nbaz\") do |paragraph|\n  text paragraph\n  hr\nend\n```\noutputs:\n```html\nfoo<hr>\n\nbar<hr>\n\nbaz<hr>\n```","summary":"<p>Wraps text in whatever you'd like based on line breaks</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"}],"args_string":"(text : String, & : String -> _) : Nil","args_html":"(text : <a href=\"../String.html\">String</a>, & : <a href=\"../String.html\">String</a> -> _) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/page_helpers/html_text_helpers.cr","line_number":129,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/html_text_helpers.cr#L129"},"def":{"name":"simple_format","args":[{"name":"text","external_name":"text","restriction":"String"}],"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(String -> _)"},"return_type":"Nil","visibility":"Public","body":"paragraphs = split_paragraphs(text)\n\nif paragraphs.empty?\n  paragraphs = [\"\"]\nend\n\nparagraphs.each do |paragraph|\n  yield paragraph\n  if paragraph == paragraphs.last\n  else\n    raw(\"\\n\\n\")\n  end\nend\nview\n"},"external_var":false},{"html_id":"simple_format(text:String,escape:Bool=true,**html_options):Nil-instance-method","name":"simple_format","doc":"Wraps text in paragraphs based on line breaks\n\n```\nsimple_format(\"foo\\n\\nbar\\n\\nbaz\")\n```\noutputs:\n```html\n<p>foo</p>\n\n<p>bar</p>\n\n<p>baz</p>\n```","summary":"<p>Wraps text in paragraphs based on line breaks</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"escape","default_value":"true","external_name":"escape","restriction":"Bool"}],"args_string":"(text : String, escape : Bool = true, **html_options) : Nil","args_html":"(text : <a href=\"../String.html\">String</a>, escape : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">true</span>, **html_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/page_helpers/html_text_helpers.cr","line_number":154,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/html_text_helpers.cr#L154"},"def":{"name":"simple_format","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"escape","default_value":"true","external_name":"escape","restriction":"Bool"}],"double_splat":{"name":"html_options","external_name":"html_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"text = escape ? HTML.escape(text) : text\n\nsimple_format(text) do |formatted_text|\n  para(html_options) do\n    raw(formatted_text)\n  end\nend\n"},"external_var":false},{"html_id":"truncate(text:String,length:Int32=30,omission:String=\"...\",separator:String|Nil=nil,escape:Bool=true,blk:Nil|Proc=nil):Nil-instance-method","name":"truncate","doc":"Shortens text after a length point and inserts content afterward\n\n**Note: This method writes HTML directly to the page. It does not return a\nString.**\n\nThis is ideal if you want an action associated with shortened text, like\n\"Read more\".\n\n* `length` (default: `30`) will control the maximum length of the text,\nincluding the `omission`.\n* `omission` (default: `...`) will insert itself at the end of the\ntruncated text.\n* `separator` (default: nil) is where words are cut off. This is often\noverridden to break on word boundaries by setting the separator to a space\n`\" \"`. Keep in mind this, may cause your text to be truncated before your\n`length` value if the `length` - `omission` is before the `separator`.\n* `escape` (default: true) weather or not to HTML escape the truncated\nstring.\n* `blk` (default: nil) A block to run after the text has been truncated.\nOften used to add an action to read more text, like a \"Read more\" link.\n\n```\ntruncate(\"Four score and seven years ago\", length: 20) do\n  link \"Read more\", to: \"#\"\nend\n```\noutputs:\n```html\n\"Four score and se...<a href=\"#\">Read more</a>\"\n```","summary":"<p>Shortens text after a length point and inserts content afterward</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"length","default_value":"30","external_name":"length","restriction":"Int32"},{"name":"omission","default_value":"\"...\"","external_name":"omission","restriction":"String"},{"name":"separator","default_value":"nil","external_name":"separator","restriction":"String | Nil"},{"name":"escape","default_value":"true","external_name":"escape","restriction":"Bool"},{"name":"blk","default_value":"nil","external_name":"blk","restriction":"Nil | Proc"}],"args_string":"(text : String, length : Int32 = 30, omission : String = \"...\", separator : String | Nil = nil, escape : Bool = true, blk : Nil | Proc = nil) : Nil","args_html":"(text : <a href=\"../String.html\">String</a>, length : <a href=\"../Int32.html\">Int32</a> = <span class=\"n\">30</span>, omission : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;...&quot;</span>, separator : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, escape : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">true</span>, blk : <a href=\"../Nil.html\">Nil</a> | Proc = <span class=\"n\">nil</span>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/page_helpers/html_text_helpers.cr","line_number":33,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/html_text_helpers.cr#L33"},"def":{"name":"truncate","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"length","default_value":"30","external_name":"length","restriction":"Int32"},{"name":"omission","default_value":"\"...\"","external_name":"omission","restriction":"String"},{"name":"separator","default_value":"nil","external_name":"separator","restriction":"String | Nil"},{"name":"escape","default_value":"true","external_name":"escape","restriction":"Bool"},{"name":"blk","default_value":"nil","external_name":"blk","restriction":"Nil | Proc"}],"return_type":"Nil","visibility":"Public","body":"content = truncate_text(text, length, omission, separator)\nraw(escape ? HTML.escape(content) : content)\nif !blk.nil? && text.size > length\n  blk.call\nend\n"},"external_var":false},{"html_id":"truncate(text:String,length:Int32=30,omission:String=\"...\",separator:String|Nil=nil,escape:Bool=true,&block:->_):Nil-instance-method","name":"truncate","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"length","default_value":"30","external_name":"length","restriction":"Int32"},{"name":"omission","default_value":"\"...\"","external_name":"omission","restriction":"String"},{"name":"separator","default_value":"nil","external_name":"separator","restriction":"String | Nil"},{"name":"escape","default_value":"true","external_name":"escape","restriction":"Bool"}],"args_string":"(text : String, length : Int32 = 30, omission : String = \"...\", separator : String | Nil = nil, escape : Bool = true, &block :  -> _) : Nil","args_html":"(text : <a href=\"../String.html\">String</a>, length : <a href=\"../Int32.html\">Int32</a> = <span class=\"n\">30</span>, omission : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;...&quot;</span>, separator : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, escape : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">true</span>, &block :  -> _) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/page_helpers/html_text_helpers.cr","line_number":39,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/html_text_helpers.cr#L39"},"def":{"name":"truncate","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"length","default_value":"30","external_name":"length","restriction":"Int32"},{"name":"omission","default_value":"\"...\"","external_name":"omission","restriction":"String"},{"name":"separator","default_value":"nil","external_name":"separator","restriction":"String | Nil"},{"name":"escape","default_value":"true","external_name":"escape","restriction":"Bool"}],"yields":0,"block_arity":0,"block_arg":{"name":"block","external_name":"block","restriction":"(-> _)"},"return_type":"Nil","visibility":"Public","body":"truncate(text, length, omission, separator, escape, blk: block)"},"external_var":false}]},{"html_id":"lucky/Lucky/HttpMethodOverrideHandler","path":"Lucky/HttpMethodOverrideHandler.html","kind":"class","full_name":"Lucky::HttpMethodOverrideHandler","name":"HttpMethodOverrideHandler","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/http_method_override_handler.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/http_method_override_handler.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"call(context:HTTP::Server::Context)-instance-method","name":"call","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>)","location":{"filename":"src/lucky/http_method_override_handler.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/http_method_override_handler.cr#L4"},"def":{"name":"call","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"visibility":"Public","body":"http_method = overridden_http_method(context)\n\nif http_method && (override_allowed?(context, http_method))\n  context.request.method = http_method\nend\n\ncall_next(context)\n"},"external_var":false}]},{"html_id":"lucky/Lucky/InvalidCookieValueError","path":"Lucky/InvalidCookieValueError.html","kind":"class","full_name":"Lucky::InvalidCookieValueError","name":"InvalidCookieValueError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":126,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L126"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Crystal raises `Invalid cookie value (IO::Error)` by default.\nThis provides a nicer error","summary":"<p>Crystal raises <code>Invalid cookie value (IO::Error)</code> by default.</p>","constructors":[{"html_id":"new(key:String|Symbol)-class-method","name":"new","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol)","args_html":"(key : <a href=\"../String.html\">String</a> | Symbol)","location":{"filename":"src/lucky/errors.cr","line_number":129,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L129"},"def":{"name":"new","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"visibility":"Public","body":"_ = allocate\n_.initialize(key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"key:String|Symbol-instance-method","name":"key","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":127,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L127"},"def":{"name":"key","visibility":"Public","body":"@key"},"external_var":false},{"html_id":"message:String-instance-method","name":"message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":132,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L132"},"def":{"name":"message","return_type":"String","visibility":"Public","body":"\"Cookie value for '#{key}' is invalid.\\n\\nBe sure the value does not contain any blank characters,\\ncomma, double quote, semicolon, or double backslash.\\n\\nSee https://tools.ietf.org/html/rfc6265#section-4.1.1 for valid\\ncharacters\""},"external_var":false}]},{"html_id":"lucky/Lucky/InvalidFlashJSONError","path":"Lucky/InvalidFlashJSONError.html","kind":"class","full_name":"Lucky::InvalidFlashJSONError","name":"InvalidFlashJSONError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":225,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L225"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(bad_json:String|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"bad_json","external_name":"bad_json","restriction":"String | ::Nil"}],"args_string":"(bad_json : String | Nil)","args_html":"(bad_json : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>)","location":{"filename":"src/lucky/errors.cr","line_number":228,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L228"},"def":{"name":"new","args":[{"name":"bad_json","external_name":"bad_json","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(bad_json)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"bad_json:String?-instance-method","name":"bad_json","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":226,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L226"},"def":{"name":"bad_json","visibility":"Public","body":"@bad_json"},"external_var":false},{"html_id":"message:String|Nil-instance-method","name":"message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":231,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L231"},"def":{"name":"message","return_type":"String | ::Nil","visibility":"Public","body":"\"The flash messages (stored as JSON) failed to parse in a JSON parser.\\nHere's what it tries to parse:\\n\\n#{bad_json}\""},"external_var":false}]},{"html_id":"lucky/Lucky/InvalidMessageError","path":"Lucky/InvalidMessageError.html","kind":"class","full_name":"Lucky::InvalidMessageError","name":"InvalidMessageError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":148,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L148"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"}},{"html_id":"lucky/Lucky/InvalidParamError","path":"Lucky/InvalidParamError.html","kind":"class","full_name":"Lucky::InvalidParamError","name":"InvalidParamError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"},{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":151,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L151"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(param_name:String,param_value:String,param_type:String)-class-method","name":"new","abstract":false,"args":[{"name":"param_name","external_name":"param_name","restriction":"String"},{"name":"param_value","external_name":"param_value","restriction":"String"},{"name":"param_type","external_name":"param_type","restriction":"String"}],"args_string":"(param_name : String, param_value : String, param_type : String)","args_html":"(param_name : <a href=\"../String.html\">String</a>, param_value : <a href=\"../String.html\">String</a>, param_type : <a href=\"../String.html\">String</a>)","location":{"filename":"src/lucky/errors.cr","line_number":156,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L156"},"def":{"name":"new","args":[{"name":"param_name","external_name":"param_name","restriction":"String"},{"name":"param_value","external_name":"param_value","restriction":"String"},{"name":"param_type","external_name":"param_type","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(param_name, param_value, param_type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"message:String|Nil-instance-method","name":"message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":159,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L159"},"def":{"name":"message","return_type":"String | ::Nil","visibility":"Public","body":"\"Required param '#{param_name}' with value '#{param_value}' couldn't be parsed to a '#{param_type}'\""},"external_var":false},{"html_id":"param_name:String-instance-method","name":"param_name","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":154,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L154"},"def":{"name":"param_name","visibility":"Public","body":"@param_name"},"external_var":false},{"html_id":"param_type:String-instance-method","name":"param_type","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":154,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L154"},"def":{"name":"param_type","visibility":"Public","body":"@param_type"},"external_var":false},{"html_id":"param_value:String-instance-method","name":"param_value","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":154,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L154"},"def":{"name":"param_value","visibility":"Public","body":"@param_value"},"external_var":false},{"html_id":"renderable_message:String-instance-method","name":"renderable_message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":167,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L167"},"def":{"name":"renderable_message","return_type":"String","visibility":"Public","body":"message"},"external_var":false},{"html_id":"renderable_status:Int32-instance-method","name":"renderable_status","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":163,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L163"},"def":{"name":"renderable_status","return_type":"Int32","visibility":"Public","body":"HTTP::Status::UNPROCESSABLE_ENTITY.value"},"external_var":false}]},{"html_id":"lucky/Lucky/InvalidSignatureError","path":"Lucky/InvalidSignatureError.html","kind":"class","full_name":"Lucky::InvalidSignatureError","name":"InvalidSignatureError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":145,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L145"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"}},{"html_id":"lucky/Lucky/InvalidSubdomainError","path":"Lucky/InvalidSubdomainError.html","kind":"class","full_name":"Lucky::InvalidSubdomainError","name":"InvalidSubdomainError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":241,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L241"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(host:String|Nil,expected:Lucky::Subdomain::Matcher)-class-method","name":"new","abstract":false,"args":[{"name":"host","external_name":"host","restriction":"String | ::Nil"},{"name":"expected","external_name":"expected","restriction":"Lucky::Subdomain::Matcher"}],"args_string":"(host : String | Nil, expected : Lucky::Subdomain::Matcher)","args_html":"(host : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>, expected : <a href=\"../Lucky/Subdomain/Matcher.html\">Lucky::Subdomain::Matcher</a>)","location":{"filename":"src/lucky/errors.cr","line_number":242,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L242"},"def":{"name":"new","args":[{"name":"host","external_name":"host","restriction":"String | ::Nil"},{"name":"expected","external_name":"expected","restriction":"Lucky::Subdomain::Matcher"}],"visibility":"Public","body":"_ = allocate\n_.initialize(host, expected)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"message:String-instance-method","name":"message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":245,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L245"},"def":{"name":"message","return_type":"String","visibility":"Public","body":"if @host.nil?\n  \"Expected to find a subdomain but did not find a hostname on the request.\"\nelse\n  if @expected == true\n    \"Expected request to have a subdomain but did not find one.\"\n  else\n    \"  Expected subdomain matcher(s): #{@expected}\\n  Did not match host: #{@host}\"\n  end\nend"},"external_var":false}]},{"html_id":"lucky/Lucky/LinkHelpers","path":"Lucky/LinkHelpers.html","kind":"module","full_name":"Lucky::LinkHelpers","name":"LinkHelpers","abstract":false,"locations":[{"filename":"src/lucky/tags/link_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/link_helpers.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"link(text,to:Lucky::RouteHelper,attrs:Array(Symbol)=[]ofSymbol,**html_options):Nil-instance-method","name":"link","abstract":false,"args":[{"name":"text","external_name":"text","restriction":""},{"name":"to","external_name":"to","restriction":"Lucky::RouteHelper"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(text, to : Lucky::RouteHelper, attrs : Array(Symbol) = [] of Symbol, **html_options) : Nil","args_html":"(text, to : <a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **html_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/link_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/link_helpers.cr#L2"},"def":{"name":"link","args":[{"name":"text","external_name":"text","restriction":""},{"name":"to","external_name":"to","restriction":"Lucky::RouteHelper"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","external_name":"html_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"link(**html_options, to: to, attrs: attrs) do\n  text(text)\nend"},"external_var":false},{"html_id":"link(to:Lucky::RouteHelper,attrs:Array(Symbol)=[]ofSymbol,**html_options):Nil-instance-method","name":"link","abstract":false,"args":[{"name":"to","external_name":"to","restriction":"Lucky::RouteHelper"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(to : Lucky::RouteHelper, attrs : Array(Symbol) = [] of Symbol, **html_options) : Nil","args_html":"(to : <a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **html_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/link_helpers.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/link_helpers.cr#L8"},"def":{"name":"link","args":[{"name":"to","external_name":"to","restriction":"Lucky::RouteHelper"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","external_name":"html_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"link(**html_options, to: to, attrs: attrs) do\nend"},"external_var":false},{"html_id":"link(to:Lucky::RouteHelper,href:String,**html_options,&):Nil-instance-method","name":"link","abstract":false,"args":[{"name":"to","external_name":"to","restriction":"Lucky::RouteHelper"},{"name":"href","external_name":"href","restriction":"String"}],"args_string":"(to : Lucky::RouteHelper, href : String, **html_options, &) : Nil","args_html":"(to : <a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a>, href : <a href=\"../String.html\">String</a>, **html_options, &) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/link_helpers.cr","line_number":12,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/link_helpers.cr#L12"},"def":{"name":"link","args":[{"name":"to","external_name":"to","restriction":"Lucky::RouteHelper"},{"name":"href","external_name":"href","restriction":"String"}],"double_splat":{"name":"html_options","external_name":"html_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"{%\n  raise(\"'link' cannot be called with an href.\\n\\nUse 'a()' or remove the href argument.\\n\\nExample:\\n\\n  a href: \\\"/\\\" do\\n  end\\n\\n  link to: Home::Index do\\n  end\\n\")\n%}"},"external_var":false},{"html_id":"link(to:Lucky::RouteHelper,attrs:Array(Symbol)=[]ofSymbol,**html_options,&):Nil-instance-method","name":"link","abstract":false,"args":[{"name":"to","external_name":"to","restriction":"Lucky::RouteHelper"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(to : Lucky::RouteHelper, attrs : Array(Symbol) = [] of Symbol, **html_options, &) : Nil","args_html":"(to : <a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **html_options, &) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/link_helpers.cr","line_number":31,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/link_helpers.cr#L31"},"def":{"name":"link","args":[{"name":"to","external_name":"to","restriction":"Lucky::RouteHelper"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","external_name":"html_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"a(attrs, merge_options(html_options, link_to_href(to))) do\n  yield\nend"},"external_var":false},{"html_id":"link(text,to:Lucky::Action.class,attrs:Array(Symbol)=[]ofSymbol,**html_options):Nil-instance-method","name":"link","abstract":false,"args":[{"name":"text","external_name":"text","restriction":""},{"name":"to","external_name":"to","restriction":"Lucky::Action.class"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(text, to : Lucky::Action.class, attrs : Array(Symbol) = [] of Symbol, **html_options) : Nil","args_html":"(text, to : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Action</span>.<span class=\"k\">class</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **html_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/link_helpers.cr","line_number":37,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/link_helpers.cr#L37"},"def":{"name":"link","args":[{"name":"text","external_name":"text","restriction":""},{"name":"to","external_name":"to","restriction":"Lucky::Action.class"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","external_name":"html_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"link(**html_options, to: to, attrs: attrs) do\n  text(text)\nend"},"external_var":false},{"html_id":"link(to:Lucky::Action.class,attrs:Array(Symbol)=[]ofSymbol,**html_options):Nil-instance-method","name":"link","abstract":false,"args":[{"name":"to","external_name":"to","restriction":"Lucky::Action.class"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(to : Lucky::Action.class, attrs : Array(Symbol) = [] of Symbol, **html_options) : Nil","args_html":"(to : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Action</span>.<span class=\"k\">class</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **html_options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/link_helpers.cr","line_number":43,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/link_helpers.cr#L43"},"def":{"name":"link","args":[{"name":"to","external_name":"to","restriction":"Lucky::Action.class"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","external_name":"html_options","restriction":""},"return_type":"Nil","visibility":"Public","body":"link(**html_options, to: to, attrs: attrs) do\nend"},"external_var":false},{"html_id":"link(to:Lucky::Action.class,attrs:Array(Symbol)=[]ofSymbol,**html_options,&):Nil-instance-method","name":"link","abstract":false,"args":[{"name":"to","external_name":"to","restriction":"Lucky::Action.class"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(to : Lucky::Action.class, attrs : Array(Symbol) = [] of Symbol, **html_options, &) : Nil","args_html":"(to : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Action</span>.<span class=\"k\">class</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **html_options, &) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/link_helpers.cr","line_number":47,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/link_helpers.cr#L47"},"def":{"name":"link","args":[{"name":"to","external_name":"to","restriction":"Lucky::Action.class"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","external_name":"html_options","restriction":""},"yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"link(**html_options, to: to.route, attrs: attrs) do\n  yield\nend"},"external_var":false},{"html_id":"link(text,to:String,attrs:Array(Symbol)=[]ofSymbol,**html_options)-instance-method","name":"link","abstract":false,"args":[{"name":"text","external_name":"text","restriction":""},{"name":"to","external_name":"to","restriction":"String"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(text, to : String, attrs : Array(Symbol) = [] of Symbol, **html_options)","args_html":"(text, to : <a href=\"../String.html\">String</a>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **html_options)","location":{"filename":"src/lucky/tags/link_helpers.cr","line_number":61,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/link_helpers.cr#L61"},"def":{"name":"link","args":[{"name":"text","external_name":"text","restriction":""},{"name":"to","external_name":"to","restriction":"String"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","external_name":"html_options","restriction":""},"visibility":"Public","body":"{%\n  raise(\"'link' no longer supports passing a String to 'to'.\\n\\nUse 'a()' or pass an Action class instead.\\n\\nExample:\\n\\n  a \\\"Home\\\", href: \\\"/\\\"\\n  link \\\"Home\\\", to: Home::Index\\n\")\n%}"},"external_var":false},{"html_id":"link(to:String,attrs:Array(Symbol)=[]ofSymbol,**html_options,&)-instance-method","name":"link","abstract":false,"args":[{"name":"to","external_name":"to","restriction":"String"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(to : String, attrs : Array(Symbol) = [] of Symbol, **html_options, &)","args_html":"(to : <a href=\"../String.html\">String</a>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **html_options, &)","location":{"filename":"src/lucky/tags/link_helpers.cr","line_number":77,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/link_helpers.cr#L77"},"def":{"name":"link","args":[{"name":"to","external_name":"to","restriction":"String"},{"name":"attrs","default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","external_name":"html_options","restriction":""},"yields":0,"block_arity":0,"visibility":"Public","body":"{%\n  raise(\"'link' no longer supports passing a String to 'to'.\\n\\nUse 'a()' or pass an Action class instead.\\n\\nExample:\\n\\n  a href: \\\"/\\\" do\\n  end\\n\\n  link to: Home::Index do\\n  end\\n\")\n%}\nyield\n"},"external_var":false}]},{"html_id":"lucky/Lucky/LiveReloadTag","path":"Lucky/LiveReloadTag.html","kind":"module","full_name":"Lucky::LiveReloadTag","name":"LiveReloadTag","abstract":false,"locations":[{"filename":"src/lucky/tags/live_reload_tag.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/live_reload_tag.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"},{"html_id":"lucky/Lucky/WelcomePage","kind":"class","full_name":"Lucky::WelcomePage","name":"WelcomePage"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"live_reload_connect_tag(ms:Int32=1000):Nil-instance-method","name":"live_reload_connect_tag","abstract":false,"args":[{"name":"ms","default_value":"1000","external_name":"ms","restriction":"Int32"}],"args_string":"(ms : Int32 = 1000) : Nil","args_html":"(ms : <a href=\"../Int32.html\">Int32</a> = <span class=\"n\">1000</span>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/live_reload_tag.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/live_reload_tag.cr#L2"},"def":{"name":"live_reload_connect_tag","args":[{"name":"ms","default_value":"1000","external_name":"ms","restriction":"Int32"}],"return_type":"Nil","visibility":"Public","body":"{% if flag?(:livereloadws) %}\n      tag \"script\" do\n        raw <<-JS\n        (function() {\n          var ws = new WebSocket(\"ws://#{Lucky::ServerSettings.host}:#{Lucky::ServerSettings.reload_port}\");\n          ws.onmessage = function() {\n            setTimeout(function() {\n              location.reload();\n            }, #{ms});\n          };\n        })();\n        JS\n      end\n    {% else %}{% if flag?(:livereloadsse) %}\n      tag \"script\" do\n        raw <<-JS\n        (function() {\n          var stream = new EventSource(\"http://#{Lucky::ServerSettings.host}:#{Lucky::ServerSettings.reload_port}\");\n          stream.onmessage = function() {\n            setTimeout(function() {\n              location.reload();\n            }, #{ms});\n          };\n        })();\n        JS\n      end\n    {% end %}{% end %}"},"external_var":false}]},{"html_id":"lucky/Lucky/LoggerHelpers","path":"Lucky/LoggerHelpers.html","kind":"module","full_name":"Lucky::LoggerHelpers","name":"LoggerHelpers","abstract":false,"locations":[{"filename":"src/lucky/logger_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/logger_helpers.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"class_methods":[{"html_id":"colored_http_status(status_code:Int32):String-class-method","name":"colored_http_status","abstract":false,"args":[{"name":"status_code","external_name":"status_code","restriction":"Int32"}],"args_string":"(status_code : Int32) : String","args_html":"(status_code : <a href=\"../Int32.html\">Int32</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/logger_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/logger_helpers.cr#L2"},"def":{"name":"colored_http_status","args":[{"name":"status_code","external_name":"status_code","restriction":"Int32"}],"return_type":"String","visibility":"Public","body":"http_status = HTTP::Status.from_value?(status_code)\nstatus_name = http_status.try(&.description) || \"\"\nmessage = \"#{status_code} #{status_name}\".colorize.bold\n\n(case status_code\nwhen 400..499\n  message.yellow\nwhen 500..599\n  message.red\nelse\n  message\nend).to_s\n"},"external_var":false},{"html_id":"elapsed_text(elapsed:Time::Span):String-class-method","name":"elapsed_text","abstract":false,"args":[{"name":"elapsed","external_name":"elapsed","restriction":"Time::Span"}],"args_string":"(elapsed : Time::Span) : String","args_html":"(elapsed : Time::Span) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/logger_helpers.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/logger_helpers.cr#L17"},"def":{"name":"elapsed_text","args":[{"name":"elapsed","external_name":"elapsed","restriction":"Time::Span"}],"return_type":"String","visibility":"Public","body":"minutes = elapsed.total_minutes\nif minutes >= 1\n  return \"#{minutes.round(2)}m\"\nend\n\nseconds = elapsed.total_seconds\nif seconds >= 1\n  return \"#{seconds.round(2)}s\"\nend\n\nmillis = elapsed.total_milliseconds\nif millis >= 1\n  return \"#{millis.round(2)}ms\"\nend\n\n\"#{(millis * 1000).round(2)}µs\"\n"},"external_var":false}]},{"html_id":"lucky/Lucky/LogHandler","path":"Lucky/LogHandler.html","kind":"class","full_name":"Lucky::LogHandler","name":"LogHandler","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/log_handler.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/log_handler.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: skip_if : Proc(HTTP::Server::Context, Bool) | ::Nil, example: nil, validation: nil}] of Nil"},{"id":"REQUEST_END_KEYS","name":"REQUEST_END_KEYS","value":"{status: \"status\", duration: \"duration\", request_id: \"request_id\"}"},{"id":"REQUEST_START_KEYS","name":"REQUEST_START_KEYS","value":"{method: \"method\", path: \"path\", request_id: \"request_id\"}","doc":"These constants are used here and in the PrettyLogFormatter to make sure\nthat the formatter looks for the right keys!","summary":"<p>These constants are used here and in the PrettyLogFormatter to make sure that the formatter looks for the right keys!</p>"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/log_handler.cr","line_number":19,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/log_handler.cr#L19"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/log_handler.cr","line_number":19,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/log_handler.cr#L19"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"instance_methods":[{"html_id":"call(context:HTTP::Server::Context)-instance-method","name":"call","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>)","location":{"filename":"src/lucky/log_handler.cr","line_number":25,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/log_handler.cr#L25"},"def":{"name":"call","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"visibility":"Public","body":"begin\n  should_skip_logging = settings.skip_if.try(&.call(context))\n\n  if should_skip_logging\n    call_next(context)\n  else\n    log_request_start(context)\n\n    duration = Time.measure do\n      call_next(context)\n    end\n\n    log_request_end(context, duration: duration)\n    Lucky::Events::RequestCompleteEvent.publish(duration)\n  end\nrescue e\n  log_exception(context, Time.utc, e)\n  raise(e)\nend"},"external_var":false},{"html_id":"logger(*args,**options)-instance-method","name":"logger","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/lucky/log_handler.cr","line_number":23,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/log_handler.cr#L23"},"def":{"name":"logger","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"Lucky.logger(*args, **options)"},"external_var":false},{"html_id":"logger(*args,**options,&)-instance-method","name":"logger","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/lucky/log_handler.cr","line_number":23,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/log_handler.cr#L23"},"def":{"name":"logger","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"Lucky.logger(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/log_handler.cr","line_number":19,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/log_handler.cr#L19"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/LogHandler/HabitatSettings","path":"Lucky/LogHandler/HabitatSettings.html","kind":"class","full_name":"Lucky::LogHandler::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/log_handler.cr","line_number":19,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/log_handler.cr#L19"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/LogHandler","kind":"class","full_name":"Lucky::LogHandler","name":"LogHandler"},"class_methods":[{"html_id":"skip_if:Proc(HTTP::Server::Context,Bool)|Nil-class-method","name":"skip_if","abstract":false,"def":{"name":"skip_if","return_type":"Proc(HTTP::Server::Context, Bool) | ::Nil","visibility":"Public","body":"@@skip_if"},"external_var":false},{"html_id":"skip_if=(value:Proc(HTTP::Server::Context,Bool)|Nil)-class-method","name":"skip_if=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Proc(HTTP::Server::Context, Bool) | ::Nil"}],"args_string":"(value : Proc(HTTP::Server::Context, Bool) | Nil)","args_html":"(value : Proc(<a href=\"../../HTTP/Server/Context.html\">HTTP::Server::Context</a>, <a href=\"../../Bool.html\">Bool</a>) | <a href=\"../../Nil.html\">Nil</a>)","def":{"name":"skip_if=","args":[{"name":"value","external_name":"value","restriction":"Proc(HTTP::Server::Context, Bool) | ::Nil"}],"visibility":"Public","body":"@@skip_if = value"},"external_var":false},{"html_id":"skip_if?-class-method","name":"skip_if?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use skip_if in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use skip_if in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"skip_if?","visibility":"Public","body":"@@skip_if"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"skip_if\" => skip_if}"},"external_var":false}]}]},{"html_id":"lucky/Lucky/MaximumRequestSizeHandler","path":"Lucky/MaximumRequestSizeHandler.html","kind":"class","full_name":"Lucky::MaximumRequestSizeHandler","name":"MaximumRequestSizeHandler","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/maximum_request_size_handler.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/maximum_request_size_handler.cr#L13"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: enabled : Bool = false, example: nil, validation: nil}, {decl: max_size : Int64 = 1048576_i64, example: nil, validation: nil}] of Nil"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/maximum_request_size_handler.cr","line_number":16,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/maximum_request_size_handler.cr#L16"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/maximum_request_size_handler.cr","line_number":16,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/maximum_request_size_handler.cr#L16"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"instance_methods":[{"html_id":"call(context:HTTP::Server::Context)-instance-method","name":"call","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>)","location":{"filename":"src/lucky/maximum_request_size_handler.cr","line_number":21,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/maximum_request_size_handler.cr#L21"},"def":{"name":"call","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"visibility":"Public","body":"if settings.enabled\nelse\n  return call_next(context)\nend\n\nbody_size = 0\nbody = IO::Memory.new\n\nbegin\n  buffer = Bytes.new(8192)\n  while read_bytes = context.request.body.try(&.read(buffer))\n    body_size = body_size + read_bytes\n    body.write(buffer[0, read_bytes])\n\n    if body_size > settings.max_size\n      context.response.status = HTTP::Status::PAYLOAD_TOO_LARGE\n      context.response.print(\"Request entity too large\")\n      return context\n    end\n\n    if read_bytes < buffer.size\n      break\n    end\n  end\nrescue IO::Error\n  context.response.status = HTTP::Status::BAD_REQUEST\n  context.response.print(\"Error reading request body\")\n  return context\nend\n\n\ncontext.request.body = IO::Memory.new(body.to_s)\n\ncall_next(context)\n"},"external_var":false},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/maximum_request_size_handler.cr","line_number":16,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/maximum_request_size_handler.cr#L16"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/MaximumRequestSizeHandler/HabitatSettings","path":"Lucky/MaximumRequestSizeHandler/HabitatSettings.html","kind":"class","full_name":"Lucky::MaximumRequestSizeHandler::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/maximum_request_size_handler.cr","line_number":16,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/maximum_request_size_handler.cr#L16"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/MaximumRequestSizeHandler","kind":"class","full_name":"Lucky::MaximumRequestSizeHandler","name":"MaximumRequestSizeHandler"},"class_methods":[{"html_id":"enabled:Bool-class-method","name":"enabled","abstract":false,"def":{"name":"enabled","return_type":"Bool","visibility":"Public","body":"@@enabled.not_nil!"},"external_var":false},{"html_id":"enabled=(value:Bool)-class-method","name":"enabled=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../../Bool.html\">Bool</a>)","def":{"name":"enabled=","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"visibility":"Public","body":"@@enabled = value"},"external_var":false},{"html_id":"enabled?-class-method","name":"enabled?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use enabled in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use enabled in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"enabled?","visibility":"Public","body":"@@enabled"},"external_var":false},{"html_id":"max_size:Int64-class-method","name":"max_size","abstract":false,"def":{"name":"max_size","return_type":"Int64","visibility":"Public","body":"@@max_size.not_nil!"},"external_var":false},{"html_id":"max_size=(value:Int64)-class-method","name":"max_size=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","args_html":"(value : <a href=\"../../Int64.html\">Int64</a>)","def":{"name":"max_size=","args":[{"name":"value","external_name":"value","restriction":"Int64"}],"visibility":"Public","body":"@@max_size = value"},"external_var":false},{"html_id":"max_size?-class-method","name":"max_size?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use max_size in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use max_size in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"max_size?","visibility":"Public","body":"@@max_size"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"enabled\" => enabled, \"max_size\" => max_size}"},"external_var":false}]}]},{"html_id":"lucky/Lucky/Memoizable","path":"Lucky/Memoizable.html","kind":"module","full_name":"Lucky::Memoizable","name":"Memoizable","abstract":false,"locations":[{"filename":"src/lucky/memoizable.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/memoizable.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"macros":[{"html_id":"memoize(method_def)-macro","name":"memoize","doc":"Caches the return value of the method. Helpful for expensive methods that are called more than once.\n\nTo memoize a method, prefix it with `memoize`:\n\n```\nclass BrowserAction\n  memoize def current_user : User\n    # Get the current user\n  end\nend\n```\n\nThis will fetch the user record on the first `current_user` call,\nthen each subsequent call returns the user record.\n\nThe `memoize` method will raise a compile time exception if you forget to include\na return type for your method, or if any arguments are missing a type.\nThe result of a set of arguments is only kept until the passed arguments change.\nOnce they change, passing previous arguments will re-run the memoized method.\nEquality (==) is used for checking on argument updates.","summary":"<p>Caches the return value of the method.</p>","abstract":false,"args":[{"name":"method_def","external_name":"method_def","restriction":""}],"args_string":"(method_def)","args_html":"(method_def)","location":{"filename":"src/lucky/memoizable.cr","line_number":22,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/memoizable.cr#L22"},"def":{"name":"memoize","args":[{"name":"method_def","external_name":"method_def","restriction":""}],"visibility":"Public","body":"    \n{% if method_def.return_type.is_a?(Nop)\n  raise(\"You must define a return type for memoized methods\")\nend %}\n\n    \n{%\n  if method_def.args.any? do |__arg0|\n    __arg0.restriction.is_a?(Nop)\n  end\n    raise(\"All arguments must have an explicit type restriction for memoized methods\")\n  end\n%}\n\n\n    \n{%\n  special_ending = nil\n  safe_method_name = method_def.name\n%}\n\n\n    \n{%\n  if method_def.name.ends_with?('?')\n    special_ending = \"?\"\n    safe_method_name = method_def.name.tr(\"?\", \"\")\n  else\n    if method_def.name.ends_with?('!')\n      special_ending = \"!\"\n      safe_method_name = method_def.name.tr(\"!\", \"\")\n    end\n  end\n%}\n\n\n    @__memoized_\n{{ safe_method_name }}\n : Tuple(\n      \n{{ method_def.return_type }}\n,\n      \n{% for arg in method_def.args %}\n        {{ arg.restriction }},\n      {% end %}\n\n    )?\n\n    \n# Returns uncached value\n\n    def \n{{ safe_method_name }}\n__uncached\n{% if special_ending %}{{ special_ending.id }}{% end %}\n(\n      \n{% for arg in method_def.args %}\n        {% if arg.name == arg.internal_name %}\n          {{ arg.name }} : {{ arg.restriction }},\n        {% else %}\n          {{ arg.name }} {{ arg.internal_name }} : {{ arg.restriction }},\n        {% end %}\n      {% end %}\n\n    ) : \n{{ method_def.return_type }}\n\n      \n{{ method_def.body }}\n\n    \nend\n\n    \n# Checks the passed arguments against the memoized args\n\n    \n# and runs the method body if it is the very first call\n\n    \n# or the arguments do not match\n\n    def \n{{ safe_method_name }}\n__tuple_cached\n{% if special_ending %}{{ special_ending.id }}{% end %}\n(\n      \n{% for arg in method_def.args %}\n        {% if arg.name == arg.internal_name %}\n          {{ arg.name }} : {{ arg.restriction }},\n        {% else %}\n          {{ arg.name }} {{ arg.internal_name }} : {{ arg.restriction }},\n        {% end %}\n      {% end %}\n\n    ) : Tuple(\n      \n{{ method_def.return_type }}\n,\n      \n{% for arg in method_def.args %}\n        {{ arg.restriction }},\n      {% end %}\n\n    )\n      \n{% for arg, index in method_def.args %}\n        @__memoized_{{ safe_method_name }} = nil if {{ arg.internal_name }} != @__memoized_{{ safe_method_name }}.try &.at({{ index }} + 1)\n      {% end %}\n\n      @__memoized_\n{{ safe_method_name }}\n ||= -> do\n        result = \n{{ safe_method_name }}\n__uncached\n{% if special_ending %}{{ special_ending.id }}{% end %}\n(\n          \n{% for arg in method_def.args %}\n            {{ arg.internal_name }},\n          {% end %}\n\n        )\n        \n{\n          result,\n          \n{% for arg in method_def.args %}\n            {{ arg.internal_name }},\n          {% end %}\n\n        }\n      \nend.call.not_nil!\n    \nend\n\n    \n# Returns cached value\n\n    def \n{{ method_def.name }}\n(\n      \n{% for arg in method_def.args %}\n        {% has_default = (arg.default_value || (arg.default_value == false)) || (arg.default_value == nil) %}\n        {% if arg.name == arg.internal_name %}\n          {{ arg.name }} : {{ arg.restriction }}{% if has_default %} = {{ arg.default_value }}{% end %},\n        {% else %}\n          {{ arg.name }} {{ arg.internal_name }} : {{ arg.restriction }}{% if has_default %} = {{ arg.default_value }}{% end %},\n        {% end %}\n      {% end %}\n\n    ) : \n{{ method_def.return_type }}\n\n      \n{{ safe_method_name }}\n__tuple_cached\n{% if special_ending %}{{ special_ending.id }}{% end %}\n(\n        \n{% for arg in method_def.args %}\n          {{ arg.internal_name }},\n        {% end %}\n\n      ).first\n    \nend\n  \n"}}]},{"html_id":"lucky/Lucky/MessageEncryptor","path":"Lucky/MessageEncryptor.html","kind":"class","full_name":"Lucky::MessageEncryptor","name":"MessageEncryptor","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/support/message_encryptor.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_encryptor.cr#L6"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(secret:String,cipher_algorithm:String=\"aes-256-cbc\",digest:Symbol=:sha1)-class-method","name":"new","abstract":false,"args":[{"name":"secret","external_name":"secret","restriction":"String"},{"name":"cipher_algorithm","default_value":"\"aes-256-cbc\"","external_name":"cipher_algorithm","restriction":"::String"},{"name":"digest","default_value":":sha1","external_name":"digest","restriction":"::Symbol"}],"args_string":"(secret : String, cipher_algorithm : String = \"aes-256-cbc\", digest : Symbol = :sha1)","args_html":"(secret : <a href=\"../String.html\">String</a>, cipher_algorithm : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;aes-256-cbc&quot;</span>, digest : Symbol = <span class=\"n\">:sha1</span>)","location":{"filename":"src/lucky/support/message_encryptor.cr","line_number":9,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_encryptor.cr#L9"},"def":{"name":"new","args":[{"name":"secret","external_name":"secret","restriction":"String"},{"name":"cipher_algorithm","default_value":"\"aes-256-cbc\"","external_name":"cipher_algorithm","restriction":"::String"},{"name":"digest","default_value":":sha1","external_name":"digest","restriction":"::Symbol"}],"visibility":"Public","body":"_ = allocate\n_.initialize(secret, cipher_algorithm, digest)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"decrypt(value:Bytes):Bytes-instance-method","name":"decrypt","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bytes"}],"args_string":"(value : Bytes) : Bytes","args_html":"(value : Bytes) : Bytes","location":{"filename":"src/lucky/support/message_encryptor.cr","line_number":46,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_encryptor.cr#L46"},"def":{"name":"decrypt","args":[{"name":"value","external_name":"value","restriction":"Bytes"}],"return_type":"Bytes","visibility":"Public","body":"cipher = OpenSSL::Cipher.new(@cipher_algorithm)\ndata = value[0, value.size - @block_size]\niv = value[value.size - @block_size, @block_size]\n\ncipher.decrypt\nset_cipher_key(cipher)\ncipher.iv = iv\n\ndecrypted_data = IO::Memory.new\ndecrypted_data.write(cipher.update(data))\ndecrypted_data.write(cipher.final)\ndecrypted_data.to_slice\n"},"external_var":false},{"html_id":"encrypt(value):Bytes-instance-method","name":"encrypt","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : Bytes","args_html":"(value) : Bytes","location":{"filename":"src/lucky/support/message_encryptor.cr","line_number":30,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_encryptor.cr#L30"},"def":{"name":"encrypt","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"Bytes","visibility":"Public","body":"cipher = OpenSSL::Cipher.new(@cipher_algorithm)\ncipher.encrypt\nset_cipher_key(cipher)\n\n\niv = cipher.random_iv\n\nencrypted_data = IO::Memory.new\nencrypted_data.write(cipher.update(value))\nencrypted_data.write(cipher.final)\nencrypted_data.write(iv)\n\nencrypted_data.to_slice\n"},"external_var":false},{"html_id":"encrypt_and_sign(value:Slice(UInt8)):String-instance-method","name":"encrypt_and_sign","doc":"Encrypt and sign a message. We need to sign the message in order to avoid\npadding attacks. Reference: http://www.limited-entropy.com/padding-oracle-attacks.","summary":"<p>Encrypt and sign a message.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Slice(UInt8)"}],"args_string":"(value : Slice(UInt8)) : String","args_html":"(value : Slice(UInt8)) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/support/message_encryptor.cr","line_number":16,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_encryptor.cr#L16"},"def":{"name":"encrypt_and_sign","args":[{"name":"value","external_name":"value","restriction":"Slice(UInt8)"}],"return_type":"String","visibility":"Public","body":"verifier.generate(encrypt(value))"},"external_var":false},{"html_id":"encrypt_and_sign(value:String):String-instance-method","name":"encrypt_and_sign","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : String","args_html":"(value : <a href=\"../String.html\">String</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/support/message_encryptor.cr","line_number":20,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_encryptor.cr#L20"},"def":{"name":"encrypt_and_sign","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"String","visibility":"Public","body":"encrypt_and_sign(value.to_slice)"},"external_var":false},{"html_id":"verifier:MessageVerifier-instance-method","name":"verifier","abstract":false,"location":{"filename":"src/lucky/support/message_encryptor.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_encryptor.cr#L7"},"def":{"name":"verifier","return_type":"MessageVerifier","visibility":"Public","body":"@verifier"},"external_var":false},{"html_id":"verify_and_decrypt(value:String):Bytes-instance-method","name":"verify_and_decrypt","doc":"Verify and Decrypt a message. We need to verify the message in order to\navoid padding attacks. Reference: http://www.limited-entropy.com/padding-oracle-attacks.","summary":"<p>Verify and Decrypt a message.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : Bytes","args_html":"(value : <a href=\"../String.html\">String</a>) : Bytes","location":{"filename":"src/lucky/support/message_encryptor.cr","line_number":26,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_encryptor.cr#L26"},"def":{"name":"verify_and_decrypt","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Bytes","visibility":"Public","body":"decrypt(verifier.verify_raw(value))"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/MessageEncryptor/InvalidSecretKeyBase","path":"Lucky/MessageEncryptor/InvalidSecretKeyBase.html","kind":"class","full_name":"Lucky::MessageEncryptor::InvalidSecretKeyBase","name":"InvalidSecretKeyBase","abstract":false,"superclass":{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/support/message_encryptor.cr","line_number":84,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_encryptor.cr#L84"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/MessageEncryptor","kind":"class","full_name":"Lucky::MessageEncryptor","name":"MessageEncryptor"}}]},{"html_id":"lucky/Lucky/MessageVerifier","path":"Lucky/MessageVerifier.html","kind":"class","full_name":"Lucky::MessageVerifier","name":"MessageVerifier","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/support/message_verifier.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_verifier.cr#L5"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(secret:String,digest:Symbol=:sha1)-class-method","name":"new","abstract":false,"args":[{"name":"secret","external_name":"secret","restriction":"String"},{"name":"digest","default_value":":sha1","external_name":"digest","restriction":"::Symbol"}],"args_string":"(secret : String, digest : Symbol = :sha1)","args_html":"(secret : <a href=\"../String.html\">String</a>, digest : Symbol = <span class=\"n\">:sha1</span>)","location":{"filename":"src/lucky/support/message_verifier.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_verifier.cr#L6"},"def":{"name":"new","args":[{"name":"secret","external_name":"secret","restriction":"String"},{"name":"digest","default_value":":sha1","external_name":"digest","restriction":"::Symbol"}],"visibility":"Public","body":"_ = allocate\n_.initialize(secret, digest)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"generate(value:String|Bytes):String-instance-method","name":"generate","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | Bytes"}],"args_string":"(value : String | Bytes) : String","args_html":"(value : <a href=\"../String.html\">String</a> | Bytes) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/support/message_verifier.cr","line_number":45,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_verifier.cr#L45"},"def":{"name":"generate","args":[{"name":"value","external_name":"value","restriction":"String | Bytes"}],"return_type":"String","visibility":"Public","body":"data = encode(value)\nencode({data, generate_digest(data)}.to_json)\n"},"external_var":false},{"html_id":"valid_message?(data:String,digest:String):Bool-instance-method","name":"valid_message?","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"String"},{"name":"digest","external_name":"digest","restriction":"String"}],"args_string":"(data : String, digest : String) : Bool","args_html":"(data : <a href=\"../String.html\">String</a>, digest : <a href=\"../String.html\">String</a>) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/lucky/support/message_verifier.cr","line_number":9,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_verifier.cr#L9"},"def":{"name":"valid_message?","args":[{"name":"data","external_name":"data","restriction":"String"},{"name":"digest","external_name":"digest","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":"(data.size > 0 && digest.size > 0) && (Crypto::Subtle.constant_time_compare(digest, generate_digest(data)))"},"external_var":false},{"html_id":"verified(signed_message:String):String|Nil-instance-method","name":"verified","abstract":false,"args":[{"name":"signed_message","external_name":"signed_message","restriction":"String"}],"args_string":"(signed_message : String) : String | Nil","args_html":"(signed_message : <a href=\"../String.html\">String</a>) : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/support/message_verifier.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_verifier.cr#L13"},"def":{"name":"verified","args":[{"name":"signed_message","external_name":"signed_message","restriction":"String"}],"return_type":"String | ::Nil","visibility":"Public","body":"begin\n  json_data = ::Base64.decode_string(signed_message)\n  data, digest = Tuple(String, String).from_json(json_data)\n\n  if valid_message?(data.to_s, digest.to_s)\n    String.new(decode(data.to_s))\n  end\nrescue e : Base64::Error | JSON::ParseException\n  nil\nend"},"external_var":false},{"html_id":"verify(signed_message:String):String-instance-method","name":"verify","abstract":false,"args":[{"name":"signed_message","external_name":"signed_message","restriction":"String"}],"args_string":"(signed_message : String) : String","args_html":"(signed_message : <a href=\"../String.html\">String</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/support/message_verifier.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_verifier.cr#L24"},"def":{"name":"verify","args":[{"name":"signed_message","external_name":"signed_message","restriction":"String"}],"return_type":"String","visibility":"Public","body":"(verified(signed_message)) || (raise(InvalidSignatureError.new))"},"external_var":false},{"html_id":"verify_raw(signed_message:String):Bytes-instance-method","name":"verify_raw","abstract":false,"args":[{"name":"signed_message","external_name":"signed_message","restriction":"String"}],"args_string":"(signed_message : String) : Bytes","args_html":"(signed_message : <a href=\"../String.html\">String</a>) : Bytes","location":{"filename":"src/lucky/support/message_verifier.cr","line_number":28,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/support/message_verifier.cr#L28"},"def":{"name":"verify_raw","args":[{"name":"signed_message","external_name":"signed_message","restriction":"String"}],"return_type":"Bytes","visibility":"Public","body":"begin\n  json_data = ::Base64.decode_string(signed_message)\n  data, digest = Tuple(String, String).from_json(json_data)\n\n  if (data && digest).nil?\n    raise(InvalidSignatureError.new)\n  end\n\n  if valid_message?(data.to_s, digest.to_s)\n    decode(data.to_s)\n  else\n    raise(InvalidSignatureError.new)\n  end\nrescue e : Base64::Error | JSON::ParseException\n  raise(InvalidSignatureError.new)\nend"},"external_var":false}]},{"html_id":"lucky/Lucky/MissingFileError","path":"Lucky/MissingFileError.html","kind":"class","full_name":"Lucky::MissingFileError","name":"MissingFileError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":214,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L214"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(path:String)-class-method","name":"new","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String)","args_html":"(path : <a href=\"../String.html\">String</a>)","location":{"filename":"src/lucky/errors.cr","line_number":217,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L217"},"def":{"name":"new","args":[{"name":"path","external_name":"path","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"message:String-instance-method","name":"message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":220,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L220"},"def":{"name":"message","return_type":"String","visibility":"Public","body":"\"Cannot read file #{path}\""},"external_var":false},{"html_id":"path:String-instance-method","name":"path","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":215,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L215"},"def":{"name":"path","visibility":"Public","body":"@path"},"external_var":false}]},{"html_id":"lucky/Lucky/MissingNestedParamError","path":"Lucky/MissingNestedParamError.html","kind":"class","full_name":"Lucky::MissingNestedParamError","name":"MissingNestedParamError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"},{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":193,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L193"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(nested_key:String|Symbol)-class-method","name":"new","abstract":false,"args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"args_string":"(nested_key : String | Symbol)","args_html":"(nested_key : <a href=\"../String.html\">String</a> | Symbol)","location":{"filename":"src/lucky/errors.cr","line_number":198,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L198"},"def":{"name":"new","args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"visibility":"Public","body":"_ = allocate\n_.initialize(nested_key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"message:String-instance-method","name":"message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":201,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L201"},"def":{"name":"message","return_type":"String","visibility":"Public","body":"\"Missing param key: '#{nested_key}'\""},"external_var":false},{"html_id":"nested_key:String|Symbol-instance-method","name":"nested_key","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":196,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L196"},"def":{"name":"nested_key","visibility":"Public","body":"@nested_key"},"external_var":false},{"html_id":"renderable_message:String-instance-method","name":"renderable_message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":209,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L209"},"def":{"name":"renderable_message","return_type":"String","visibility":"Public","body":"message"},"external_var":false},{"html_id":"renderable_status:Int32-instance-method","name":"renderable_status","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":205,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L205"},"def":{"name":"renderable_status","return_type":"Int32","visibility":"Public","body":"400"},"external_var":false}]},{"html_id":"lucky/Lucky/MissingParamError","path":"Lucky/MissingParamError.html","kind":"class","full_name":"Lucky::MissingParamError","name":"MissingParamError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"},{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":172,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L172"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(param_name:String)-class-method","name":"new","abstract":false,"args":[{"name":"param_name","external_name":"param_name","restriction":"String"}],"args_string":"(param_name : String)","args_html":"(param_name : <a href=\"../String.html\">String</a>)","location":{"filename":"src/lucky/errors.cr","line_number":177,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L177"},"def":{"name":"new","args":[{"name":"param_name","external_name":"param_name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(param_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"message:String-instance-method","name":"message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":180,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L180"},"def":{"name":"message","return_type":"String","visibility":"Public","body":"\"Missing parameter: '#{param_name}'\""},"external_var":false},{"html_id":"param_name:String-instance-method","name":"param_name","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":175,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L175"},"def":{"name":"param_name","visibility":"Public","body":"@param_name"},"external_var":false},{"html_id":"renderable_message:String-instance-method","name":"renderable_message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":188,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L188"},"def":{"name":"renderable_message","return_type":"String","visibility":"Public","body":"message"},"external_var":false},{"html_id":"renderable_status:Int32-instance-method","name":"renderable_status","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":184,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L184"},"def":{"name":"renderable_status","return_type":"Int32","visibility":"Public","body":"400"},"external_var":false}]},{"html_id":"lucky/Lucky/MissingRateLimitIdentifier","path":"Lucky/MissingRateLimitIdentifier.html","kind":"class","full_name":"Lucky::MissingRateLimitIdentifier","name":"MissingRateLimitIdentifier","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":259,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L259"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"}},{"html_id":"lucky/Lucky/MountComponent","path":"Lucky/MountComponent.html","kind":"module","full_name":"Lucky::MountComponent","name":"MountComponent","abstract":false,"locations":[{"filename":"src/lucky/mount_component.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/mount_component.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"mount(component:Lucky::BaseComponent.class,*args,**named_args):Nil-instance-method","name":"mount","doc":"Appends the `component` to the view.\n\nWhen `Lucky::HTMLPage.settings.render_component_comments` is\nset to `true`, it will render HTML comments showing where the component\nstarts and ends.\n\n```\nmount(MyComponent)\nmount(MyComponent, with_args: 123)\n```","summary":"<p>Appends the <code>component</code> to the view.</p>","abstract":false,"args":[{"name":"component","external_name":"component","restriction":"Lucky::BaseComponent.class"},{"name":"args","external_name":"args","restriction":""}],"args_string":"(component : Lucky::BaseComponent.class, *args, **named_args) : Nil","args_html":"(component : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">BaseComponent</span>.<span class=\"k\">class</span>, *args, **named_args) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/mount_component.cr","line_number":12,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/mount_component.cr#L12"},"def":{"name":"mount","args":[{"name":"component","external_name":"component","restriction":"Lucky::BaseComponent.class"},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"return_type":"Nil","visibility":"Public","body":"print_component_comment(component) do\n  (((component.new(*args, **named_args)).view(view)).context(@context)).render\nend"},"external_var":false},{"html_id":"mount(component:Lucky::BaseComponent.class,*args,**named_args,&):Nil-instance-method","name":"mount","doc":"Appends the `component` to the view. Takes a block, and yields the\nargs passed to the component.\n\nWhen `Lucky::HTMLPage.settings.render_component_comments` is\nset to `true`, it will render HTML comments showing where the component\nstarts and ends.\n\n```\nmount(MyComponent, name: \"Jane\") do |name|\n  text name.upcase\nend\n```","summary":"<p>Appends the <code>component</code> to the view.</p>","abstract":false,"args":[{"name":"component","external_name":"component","restriction":"Lucky::BaseComponent.class"},{"name":"args","external_name":"args","restriction":""}],"args_string":"(component : Lucky::BaseComponent.class, *args, **named_args, &) : Nil","args_html":"(component : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">BaseComponent</span>.<span class=\"k\">class</span>, *args, **named_args, &) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/mount_component.cr","line_number":30,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/mount_component.cr#L30"},"def":{"name":"mount","args":[{"name":"component","external_name":"component","restriction":"Lucky::BaseComponent.class"},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arity":1,"return_type":"Nil","visibility":"Public","body":"print_component_comment(component) do\n  (((component.new(*args, **named_args)).view(view)).context(@context)).render do |*yield_args|\n    yield *yield_args\n  end\nend"},"external_var":false},{"html_id":"mount_instance(component:Lucky::BaseComponent):Nil-instance-method","name":"mount_instance","doc":"Appends the `component` to the view.\nThe `component` is a previously initialized instance of a component.\n\nWhen `Lucky::HTMLPage.settings.render_component_comments` is\nset to `true`, it will render HTML comments showing where the component\nstarts and ends.\n\n```\ncomponent = MyComponent.new(name: \"Jane\")\nmount_instance(component)\n```","summary":"<p>Appends the <code>component</code> to the view.</p>","abstract":false,"args":[{"name":"component","external_name":"component","restriction":"Lucky::BaseComponent"}],"args_string":"(component : Lucky::BaseComponent) : Nil","args_html":"(component : <a href=\"../Lucky/BaseComponent.html\">Lucky::BaseComponent</a>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/mount_component.cr","line_number":101,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/mount_component.cr#L101"},"def":{"name":"mount_instance","args":[{"name":"component","external_name":"component","restriction":"Lucky::BaseComponent"}],"return_type":"Nil","visibility":"Public","body":"print_component_comment(component.class) do\n  ((component.view(view)).context(@context)).render\nend"},"external_var":false},{"html_id":"mount_instance(component:Lucky::BaseComponent,&):Nil-instance-method","name":"mount_instance","doc":"Appends the `component` to the view. Takes a block, and yields the\nargs passed to the component.\nThe `component` is a previously initialized instance of a component.\n\nWhen `Lucky::HTMLPage.settings.render_component_comments` is\nset to `true`, it will render HTML comments showing where the component\nstarts and ends.\n\n```\ncomponent = MyComponent.new(name: \"Jane\")\nmount_instance(component) do |name|\n  text name.upcase\nend\n```","summary":"<p>Appends the <code>component</code> to the view.</p>","abstract":false,"args":[{"name":"component","external_name":"component","restriction":"Lucky::BaseComponent"}],"args_string":"(component : Lucky::BaseComponent, &) : Nil","args_html":"(component : <a href=\"../Lucky/BaseComponent.html\">Lucky::BaseComponent</a>, &) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/mount_component.cr","line_number":121,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/mount_component.cr#L121"},"def":{"name":"mount_instance","args":[{"name":"component","external_name":"component","restriction":"Lucky::BaseComponent"}],"yields":1,"block_arity":1,"return_type":"Nil","visibility":"Public","body":"print_component_comment(component.class) do\n  ((component.view(view)).context(@context)).render do |*yield_args|\n    yield *yield_args\n  end\nend"},"external_var":false}]},{"html_id":"lucky/Lucky/NotAcceptableError","path":"Lucky/NotAcceptableError.html","kind":"class","full_name":"Lucky::NotAcceptableError","name":"NotAcceptableError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"},{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":69,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L69"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(request:HTTP::Request,action_name:String,format:Symbol,accepted_formats:Array(Symbol))-class-method","name":"new","abstract":false,"args":[{"name":"request","external_name":"request","restriction":"HTTP::Request"},{"name":"action_name","external_name":"action_name","restriction":"String"},{"name":"format","external_name":"format","restriction":"Symbol"},{"name":"accepted_formats","external_name":"accepted_formats","restriction":"Array(Symbol)"}],"args_string":"(request : HTTP::Request, action_name : String, format : Symbol, accepted_formats : Array(Symbol))","args_html":"(request : <a href=\"../HTTP/Request.html\">HTTP::Request</a>, action_name : <a href=\"../String.html\">String</a>, format : Symbol, accepted_formats : Array(Symbol))","location":{"filename":"src/lucky/errors.cr","line_number":74,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L74"},"def":{"name":"new","args":[{"name":"request","external_name":"request","restriction":"HTTP::Request"},{"name":"action_name","external_name":"action_name","restriction":"String"},{"name":"format","external_name":"format","restriction":"Symbol"},{"name":"accepted_formats","external_name":"accepted_formats","restriction":"Array(Symbol)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(request, action_name, format, accepted_formats)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"renderable_message:String-instance-method","name":"renderable_message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":93,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L93"},"def":{"name":"renderable_message","return_type":"String","visibility":"Public","body":"\"Accept header '#{request.headers[\"Accept\"]?}' is not accepted.\""},"external_var":false},{"html_id":"renderable_status:Int32-instance-method","name":"renderable_status","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":89,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L89"},"def":{"name":"renderable_status","return_type":"Int32","visibility":"Public","body":"406"},"external_var":false},{"html_id":"request:HTTP::Request-instance-method","name":"request","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":72,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L72"},"def":{"name":"request","visibility":"Public","body":"@request"},"external_var":false}]},{"html_id":"lucky/Lucky/NumberToCurrency","path":"Lucky/NumberToCurrency.html","kind":"module","full_name":"Lucky::NumberToCurrency","name":"NumberToCurrency","abstract":false,"locations":[{"filename":"src/lucky/page_helpers/number_to_currency.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/number_to_currency.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_DELIMITER","name":"DEFAULT_DELIMITER","value":"\",\""},{"id":"DEFAULT_DELIMITER_REGEX","name":"DEFAULT_DELIMITER_REGEX","value":"/(\\d)(?=(\\d\\d\\d)+(?!\\d))/"},{"id":"DEFAULT_FORMAT","name":"DEFAULT_FORMAT","value":"\"%u%n\""},{"id":"DEFAULT_PRECISION","name":"DEFAULT_PRECISION","value":"2"},{"id":"DEFAULT_SEPARATOR","name":"DEFAULT_SEPARATOR","value":"\".\""},{"id":"DEFAULT_UNIT","name":"DEFAULT_UNIT","value":"\"$\""}],"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"number_to_currency(value:Float|Int32|String,precision:Int32=DEFAULT_PRECISION,unit:String=DEFAULT_UNIT,separator:String=DEFAULT_SEPARATOR,delimiter:String=DEFAULT_DELIMITER,delimiter_pattern:Regex=DEFAULT_DELIMITER_REGEX,format:String=DEFAULT_FORMAT,negative_format:String=DEFAULT_FORMAT):String-instance-method","name":"number_to_currency","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Float | Int32 | String"},{"name":"precision","default_value":"DEFAULT_PRECISION","external_name":"precision","restriction":"Int32"},{"name":"unit","default_value":"DEFAULT_UNIT","external_name":"unit","restriction":"String"},{"name":"separator","default_value":"DEFAULT_SEPARATOR","external_name":"separator","restriction":"String"},{"name":"delimiter","default_value":"DEFAULT_DELIMITER","external_name":"delimiter","restriction":"String"},{"name":"delimiter_pattern","default_value":"DEFAULT_DELIMITER_REGEX","external_name":"delimiter_pattern","restriction":"Regex"},{"name":"format","default_value":"DEFAULT_FORMAT","external_name":"format","restriction":"String"},{"name":"negative_format","default_value":"DEFAULT_FORMAT","external_name":"negative_format","restriction":"String"}],"args_string":"(value : Float | Int32 | String, precision : Int32 = DEFAULT_PRECISION, unit : String = DEFAULT_UNIT, separator : String = DEFAULT_SEPARATOR, delimiter : String = DEFAULT_DELIMITER, delimiter_pattern : Regex = DEFAULT_DELIMITER_REGEX, format : String = DEFAULT_FORMAT, negative_format : String = DEFAULT_FORMAT) : String","args_html":"(value : Float | <a href=\"../Int32.html\">Int32</a> | <a href=\"../String.html\">String</a>, precision : <a href=\"../Int32.html\">Int32</a> = <span class=\"t\">DEFAULT_PRECISION</span>, unit : <a href=\"../String.html\">String</a> = <span class=\"t\">DEFAULT_UNIT</span>, separator : <a href=\"../String.html\">String</a> = <span class=\"t\">DEFAULT_SEPARATOR</span>, delimiter : <a href=\"../String.html\">String</a> = <span class=\"t\">DEFAULT_DELIMITER</span>, delimiter_pattern : Regex = <span class=\"t\">DEFAULT_DELIMITER_REGEX</span>, format : <a href=\"../String.html\">String</a> = <span class=\"t\">DEFAULT_FORMAT</span>, negative_format : <a href=\"../String.html\">String</a> = <span class=\"t\">DEFAULT_FORMAT</span>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/page_helpers/number_to_currency.cr","line_number":9,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/number_to_currency.cr#L9"},"def":{"name":"number_to_currency","args":[{"name":"value","external_name":"value","restriction":"Float | Int32 | String"},{"name":"precision","default_value":"DEFAULT_PRECISION","external_name":"precision","restriction":"Int32"},{"name":"unit","default_value":"DEFAULT_UNIT","external_name":"unit","restriction":"String"},{"name":"separator","default_value":"DEFAULT_SEPARATOR","external_name":"separator","restriction":"String"},{"name":"delimiter","default_value":"DEFAULT_DELIMITER","external_name":"delimiter","restriction":"String"},{"name":"delimiter_pattern","default_value":"DEFAULT_DELIMITER_REGEX","external_name":"delimiter_pattern","restriction":"Regex"},{"name":"format","default_value":"DEFAULT_FORMAT","external_name":"format","restriction":"String"},{"name":"negative_format","default_value":"DEFAULT_FORMAT","external_name":"negative_format","restriction":"String"}],"return_type":"String","visibility":"Public","body":"value = value.to_s\n\nif value.to_f.sign == -1\n  if negative_format != DEFAULT_FORMAT\n    format = negative_format\n  end\n  value = value.to_f.abs.to_s\nend\n\nvalue = \"%.#{precision}f\" % value\n\nleft, right = value.split(\".\")\nleft = left.gsub(delimiter_pattern) do |digit_to_delimit|\n  \"#{digit_to_delimit}#{delimiter}\"\nend\n\nnumber = \"#{left}#{separator}#{right}\"\n\n(format.gsub(\"%n\", number)).gsub(\"%u\", unit)\n"},"external_var":false}]},{"html_id":"lucky/Lucky/Paginator","path":"Lucky/Paginator.html","kind":"class","full_name":"Lucky::Paginator","name":"Paginator","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/paginator/paginator.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(page:Int32,per_page:Int32,item_count:Int32|Int64,full_path:String)-class-method","name":"new","abstract":false,"args":[{"name":"page","external_name":"page","restriction":"::Int32"},{"name":"per_page","external_name":"per_page","restriction":"::Int32"},{"name":"item_count","external_name":"item_count","restriction":"::Int32 | ::Int64"},{"name":"full_path","external_name":"full_path","restriction":"::String"}],"args_string":"(page : Int32, per_page : Int32, item_count : Int32 | Int64, full_path : String)","args_html":"(page : <a href=\"../Int32.html\">Int32</a>, per_page : <a href=\"../Int32.html\">Int32</a>, item_count : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Int64.html\">Int64</a>, full_path : <a href=\"../String.html\">String</a>)","location":{"filename":"src/lucky/paginator/paginator.cr","line_number":9,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L9"},"def":{"name":"new","args":[{"name":"page","external_name":"page","restriction":"::Int32"},{"name":"per_page","external_name":"per_page","restriction":"::Int32"},{"name":"item_count","external_name":"item_count","restriction":"::Int32 | ::Int64"},{"name":"full_path","external_name":"full_path","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(page, per_page, item_count, full_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"first_page?:Bool-instance-method","name":"first_page?","doc":"Returns `true` if the current `page` is the first one.","summary":"<p>Returns <code>true</code> if the current <code><a href=\"../Lucky/Paginator.html#page%3AInt32-instance-method\">#page</a></code> is the first one.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":42,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L42"},"def":{"name":"first_page?","return_type":"Bool","visibility":"Public","body":"page == 1"},"external_var":false},{"html_id":"full_path:String-instance-method","name":"full_path","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L5"},"def":{"name":"full_path","return_type":"String","visibility":"Public","body":"@full_path"},"external_var":false},{"html_id":"item_count:Int32|Int64-instance-method","name":"item_count","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L4"},"def":{"name":"item_count","return_type":"Int32 | Int64","visibility":"Public","body":"@item_count"},"external_var":false},{"html_id":"item_range:Range-instance-method","name":"item_range","doc":"Returns the `Range` of items on this page.\n\nFor example if you have 50 records, showing 20 per page, and\nyou are on the 2nd page this method will return a range of 21-40.\n\nYou can get the beginning and end by calling `begin` or `end` on the\nreturned `Range`.","summary":"<p>Returns the <code>Range</code> of items on this page.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":58,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L58"},"def":{"name":"item_range","return_type":"Range","visibility":"Public","body":"starting_item_number = ((page - 1) * per_page) + 1\nending_item_number = [((starting_item_number + per_page) - 1), item_count].min\nRange.new(starting_item_number, ending_item_number)\n"},"external_var":false},{"html_id":"last_page?:Bool-instance-method","name":"last_page?","doc":"Returns `true` if current `page` is the last one.","summary":"<p>Returns <code>true</code> if current <code><a href=\"../Lucky/Paginator.html#page%3AInt32-instance-method\">#page</a></code> is the last one.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":37,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L37"},"def":{"name":"last_page?","return_type":"Bool","visibility":"Public","body":"page == total"},"external_var":false},{"html_id":"next_page:Int32|Nil-instance-method","name":"next_page","doc":"Returns the next page number or nil if the current page is the last one.","summary":"<p>Returns the next page number or nil if the current page is the last one.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":70,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L70"},"def":{"name":"next_page","return_type":"Int32 | ::Nil","visibility":"Public","body":"if last_page? || overflowed?\nelse\n  page + 1\nend"},"external_var":false},{"html_id":"offset:Int32-instance-method","name":"offset","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":27,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L27"},"def":{"name":"offset","return_type":"Int32","visibility":"Public","body":"per_page * (page - 1)"},"external_var":false},{"html_id":"one_page?:Bool-instance-method","name":"one_page?","doc":"Returns `true` if there is just one page.","summary":"<p>Returns <code>true</code> if there is just one page.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":23,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L23"},"def":{"name":"one_page?","return_type":"Bool","visibility":"Public","body":"total == 1"},"external_var":false},{"html_id":"overflowed?:Bool-instance-method","name":"overflowed?","doc":"Returns `true` if the current `page` is past the last page.","summary":"<p>Returns <code>true</code> if the current <code><a href=\"../Lucky/Paginator.html#page%3AInt32-instance-method\">#page</a></code> is past the last page.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":47,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L47"},"def":{"name":"overflowed?","return_type":"Bool","visibility":"Public","body":"page > total"},"external_var":false},{"html_id":"page:Int32-instance-method","name":"page","doc":"Returns the current page. Return `1` if the passed in `page` is lower than `1`.","summary":"<p>Returns the current page.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L13"},"def":{"name":"page","return_type":"Int32","visibility":"Public","body":"if @page < 1\n  @page = 1\nelse\n  @page\nend"},"external_var":false},{"html_id":"path_to_next:String|Nil-instance-method","name":"path_to_next","doc":"Returns the path with a 'page' query param for the previous page.\n\nReturn nil if there is no previous page","summary":"<p>Returns the path with a 'page' query param for the previous page.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":86,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L86"},"def":{"name":"path_to_next","return_type":"String | ::Nil","visibility":"Public","body":"if page_number = next_page\n  path_to_page(page_number)\nend"},"external_var":false},{"html_id":"path_to_page(page_number:Int):String-instance-method","name":"path_to_page","doc":"Generate a page with the 'page' query param set to the passed in `page_number`.\n\n## Examples\n\n```\npages = Paginator.new(\n  page: 1,\n  per_page: 25,\n  item_count: 70,\n  full_path: \"/comments\"\n)\npages.path_to_page(2) # \"/comments?page=2\"\n```","summary":"<p>Generate a page with the 'page' query param set to the passed in <code>page_number</code>.</p>","abstract":false,"args":[{"name":"page_number","external_name":"page_number","restriction":"Int"}],"args_string":"(page_number : Int) : String","args_html":"(page_number : Int) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/paginator/paginator.cr","line_number":105,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L105"},"def":{"name":"path_to_page","args":[{"name":"page_number","external_name":"page_number","restriction":"Int"}],"return_type":"String","visibility":"Public","body":"uri = URI.parse(full_path)\nquery_params = uri.query_params\nquery_params[\"page\"] = page_number.to_s\nuri.query = query_params.to_s\nuri.to_s\n"},"external_var":false},{"html_id":"path_to_previous:String|Nil-instance-method","name":"path_to_previous","doc":"Returns the path with a 'page' query param for the previous page.\n\nReturn nil if there is no previous page","summary":"<p>Returns the path with a 'page' query param for the previous page.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":77,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L77"},"def":{"name":"path_to_previous","return_type":"String | ::Nil","visibility":"Public","body":"if page_number = previous_page\n  path_to_page(page_number)\nend"},"external_var":false},{"html_id":"per_page:Int32-instance-method","name":"per_page","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L3"},"def":{"name":"per_page","return_type":"Int32","visibility":"Public","body":"@per_page"},"external_var":false},{"html_id":"previous_page:Int32|Nil-instance-method","name":"previous_page","doc":"Returns the previous page number or nil if the current page is the first one.","summary":"<p>Returns the previous page number or nil if the current page is the first one.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":65,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L65"},"def":{"name":"previous_page","return_type":"Int32 | ::Nil","visibility":"Public","body":"if first_page?\nelse\n  page - 1\nend"},"external_var":false},{"html_id":"series(beginbeginning:Int32=0,left_of_current:Int32=0,right_of_current:Int32=0,endending:Int32=0):Array(SeriesItem)-instance-method","name":"series","doc":"# The `series` method is smart and will not add gaps if there is no gap.\n# It will also not add items past the current page.\nseries = pages.series(begin: 6)\nseries # [1, 2, 3, 4, 5]\n```\n\nAs mentioned above the **actual** objects in the Array are made up of\n`Lucky::Paginator::Gap`, `Lucky::Paginator::Page`, and\n`Lucky::Paginator::CurrentPage` objects.\n\n```\npages.series(begin: 1, end: 1)\n# Returns:\n# [\n#   Lucky::Paginator::Page(1),\n#   Lucky::Paginator::Gap,\n#   Lucky::Paginator::CurrentPage(5),\n#   Lucky::Paginator::Gap,\n#   Lucky::Paginator::Page(10),\n# ]\n```\n\nThe `Page` and `CurrentPage` objects have a `number` and `path` method.\n`Page#number` returns the number of the page as an Int. The `Page#path` method\nReturn the path to the next page.\n\nThe `Gap` object has no methods or instance variables. It is there to\nrepresent a \"gap\" of pages.\n\nThese objects make it easy to use [method # overloading](https://crystal-lang.org/reference/syntax_and_semantics/overloading.html)\nor `is_a?` to determine how to render each item.\n\nHere's a quick example:\n\n```\npages.series(begin: 1, end: 1).each do |item|\n  case item\n  when Lucky::Paginator::CurrentPage | Lucky::Paginator::Page\n    pp! item.number # Int32 representing the page number\n    pp! item.path   # \"/items?page=2\"\n  when Lucky::Paginator::Gap\n    puts \"...\"\n  end\nend\n```\n\nOr use method overloading. This will show an example using Lucky's HTML methods:\n\n```\nclass PageNav < BaseComponent\n  needs pages : Lucky::Paginator\n\n  def render\n    pages.series(begin: 1, end: 1).each do |item|\n      page_item(item)\n    end\n  end\n\n  def page_item(page : Lucky::Paginator::CurrentPage)\n    # If it is the current page, just display text and no link\n    text page.number\n  end\n\n  def page_item(page : Lucky::Paginator::CurrentPage)\n    a page.number, href: page.path\n  end\n\n  def page_item(gap : Lucky::Paginator::Gap)\n    text \"..\"\n  end\nend\n```","summary":"<h1><a id=\"the-series-method-is-smart-and-will-not-add-gaps-if-there-is-no-gap.\" class=\"anchor\" href=\"#the-series-method-is-smart-and-will-not-add-gaps-if-there-is-no-gap.\">  <svg class=\"octicon-link\" aria-hidden=\"true\">\n    <use href=\"#octicon-link\"/>\n  </svg>\n</a>The <code><a href=\"../Lucky/Paginator.html#series%28beginbeginning%3AInt32%3D0%2Cleft_of_current%3AInt32%3D0%2Cright_of_current%3AInt32%3D0%2Cendending%3AInt32%3D0%29%3AArray%28SeriesItem%29-instance-method\">#series</a></code> method is smart and will not add gaps if there is no gap.</h1>","abstract":false,"args":[{"name":"beginning","default_value":"0","external_name":"begin","restriction":"Int32"},{"name":"left_of_current","default_value":"0","external_name":"left_of_current","restriction":"Int32"},{"name":"right_of_current","default_value":"0","external_name":"right_of_current","restriction":"Int32"},{"name":"ending","default_value":"0","external_name":"end","restriction":"Int32"}],"args_string":"(begin beginning : Int32 = 0, left_of_current : Int32 = 0, right_of_current : Int32 = 0, end ending : Int32 = 0) : Array(SeriesItem)","args_html":"(begin beginning : <a href=\"../Int32.html\">Int32</a> = <span class=\"n\">0</span>, left_of_current : <a href=\"../Int32.html\">Int32</a> = <span class=\"n\">0</span>, right_of_current : <a href=\"../Int32.html\">Int32</a> = <span class=\"n\">0</span>, end ending : <a href=\"../Int32.html\">Int32</a> = <span class=\"n\">0</span>) : Array(<a href=\"../Lucky/Paginator/SeriesItem.html\">SeriesItem</a>)","location":{"filename":"src/lucky/paginator/paginator.cr","line_number":213,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L213"},"def":{"name":"series","args":[{"name":"beginning","default_value":"0","external_name":"begin","restriction":"Int32"},{"name":"left_of_current","default_value":"0","external_name":"left_of_current","restriction":"Int32"},{"name":"right_of_current","default_value":"0","external_name":"right_of_current","restriction":"Int32"},{"name":"ending","default_value":"0","external_name":"end","restriction":"Int32"}],"return_type":"Array(SeriesItem)","visibility":"Public","body":"middle_pages = build_middle_of_series(left_of_current, right_of_current)\nbeginning_and_middle_pages = add_beginning_pages(middle_pages, beginning)\nadd_ending_pages(beginning_and_middle_pages, ending)\n"},"external_var":false},{"html_id":"total:Int64-instance-method","name":"total","doc":"Returns the total number of pages.","summary":"<p>Returns the total number of pages.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/paginator.cr","line_number":32,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L32"},"def":{"name":"total","return_type":"Int64","visibility":"Public","body":"(item_count / per_page).ceil.to_i64"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/Paginator/BackendHelpers","path":"Lucky/Paginator/BackendHelpers.html","kind":"module","full_name":"Lucky::Paginator::BackendHelpers","name":"BackendHelpers","abstract":false,"locations":[{"filename":"src/lucky/paginator/backend_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/backend_helpers.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/Paginator","kind":"class","full_name":"Lucky::Paginator","name":"Paginator"},"instance_methods":[{"html_id":"paginate_array(items:Array(T),per_page:Int32=paginator_per_page):Tuple(Paginator,Array(T))forallT-instance-method","name":"paginate_array","doc":"Call this in your actions to paginate an array.\n\nThis method will return a `Lucky::Paginator` object and the requested page\nof items.\n\n## Examples\n\n```\nclass ListItems::Index < BrowserAction\n  get \"/items\" do\n    # The 'Array' will just show items for the requested page\n    pages, items = paginate_array([1, 2, 3])\n    render IndexPage, pages: pages, items: items\n  end\nend\n\nclass Users::IndexPage < MainLayout\n  needs pages : Lucky::Paginator\n  needs items : Array(Int32)\n\n  def content\n    # Render pagination links for the 'items' Array\n    mount Lucky::Paginator::SimpleNav, @pages\n  end\nend\n```","summary":"<p>Call this in your actions to paginate an array.</p>","abstract":false,"args":[{"name":"items","external_name":"items","restriction":"Array(T)"},{"name":"per_page","default_value":"paginator_per_page","external_name":"per_page","restriction":"Int32"}],"args_string":"(items : Array(T), per_page : Int32 = paginator_per_page) : Tuple(Paginator, Array(T)) forall T","args_html":"(items : Array(T), per_page : <a href=\"../../Int32.html\">Int32</a> = paginator_per_page) : Tuple(<a href=\"../../Lucky/Paginator.html\">Paginator</a>, Array(T)) forall T","location":{"filename":"src/lucky/paginator/backend_helpers.cr","line_number":28,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/backend_helpers.cr#L28"},"def":{"name":"paginate_array","args":[{"name":"items","external_name":"items","restriction":"Array(T)"},{"name":"per_page","default_value":"paginator_per_page","external_name":"per_page","restriction":"Int32"}],"return_type":"Tuple(Paginator, Array(T))","visibility":"Public","body":"pages = Paginator.new(page: paginator_page, per_page: per_page, item_count: items.size, full_path: context.request.resource)\nif pages.overflowed?\n  return {pages, Array(T).new}\nend\n\nupdated_items = items[pages.offset...(pages.offset + pages.per_page)]\n{pages, updated_items}\n"},"external_var":false},{"html_id":"paginator_page:Int32-instance-method","name":"paginator_page","doc":"Returns the page that was request, or `1`\n\nBy default this method looks for a `page` param. It can be given as a\nquery param, or in the body. If no `page` param is given the page will be `1`.\n\nYou can override this method in your action in any way you'd like.\n\n## Example\n\n```\nabstract class ApiAction < Lucky::Action\n  include Lucky::Paginator::BackendHelpers\n\n  def paginator_page : Int32\n    # Will use the \"Page\" header or fallback to default if missing.\n    request.headers[\"Page\"]? || super\n  end\nend\n```","summary":"<p>Returns the page that was request, or <code>1</code></p>","abstract":false,"location":{"filename":"src/lucky/paginator/backend_helpers.cr","line_number":63,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/backend_helpers.cr#L63"},"def":{"name":"paginator_page","return_type":"Int32","visibility":"Public","body":"(params.get?(:page)).try(&.to_i) || 1"},"external_var":false},{"html_id":"paginator_per_page:Int32-instance-method","name":"paginator_per_page","doc":"The number of records to display per page. Defaults to `25`\n\nYou can override this in your actions\n\n## Example\n\n```\nabstract class BrowserAction < Lucky::Action\n  include Lucky::Paginator::BackendHelpers\n\n  # Set to a new static value\n  def paginator_per_page : Int32\n    50 # defaults to 25\n  end\n\n  # Or you could allow setting the number from a param\n  def paginator_per_page : Int32\n    params.get?(:per_page).try(&.to_i) || 25\n  end\nend\n```","summary":"<p>The number of records to display per page.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/backend_helpers.cr","line_number":88,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/backend_helpers.cr#L88"},"def":{"name":"paginator_per_page","return_type":"Int32","visibility":"Public","body":"25"},"external_var":false}]},{"html_id":"lucky/Lucky/Paginator/BootstrapNav","path":"Lucky/Paginator/BootstrapNav.html","kind":"class","full_name":"Lucky::Paginator::BootstrapNav","name":"BootstrapNav","abstract":false,"superclass":{"html_id":"lucky/Lucky/BaseComponent","kind":"class","full_name":"Lucky::BaseComponent","name":"BaseComponent"},"ancestors":[{"html_id":"lucky/Lucky/BaseComponent","kind":"class","full_name":"Lucky::BaseComponent","name":"BaseComponent"},{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"},{"html_id":"lucky/Lucky/SvgInliner","kind":"module","full_name":"Lucky::SvgInliner","name":"SvgInliner"},{"html_id":"lucky/Lucky/LiveReloadTag","kind":"module","full_name":"Lucky::LiveReloadTag","name":"LiveReloadTag"},{"html_id":"lucky/Lucky/TagDefaults","kind":"module","full_name":"Lucky::TagDefaults","name":"TagDefaults"},{"html_id":"lucky/Lucky/RenderIfDefined","kind":"module","full_name":"Lucky::RenderIfDefined","name":"RenderIfDefined"},{"html_id":"lucky/Lucky/HelpfulParagraphError","kind":"module","full_name":"Lucky::HelpfulParagraphError","name":"HelpfulParagraphError"},{"html_id":"lucky/Lucky/MountComponent","kind":"module","full_name":"Lucky::MountComponent","name":"MountComponent"},{"html_id":"lucky/Lucky/ForgeryProtectionHelpers","kind":"module","full_name":"Lucky::ForgeryProtectionHelpers","name":"ForgeryProtectionHelpers"},{"html_id":"lucky/Lucky/TimeHelpers","kind":"module","full_name":"Lucky::TimeHelpers","name":"TimeHelpers"},{"html_id":"lucky/Lucky/UrlHelpers","kind":"module","full_name":"Lucky::UrlHelpers","name":"UrlHelpers"},{"html_id":"lucky/Lucky/HTMLTextHelpers","kind":"module","full_name":"Lucky::HTMLTextHelpers","name":"HTMLTextHelpers"},{"html_id":"lucky/Lucky/TextHelpers","kind":"module","full_name":"Lucky::TextHelpers","name":"TextHelpers"},{"html_id":"lucky/Lucky/NumberToCurrency","kind":"module","full_name":"Lucky::NumberToCurrency","name":"NumberToCurrency"},{"html_id":"lucky/Lucky/AssetHelpers","kind":"module","full_name":"Lucky::AssetHelpers","name":"AssetHelpers"},{"html_id":"lucky/Lucky/Assignable","kind":"module","full_name":"Lucky::Assignable","name":"Assignable"},{"html_id":"lucky/Lucky/SpecialtyTags","kind":"module","full_name":"Lucky::SpecialtyTags","name":"SpecialtyTags"},{"html_id":"lucky/Lucky/FormHelpers","kind":"module","full_name":"Lucky::FormHelpers","name":"FormHelpers"},{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Lucky/LinkHelpers","kind":"module","full_name":"Lucky::LinkHelpers","name":"LinkHelpers"},{"html_id":"lucky/Lucky/CustomTags","kind":"module","full_name":"Lucky::CustomTags","name":"CustomTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"},{"html_id":"lucky/Lucky/BaseTags","kind":"module","full_name":"Lucky::BaseTags","name":"BaseTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/paginator/components/bootstrap_nav.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bootstrap_nav.cr#L4"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ASSIGNS","name":"ASSIGNS","value":"[pages : Lucky::Paginator] of Nil","doc":"Pagination component using Bootstrap styles\n\nhttps://getbootstrap.com/docs/4.0/components/pagination/","summary":"<p>Pagination component using Bootstrap styles</p>"}],"namespace":{"html_id":"lucky/Lucky/Paginator","kind":"class","full_name":"Lucky::Paginator","name":"Paginator"},"doc":"Pagination component using Bootstrap styles\n\nhttps://getbootstrap.com/docs/4.0/components/pagination/","summary":"<p>Pagination component using Bootstrap styles</p>","class_methods":[{"html_id":"file_location-class-method","name":"file_location","doc":"Returns the relative file location to the\nproject root. e.g. src/components/my_component.cr","summary":"<p>Returns the relative file location to the project root.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/components/bootstrap_nav.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bootstrap_nav.cr#L4"},"def":{"name":"file_location","visibility":"Public","body":"(\"/home/runner/work/lucky/lucky/src/lucky/paginator/components/bootstrap_nav.cr\".gsub(Dir.current, \"\")).byte_slice(1)"},"external_var":false}],"constructors":[{"html_id":"new(pages:Lucky::Paginator)-class-method","name":"new","doc":"Pagination component using Bootstrap styles\n\nhttps://getbootstrap.com/docs/4.0/components/pagination/","summary":"<p>Pagination component using Bootstrap styles</p>","abstract":false,"args":[{"name":"pages","external_name":"pages","restriction":"Lucky::Paginator"}],"args_string":"(pages : Lucky::Paginator)","args_html":"(pages : <a href=\"../../Lucky/Paginator.html\">Lucky::Paginator</a>)","def":{"name":"new","args":[{"name":"pages","external_name":"pages","restriction":"Lucky::Paginator"}],"visibility":"Public","body":"_ = allocate\n_.initialize(pages)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"next_link-instance-method","name":"next_link","abstract":false,"location":{"filename":"src/lucky/paginator/components/bootstrap_nav.cr","line_number":47,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bootstrap_nav.cr#L47"},"def":{"name":"next_link","visibility":"Public","body":"li(class: \"page-item #{if @pages.last_page?\n  \"disabled\"\nend}\") do\n  a(\"Next\", href: @pages.path_to_next.to_s, class: \"page-link\")\nend"},"external_var":false},{"html_id":"page_links-instance-method","name":"page_links","abstract":false,"location":{"filename":"src/lucky/paginator/components/bootstrap_nav.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bootstrap_nav.cr#L17"},"def":{"name":"page_links","visibility":"Public","body":"@pages.series(begin: 1, left_of_current: 1, right_of_current: 1, end: 1).each do |item|\n  render_page_item(item)\nend"},"external_var":false},{"html_id":"pages:Lucky::Paginator-instance-method","name":"pages","abstract":false,"def":{"name":"pages","visibility":"Public","body":"@pages"},"external_var":false},{"html_id":"previous_link-instance-method","name":"previous_link","abstract":false,"location":{"filename":"src/lucky/paginator/components/bootstrap_nav.cr","line_number":41,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bootstrap_nav.cr#L41"},"def":{"name":"previous_link","visibility":"Public","body":"li(class: \"page-item #{if @pages.first_page?\n  \"disabled\"\nend}\") do\n  a(\"Previous\", href: @pages.path_to_previous.to_s, class: \"page-link\")\nend"},"external_var":false},{"html_id":"render-instance-method","name":"render","abstract":false,"location":{"filename":"src/lucky/paginator/components/bootstrap_nav.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bootstrap_nav.cr#L7"},"def":{"name":"render","visibility":"Public","body":"nav(aria_label: \"pagination\", role: \"navigation\") do\n  ul(class: \"pagination\", aria_label: \"pagination\") do\n    previous_link\n    page_links\n    next_link\n  end\nend"},"external_var":false},{"html_id":"render_page_item(page:Lucky::Paginator::CurrentPage)-instance-method","name":"render_page_item","abstract":false,"args":[{"name":"page","external_name":"page","restriction":"Lucky::Paginator::CurrentPage"}],"args_string":"(page : Lucky::Paginator::CurrentPage)","args_html":"(page : <a href=\"../../Lucky/Paginator/CurrentPage.html\">Lucky::Paginator::CurrentPage</a>)","location":{"filename":"src/lucky/paginator/components/bootstrap_nav.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bootstrap_nav.cr#L29"},"def":{"name":"render_page_item","args":[{"name":"page","external_name":"page","restriction":"Lucky::Paginator::CurrentPage"}],"visibility":"Public","body":"li(class: \"page-item active disabled\") do\n  a(page.number, href: page.path, class: \"page-link\")\nend"},"external_var":false},{"html_id":"render_page_item(page:Lucky::Paginator::Page)-instance-method","name":"render_page_item","abstract":false,"args":[{"name":"page","external_name":"page","restriction":"Lucky::Paginator::Page"}],"args_string":"(page : Lucky::Paginator::Page)","args_html":"(page : <a href=\"../../Lucky/Paginator/Page.html\">Lucky::Paginator::Page</a>)","location":{"filename":"src/lucky/paginator/components/bootstrap_nav.cr","line_number":23,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bootstrap_nav.cr#L23"},"def":{"name":"render_page_item","args":[{"name":"page","external_name":"page","restriction":"Lucky::Paginator::Page"}],"visibility":"Public","body":"li(class: \"page-item\") do\n  a(page.number, href: page.path, class: \"page-link\")\nend"},"external_var":false},{"html_id":"render_page_item(gap:Lucky::Paginator::Gap)-instance-method","name":"render_page_item","abstract":false,"args":[{"name":"gap","external_name":"gap","restriction":"Lucky::Paginator::Gap"}],"args_string":"(gap : Lucky::Paginator::Gap)","args_html":"(gap : Lucky::Paginator::Gap)","location":{"filename":"src/lucky/paginator/components/bootstrap_nav.cr","line_number":35,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bootstrap_nav.cr#L35"},"def":{"name":"render_page_item","args":[{"name":"gap","external_name":"gap","restriction":"Lucky::Paginator::Gap"}],"visibility":"Public","body":"li(class: \"page-item\") do\n  a(class: \"page-link disabled\") do\n    raw(\"&hellip;\")\n  end\nend"},"external_var":false}]},{"html_id":"lucky/Lucky/Paginator/BulmaNav","path":"Lucky/Paginator/BulmaNav.html","kind":"class","full_name":"Lucky::Paginator::BulmaNav","name":"BulmaNav","abstract":false,"superclass":{"html_id":"lucky/Lucky/BaseComponent","kind":"class","full_name":"Lucky::BaseComponent","name":"BaseComponent"},"ancestors":[{"html_id":"lucky/Lucky/BaseComponent","kind":"class","full_name":"Lucky::BaseComponent","name":"BaseComponent"},{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"},{"html_id":"lucky/Lucky/SvgInliner","kind":"module","full_name":"Lucky::SvgInliner","name":"SvgInliner"},{"html_id":"lucky/Lucky/LiveReloadTag","kind":"module","full_name":"Lucky::LiveReloadTag","name":"LiveReloadTag"},{"html_id":"lucky/Lucky/TagDefaults","kind":"module","full_name":"Lucky::TagDefaults","name":"TagDefaults"},{"html_id":"lucky/Lucky/RenderIfDefined","kind":"module","full_name":"Lucky::RenderIfDefined","name":"RenderIfDefined"},{"html_id":"lucky/Lucky/HelpfulParagraphError","kind":"module","full_name":"Lucky::HelpfulParagraphError","name":"HelpfulParagraphError"},{"html_id":"lucky/Lucky/MountComponent","kind":"module","full_name":"Lucky::MountComponent","name":"MountComponent"},{"html_id":"lucky/Lucky/ForgeryProtectionHelpers","kind":"module","full_name":"Lucky::ForgeryProtectionHelpers","name":"ForgeryProtectionHelpers"},{"html_id":"lucky/Lucky/TimeHelpers","kind":"module","full_name":"Lucky::TimeHelpers","name":"TimeHelpers"},{"html_id":"lucky/Lucky/UrlHelpers","kind":"module","full_name":"Lucky::UrlHelpers","name":"UrlHelpers"},{"html_id":"lucky/Lucky/HTMLTextHelpers","kind":"module","full_name":"Lucky::HTMLTextHelpers","name":"HTMLTextHelpers"},{"html_id":"lucky/Lucky/TextHelpers","kind":"module","full_name":"Lucky::TextHelpers","name":"TextHelpers"},{"html_id":"lucky/Lucky/NumberToCurrency","kind":"module","full_name":"Lucky::NumberToCurrency","name":"NumberToCurrency"},{"html_id":"lucky/Lucky/AssetHelpers","kind":"module","full_name":"Lucky::AssetHelpers","name":"AssetHelpers"},{"html_id":"lucky/Lucky/Assignable","kind":"module","full_name":"Lucky::Assignable","name":"Assignable"},{"html_id":"lucky/Lucky/SpecialtyTags","kind":"module","full_name":"Lucky::SpecialtyTags","name":"SpecialtyTags"},{"html_id":"lucky/Lucky/FormHelpers","kind":"module","full_name":"Lucky::FormHelpers","name":"FormHelpers"},{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Lucky/LinkHelpers","kind":"module","full_name":"Lucky::LinkHelpers","name":"LinkHelpers"},{"html_id":"lucky/Lucky/CustomTags","kind":"module","full_name":"Lucky::CustomTags","name":"CustomTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"},{"html_id":"lucky/Lucky/BaseTags","kind":"module","full_name":"Lucky::BaseTags","name":"BaseTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/paginator/components/bulma_nav.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bulma_nav.cr#L4"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ASSIGNS","name":"ASSIGNS","value":"[pages : Lucky::Paginator] of Nil","doc":"Pagination component using Bulma Pagination styles\n\nhttps://bulma.io/documentation/components/pagination/","summary":"<p>Pagination component using Bulma Pagination styles</p>"}],"namespace":{"html_id":"lucky/Lucky/Paginator","kind":"class","full_name":"Lucky::Paginator","name":"Paginator"},"doc":"Pagination component using Bulma Pagination styles\n\nhttps://bulma.io/documentation/components/pagination/","summary":"<p>Pagination component using Bulma Pagination styles</p>","class_methods":[{"html_id":"file_location-class-method","name":"file_location","doc":"Returns the relative file location to the\nproject root. e.g. src/components/my_component.cr","summary":"<p>Returns the relative file location to the project root.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/components/bulma_nav.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bulma_nav.cr#L4"},"def":{"name":"file_location","visibility":"Public","body":"(\"/home/runner/work/lucky/lucky/src/lucky/paginator/components/bulma_nav.cr\".gsub(Dir.current, \"\")).byte_slice(1)"},"external_var":false}],"constructors":[{"html_id":"new(pages:Lucky::Paginator)-class-method","name":"new","doc":"Pagination component using Bulma Pagination styles\n\nhttps://bulma.io/documentation/components/pagination/","summary":"<p>Pagination component using Bulma Pagination styles</p>","abstract":false,"args":[{"name":"pages","external_name":"pages","restriction":"Lucky::Paginator"}],"args_string":"(pages : Lucky::Paginator)","args_html":"(pages : <a href=\"../../Lucky/Paginator.html\">Lucky::Paginator</a>)","def":{"name":"new","args":[{"name":"pages","external_name":"pages","restriction":"Lucky::Paginator"}],"visibility":"Public","body":"_ = allocate\n_.initialize(pages)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"next_link-instance-method","name":"next_link","abstract":false,"location":{"filename":"src/lucky/paginator/components/bulma_nav.cr","line_number":41,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bulma_nav.cr#L41"},"def":{"name":"next_link","visibility":"Public","body":"li do\n  a(\"Next\", href: @pages.path_to_next.to_s, class: \"pagination-next\")\nend"},"external_var":false},{"html_id":"page_links-instance-method","name":"page_links","abstract":false,"location":{"filename":"src/lucky/paginator/components/bulma_nav.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bulma_nav.cr#L17"},"def":{"name":"page_links","visibility":"Public","body":"@pages.series(begin: 1, left_of_current: 1, right_of_current: 1, end: 1).each do |item|\n  render_page_item(item)\nend"},"external_var":false},{"html_id":"pages:Lucky::Paginator-instance-method","name":"pages","abstract":false,"def":{"name":"pages","visibility":"Public","body":"@pages"},"external_var":false},{"html_id":"previous_link-instance-method","name":"previous_link","abstract":false,"location":{"filename":"src/lucky/paginator/components/bulma_nav.cr","line_number":37,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bulma_nav.cr#L37"},"def":{"name":"previous_link","visibility":"Public","body":"li do\n  a(\"Previous\", href: @pages.path_to_previous.to_s, class: \"pagination-previous\")\nend"},"external_var":false},{"html_id":"render-instance-method","name":"render","abstract":false,"location":{"filename":"src/lucky/paginator/components/bulma_nav.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bulma_nav.cr#L7"},"def":{"name":"render","visibility":"Public","body":"nav(aria_label: \"pagination\", class: \"pagination\", role: \"navigation\") do\n  ul(class: \"pagination-list\") do\n    previous_link\n    page_links\n    next_link\n  end\nend"},"external_var":false},{"html_id":"render_page_item(page:Lucky::Paginator::CurrentPage)-instance-method","name":"render_page_item","abstract":false,"args":[{"name":"page","external_name":"page","restriction":"Lucky::Paginator::CurrentPage"}],"args_string":"(page : Lucky::Paginator::CurrentPage)","args_html":"(page : <a href=\"../../Lucky/Paginator/CurrentPage.html\">Lucky::Paginator::CurrentPage</a>)","location":{"filename":"src/lucky/paginator/components/bulma_nav.cr","line_number":27,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bulma_nav.cr#L27"},"def":{"name":"render_page_item","args":[{"name":"page","external_name":"page","restriction":"Lucky::Paginator::CurrentPage"}],"visibility":"Public","body":"li do\n  a(page.number, href: page.path, class: \"pagination-link is-current\")\nend"},"external_var":false},{"html_id":"render_page_item(page:Lucky::Paginator::Page)-instance-method","name":"render_page_item","abstract":false,"args":[{"name":"page","external_name":"page","restriction":"Lucky::Paginator::Page"}],"args_string":"(page : Lucky::Paginator::Page)","args_html":"(page : <a href=\"../../Lucky/Paginator/Page.html\">Lucky::Paginator::Page</a>)","location":{"filename":"src/lucky/paginator/components/bulma_nav.cr","line_number":23,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bulma_nav.cr#L23"},"def":{"name":"render_page_item","args":[{"name":"page","external_name":"page","restriction":"Lucky::Paginator::Page"}],"visibility":"Public","body":"li do\n  a(page.number, href: page.path, class: \"pagination-link\")\nend"},"external_var":false},{"html_id":"render_page_item(gap:Lucky::Paginator::Gap)-instance-method","name":"render_page_item","abstract":false,"args":[{"name":"gap","external_name":"gap","restriction":"Lucky::Paginator::Gap"}],"args_string":"(gap : Lucky::Paginator::Gap)","args_html":"(gap : Lucky::Paginator::Gap)","location":{"filename":"src/lucky/paginator/components/bulma_nav.cr","line_number":31,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/bulma_nav.cr#L31"},"def":{"name":"render_page_item","args":[{"name":"gap","external_name":"gap","restriction":"Lucky::Paginator::Gap"}],"visibility":"Public","body":"li do\n  span(class: \"pagination-ellipsis\") do\n    raw(\"&hellip;\")\n  end\nend"},"external_var":false}]},{"html_id":"lucky/Lucky/Paginator/CurrentPage","path":"Lucky/Paginator/CurrentPage.html","kind":"class","full_name":"Lucky::Paginator::CurrentPage","name":"CurrentPage","abstract":false,"superclass":{"html_id":"lucky/Lucky/Paginator/Page","kind":"class","full_name":"Lucky::Paginator::Page","name":"Page"},"ancestors":[{"html_id":"lucky/Lucky/Paginator/Page","kind":"class","full_name":"Lucky::Paginator::Page","name":"Page"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/paginator/current_page.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/current_page.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/Paginator","kind":"class","full_name":"Lucky::Paginator","name":"Paginator"}},{"html_id":"lucky/Lucky/Paginator/Page","path":"Lucky/Paginator/Page.html","kind":"class","full_name":"Lucky::Paginator::Page","name":"Page","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/paginator/page.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/page.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"lucky/Lucky/Paginator/CurrentPage","kind":"class","full_name":"Lucky::Paginator::CurrentPage","name":"CurrentPage"}],"namespace":{"html_id":"lucky/Lucky/Paginator","kind":"class","full_name":"Lucky::Paginator","name":"Paginator"},"constructors":[{"html_id":"new(pages:Lucky::Paginator,number:Int32|Int64)-class-method","name":"new","abstract":false,"args":[{"name":"pages","external_name":"pages","restriction":"Lucky::Paginator"},{"name":"number","external_name":"number","restriction":"Int32 | Int64"}],"args_string":"(pages : Lucky::Paginator, number : Int32 | Int64)","args_html":"(pages : <a href=\"../../Lucky/Paginator.html\">Lucky::Paginator</a>, number : <a href=\"../../Int32.html\">Int32</a> | <a href=\"../../Int64.html\">Int64</a>)","location":{"filename":"src/lucky/paginator/page.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/page.cr#L5"},"def":{"name":"new","args":[{"name":"pages","external_name":"pages","restriction":"Lucky::Paginator"},{"name":"number","external_name":"number","restriction":"Int32 | Int64"}],"visibility":"Public","body":"_ = allocate\n_.initialize(pages, number)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"==(other:self)-instance-method","name":"==","doc":"Returns `true` if this reference is the same as *other*. Invokes `same?`.","summary":"<p>Returns <code>true</code> if this reference is the same as <em>other</em>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/lucky/paginator/page.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/page.cr#L2"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"self"}],"visibility":"Public","body":"if same?(other)\n  return true\nend\n\n\nif number == other.number\nelse\n  return false\nend\n\ntrue\n"},"external_var":false},{"html_id":"number:Int32|Int64-instance-method","name":"number","abstract":false,"location":{"filename":"src/lucky/paginator/page.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/page.cr#L3"},"def":{"name":"number","visibility":"Public","body":"@number"},"external_var":false},{"html_id":"path:String-instance-method","name":"path","abstract":false,"location":{"filename":"src/lucky/paginator/page.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/page.cr#L8"},"def":{"name":"path","return_type":"String","visibility":"Public","body":"@pages.path_to_page(number)"},"external_var":false}]},{"html_id":"lucky/Lucky/Paginator/SeriesItem","path":"Lucky/Paginator/SeriesItem.html","kind":"alias","full_name":"Lucky::Paginator::SeriesItem","name":"SeriesItem","abstract":false,"locations":[{"filename":"src/lucky/paginator/paginator.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/paginator.cr#L7"}],"repository_name":"lucky","program":false,"enum":false,"alias":true,"aliased":"(Lucky::Paginator::Gap | Lucky::Paginator::Page)","aliased_html":"Lucky::Paginator::Gap | <a href=\"../../Lucky/Paginator/Page.html\">Lucky::Paginator::Page</a>","const":false,"namespace":{"html_id":"lucky/Lucky/Paginator","kind":"class","full_name":"Lucky::Paginator","name":"Paginator"}},{"html_id":"lucky/Lucky/Paginator/SimpleNav","path":"Lucky/Paginator/SimpleNav.html","kind":"class","full_name":"Lucky::Paginator::SimpleNav","name":"SimpleNav","abstract":false,"superclass":{"html_id":"lucky/Lucky/BaseComponent","kind":"class","full_name":"Lucky::BaseComponent","name":"BaseComponent"},"ancestors":[{"html_id":"lucky/Lucky/BaseComponent","kind":"class","full_name":"Lucky::BaseComponent","name":"BaseComponent"},{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"},{"html_id":"lucky/Lucky/SvgInliner","kind":"module","full_name":"Lucky::SvgInliner","name":"SvgInliner"},{"html_id":"lucky/Lucky/LiveReloadTag","kind":"module","full_name":"Lucky::LiveReloadTag","name":"LiveReloadTag"},{"html_id":"lucky/Lucky/TagDefaults","kind":"module","full_name":"Lucky::TagDefaults","name":"TagDefaults"},{"html_id":"lucky/Lucky/RenderIfDefined","kind":"module","full_name":"Lucky::RenderIfDefined","name":"RenderIfDefined"},{"html_id":"lucky/Lucky/HelpfulParagraphError","kind":"module","full_name":"Lucky::HelpfulParagraphError","name":"HelpfulParagraphError"},{"html_id":"lucky/Lucky/MountComponent","kind":"module","full_name":"Lucky::MountComponent","name":"MountComponent"},{"html_id":"lucky/Lucky/ForgeryProtectionHelpers","kind":"module","full_name":"Lucky::ForgeryProtectionHelpers","name":"ForgeryProtectionHelpers"},{"html_id":"lucky/Lucky/TimeHelpers","kind":"module","full_name":"Lucky::TimeHelpers","name":"TimeHelpers"},{"html_id":"lucky/Lucky/UrlHelpers","kind":"module","full_name":"Lucky::UrlHelpers","name":"UrlHelpers"},{"html_id":"lucky/Lucky/HTMLTextHelpers","kind":"module","full_name":"Lucky::HTMLTextHelpers","name":"HTMLTextHelpers"},{"html_id":"lucky/Lucky/TextHelpers","kind":"module","full_name":"Lucky::TextHelpers","name":"TextHelpers"},{"html_id":"lucky/Lucky/NumberToCurrency","kind":"module","full_name":"Lucky::NumberToCurrency","name":"NumberToCurrency"},{"html_id":"lucky/Lucky/AssetHelpers","kind":"module","full_name":"Lucky::AssetHelpers","name":"AssetHelpers"},{"html_id":"lucky/Lucky/Assignable","kind":"module","full_name":"Lucky::Assignable","name":"Assignable"},{"html_id":"lucky/Lucky/SpecialtyTags","kind":"module","full_name":"Lucky::SpecialtyTags","name":"SpecialtyTags"},{"html_id":"lucky/Lucky/FormHelpers","kind":"module","full_name":"Lucky::FormHelpers","name":"FormHelpers"},{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Lucky/LinkHelpers","kind":"module","full_name":"Lucky::LinkHelpers","name":"LinkHelpers"},{"html_id":"lucky/Lucky/CustomTags","kind":"module","full_name":"Lucky::CustomTags","name":"CustomTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"},{"html_id":"lucky/Lucky/BaseTags","kind":"module","full_name":"Lucky::BaseTags","name":"BaseTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/paginator/components/simple_nav.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/simple_nav.cr#L5"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ASSIGNS","name":"ASSIGNS","value":"[pages : Lucky::Paginator] of Nil","doc":"Pagination component with raw html and no styling\n\nTypically you would copy paste this component source into your app\nand modify it to suite your needs.","summary":"<p>Pagination component with raw html and no styling</p>"}],"namespace":{"html_id":"lucky/Lucky/Paginator","kind":"class","full_name":"Lucky::Paginator","name":"Paginator"},"doc":"Pagination component with raw html and no styling\n\nTypically you would copy paste this component source into your app\nand modify it to suite your needs.","summary":"<p>Pagination component with raw html and no styling</p>","class_methods":[{"html_id":"file_location-class-method","name":"file_location","doc":"Returns the relative file location to the\nproject root. e.g. src/components/my_component.cr","summary":"<p>Returns the relative file location to the project root.</p>","abstract":false,"location":{"filename":"src/lucky/paginator/components/simple_nav.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/simple_nav.cr#L5"},"def":{"name":"file_location","visibility":"Public","body":"(\"/home/runner/work/lucky/lucky/src/lucky/paginator/components/simple_nav.cr\".gsub(Dir.current, \"\")).byte_slice(1)"},"external_var":false}],"constructors":[{"html_id":"new(pages:Lucky::Paginator)-class-method","name":"new","doc":"Pagination component with raw html and no styling\n\nTypically you would copy paste this component source into your app\nand modify it to suite your needs.","summary":"<p>Pagination component with raw html and no styling</p>","abstract":false,"args":[{"name":"pages","external_name":"pages","restriction":"Lucky::Paginator"}],"args_string":"(pages : Lucky::Paginator)","args_html":"(pages : <a href=\"../../Lucky/Paginator.html\">Lucky::Paginator</a>)","def":{"name":"new","args":[{"name":"pages","external_name":"pages","restriction":"Lucky::Paginator"}],"visibility":"Public","body":"_ = allocate\n_.initialize(pages)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"next_link-instance-method","name":"next_link","abstract":false,"location":{"filename":"src/lucky/paginator/components/simple_nav.cr","line_number":48,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/simple_nav.cr#L48"},"def":{"name":"next_link","visibility":"Public","body":"if path_to_next = @pages.path_to_next\n  li do\n    a(\"Next\", href: path_to_next)\n  end\nelse\n  li(\"Next\")\nend"},"external_var":false},{"html_id":"page_links-instance-method","name":"page_links","abstract":false,"location":{"filename":"src/lucky/paginator/components/simple_nav.cr","line_number":18,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/simple_nav.cr#L18"},"def":{"name":"page_links","visibility":"Public","body":"@pages.series(begin: 1, left_of_current: 1, right_of_current: 1, end: 1).each do |item|\n  render_page_item(item)\nend"},"external_var":false},{"html_id":"pages:Lucky::Paginator-instance-method","name":"pages","abstract":false,"def":{"name":"pages","visibility":"Public","body":"@pages"},"external_var":false},{"html_id":"previous_link-instance-method","name":"previous_link","abstract":false,"location":{"filename":"src/lucky/paginator/components/simple_nav.cr","line_number":40,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/simple_nav.cr#L40"},"def":{"name":"previous_link","visibility":"Public","body":"if prev_path = @pages.path_to_previous\n  li do\n    a(\"Previous\", href: prev_path)\n  end\nelse\n  li(\"Previous\")\nend"},"external_var":false},{"html_id":"render-instance-method","name":"render","abstract":false,"location":{"filename":"src/lucky/paginator/components/simple_nav.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/simple_nav.cr#L8"},"def":{"name":"render","visibility":"Public","body":"nav(aria_label: \"pagination\", role: \"navigation\") do\n  ul do\n    previous_link\n    page_links\n    next_link\n  end\nend"},"external_var":false},{"html_id":"render_page_item(page:Lucky::Paginator::CurrentPage)-instance-method","name":"render_page_item","abstract":false,"args":[{"name":"page","external_name":"page","restriction":"Lucky::Paginator::CurrentPage"}],"args_string":"(page : Lucky::Paginator::CurrentPage)","args_html":"(page : <a href=\"../../Lucky/Paginator/CurrentPage.html\">Lucky::Paginator::CurrentPage</a>)","location":{"filename":"src/lucky/paginator/components/simple_nav.cr","line_number":30,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/simple_nav.cr#L30"},"def":{"name":"render_page_item","args":[{"name":"page","external_name":"page","restriction":"Lucky::Paginator::CurrentPage"}],"visibility":"Public","body":"li do\n  text(page.number)\nend"},"external_var":false},{"html_id":"render_page_item(page:Lucky::Paginator::Page)-instance-method","name":"render_page_item","abstract":false,"args":[{"name":"page","external_name":"page","restriction":"Lucky::Paginator::Page"}],"args_string":"(page : Lucky::Paginator::Page)","args_html":"(page : <a href=\"../../Lucky/Paginator/Page.html\">Lucky::Paginator::Page</a>)","location":{"filename":"src/lucky/paginator/components/simple_nav.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/simple_nav.cr#L24"},"def":{"name":"render_page_item","args":[{"name":"page","external_name":"page","restriction":"Lucky::Paginator::Page"}],"visibility":"Public","body":"li do\n  a(page.number, href: page.path)\nend"},"external_var":false},{"html_id":"render_page_item(gap:Lucky::Paginator::Gap)-instance-method","name":"render_page_item","abstract":false,"args":[{"name":"gap","external_name":"gap","restriction":"Lucky::Paginator::Gap"}],"args_string":"(gap : Lucky::Paginator::Gap)","args_html":"(gap : Lucky::Paginator::Gap)","location":{"filename":"src/lucky/paginator/components/simple_nav.cr","line_number":36,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/paginator/components/simple_nav.cr#L36"},"def":{"name":"render_page_item","args":[{"name":"gap","external_name":"gap","restriction":"Lucky::Paginator::Gap"}],"visibility":"Public","body":"li(\"...\")"},"external_var":false}]}]},{"html_id":"lucky/Lucky/ParamHelpers","path":"Lucky/ParamHelpers.html","kind":"module","full_name":"Lucky::ParamHelpers","name":"ParamHelpers","abstract":false,"locations":[{"filename":"src/lucky/param_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_helpers.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/Action","kind":"class","full_name":"Lucky::Action","name":"Action"},{"html_id":"lucky/Lucky/ErrorAction","kind":"class","full_name":"Lucky::ErrorAction","name":"ErrorAction"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"params:Lucky::Params-instance-method","name":"params","doc":"Returns cached value","summary":"<p>Returns cached value</p>","abstract":false,"location":{"filename":"src/lucky/param_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_helpers.cr#L2"},"def":{"name":"params","return_type":"Lucky::Params","visibility":"Public","body":"params__tuple_cached().first"},"external_var":false},{"html_id":"params__tuple_cached:Tuple(Lucky::Params)-instance-method","name":"params__tuple_cached","doc":"Checks the passed arguments against the memoized args\nand runs the method body if it is the very first call\nor the arguments do not match","summary":"<p>Checks the passed arguments against the memoized args and runs the method body if it is the very first call or the arguments do not match</p>","abstract":false,"location":{"filename":"src/lucky/param_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_helpers.cr#L2"},"def":{"name":"params__tuple_cached","return_type":"Tuple(Lucky::Params)","visibility":"Public","body":"@__memoized_params || (@__memoized_params = (-> do\n  result = params__uncached()\n  {result}\nend).call.not_nil!)"},"external_var":false},{"html_id":"params__uncached:Lucky::Params-instance-method","name":"params__uncached","doc":"Returns uncached value","summary":"<p>Returns uncached value</p>","abstract":false,"location":{"filename":"src/lucky/param_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_helpers.cr#L2"},"def":{"name":"params__uncached","return_type":"Lucky::Params","visibility":"Public","body":"context.params"},"external_var":false}]},{"html_id":"lucky/Lucky/ParamParser","path":"Lucky/ParamParser.html","kind":"module","full_name":"Lucky::ParamParser","name":"ParamParser","abstract":false,"locations":[{"filename":"src/lucky/param_parser.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_parser.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"TIME_FORMATS","name":"TIME_FORMATS","value":"[Time::Format::ISO_8601_DATE_TIME, Time::Format::RFC_2822, Time::Format::RFC_3339, Time::Format.new(\"%Y-%m-%dT%H:%M:%S\", Time::Location::UTC), Time::Format.new(\"%Y-%m-%dT%H:%M\", Time::Location::UTC), Time::Format::HTTP_DATE, Time::Format::ISO_8601_DATE, Time::Format::ISO_8601_TIME]"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"class_methods":[{"html_id":"parse(param:String,klass:String.class):String-class-method","name":"parse","abstract":false,"args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"String.class"}],"args_string":"(param : String, klass : String.class) : String","args_html":"(param : <a href=\"../String.html\">String</a>, klass : <span class=\"t\">String</span>.<span class=\"k\">class</span>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/param_parser.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_parser.cr#L17"},"def":{"name":"parse","args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"String.class"}],"return_type":"String","visibility":"Public","body":"param"},"external_var":false},{"html_id":"parse(param:String,klass:Int16.class):Int16|Nil-class-method","name":"parse","abstract":false,"args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Int16.class"}],"args_string":"(param : String, klass : Int16.class) : Int16 | Nil","args_html":"(param : <a href=\"../String.html\">String</a>, klass : <span class=\"t\">Int16</span>.<span class=\"k\">class</span>) : <a href=\"../Int16.html\">Int16</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/param_parser.cr","line_number":21,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_parser.cr#L21"},"def":{"name":"parse","args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Int16.class"}],"return_type":"Int16 | ::Nil","visibility":"Public","body":"param.to_i16?"},"external_var":false},{"html_id":"parse(param:String,klass:Int32.class):Int32|Nil-class-method","name":"parse","abstract":false,"args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Int32.class"}],"args_string":"(param : String, klass : Int32.class) : Int32 | Nil","args_html":"(param : <a href=\"../String.html\">String</a>, klass : <span class=\"t\">Int32</span>.<span class=\"k\">class</span>) : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/param_parser.cr","line_number":25,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_parser.cr#L25"},"def":{"name":"parse","args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Int32.class"}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"param.to_i?"},"external_var":false},{"html_id":"parse(param:String,klass:Int64.class):Int64|Nil-class-method","name":"parse","abstract":false,"args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Int64.class"}],"args_string":"(param : String, klass : Int64.class) : Int64 | Nil","args_html":"(param : <a href=\"../String.html\">String</a>, klass : <span class=\"t\">Int64</span>.<span class=\"k\">class</span>) : <a href=\"../Int64.html\">Int64</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/param_parser.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_parser.cr#L29"},"def":{"name":"parse","args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Int64.class"}],"return_type":"Int64 | ::Nil","visibility":"Public","body":"param.to_i64?"},"external_var":false},{"html_id":"parse(param:String,klass:Float64.class):Float64|Nil-class-method","name":"parse","abstract":false,"args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Float64.class"}],"args_string":"(param : String, klass : Float64.class) : Float64 | Nil","args_html":"(param : <a href=\"../String.html\">String</a>, klass : <span class=\"t\">Float64</span>.<span class=\"k\">class</span>) : Float64 | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/param_parser.cr","line_number":33,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_parser.cr#L33"},"def":{"name":"parse","args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Float64.class"}],"return_type":"Float64 | ::Nil","visibility":"Public","body":"param.to_f?"},"external_var":false},{"html_id":"parse(param:String,klass:Bool.class):Bool|Nil-class-method","name":"parse","abstract":false,"args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Bool.class"}],"args_string":"(param : String, klass : Bool.class) : Bool | Nil","args_html":"(param : <a href=\"../String.html\">String</a>, klass : <span class=\"t\">Bool</span>.<span class=\"k\">class</span>) : <a href=\"../Bool.html\">Bool</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/param_parser.cr","line_number":37,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_parser.cr#L37"},"def":{"name":"parse","args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Bool.class"}],"return_type":"Bool | ::Nil","visibility":"Public","body":"if ([\"true\", \"1\"] of ::String).includes?(param)\n  true\nelse\n  if ([\"false\", \"0\"] of ::String).includes?(param)\n    false\n  else\n    nil\n  end\nend"},"external_var":false},{"html_id":"parse(param:String,klass:UUID.class):UUID|Nil-class-method","name":"parse","abstract":false,"args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"UUID.class"}],"args_string":"(param : String, klass : UUID.class) : UUID | Nil","args_html":"(param : <a href=\"../String.html\">String</a>, klass : <span class=\"t\">UUID</span>.<span class=\"k\">class</span>) : <a href=\"../UUID.html\">UUID</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/param_parser.cr","line_number":47,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_parser.cr#L47"},"def":{"name":"parse","args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"UUID.class"}],"return_type":"UUID | ::Nil","visibility":"Public","body":"begin\n  UUID.new(param)\nrescue\n  nil\nend"},"external_var":false},{"html_id":"parse(param:String,klass:Time.class):Time|Nil-class-method","name":"parse","abstract":false,"args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Time.class"}],"args_string":"(param : String, klass : Time.class) : Time | Nil","args_html":"(param : <a href=\"../String.html\">String</a>, klass : <span class=\"t\">Time</span>.<span class=\"k\">class</span>) : Time | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/param_parser.cr","line_number":53,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_parser.cr#L53"},"def":{"name":"parse","args":[{"name":"param","external_name":"param","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Time.class"}],"return_type":"Time | ::Nil","visibility":"Public","body":"TIME_FORMATS.each do |format|\n  begin\n    parsed = format.parse(param)\n    if parsed\n      return parsed\n    end\n  rescue e : Time::Format::Error\n    nil\n  end\nend"},"external_var":false},{"html_id":"parse(param:Array(String),klass:Array(T).class):Array(T)|NilforallT-class-method","name":"parse","doc":"Returns `Array(T)` if all params in `param` are properly cast","summary":"<p>Returns <code>Array(T)</code> if all params in <code>param</code> are properly cast</p>","abstract":false,"args":[{"name":"param","external_name":"param","restriction":"Array(String)"},{"name":"klass","external_name":"klass","restriction":"Array(T).class"}],"args_string":"(param : Array(String), klass : Array(T).class) : Array(T) | Nil forall T","args_html":"(param : Array(<a href=\"../String.html\">String</a>), klass : <span class=\"t\">Array</span>(<span class=\"t\">T</span>).<span class=\"k\">class</span>) : Array(T) | <a href=\"../Nil.html\">Nil</a> forall T","location":{"filename":"src/lucky/param_parser.cr","line_number":65,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/param_parser.cr#L65"},"def":{"name":"parse","args":[{"name":"param","external_name":"param","restriction":"Array(String)"},{"name":"klass","external_name":"klass","restriction":"Array(T).class"}],"return_type":"Array(T) | ::Nil","visibility":"Public","body":"casts = param.compact_map do |val|\n  parse(val, T)\nend\n\ncasts.size == param.size ? casts.as(Array(T)) : nil\n"},"external_var":false}]},{"html_id":"lucky/Lucky/ParamParsingError","path":"Lucky/ParamParsingError.html","kind":"class","full_name":"Lucky::ParamParsingError","name":"ParamParsingError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"},{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L17"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(request:HTTP::Request)-class-method","name":"new","abstract":false,"args":[{"name":"request","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request)","args_html":"(request : <a href=\"../HTTP/Request.html\">HTTP::Request</a>)","location":{"filename":"src/lucky/errors.cr","line_number":22,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L22"},"def":{"name":"new","args":[{"name":"request","external_name":"request","restriction":"HTTP::Request"}],"visibility":"Public","body":"_ = allocate\n_.initialize(request)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"renderable_message:String-instance-method","name":"renderable_message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":30,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L30"},"def":{"name":"renderable_message","return_type":"String","visibility":"Public","body":"\"There was a problem parsing the JSON params. Please check that it is formed correctly.\""},"external_var":false},{"html_id":"renderable_status:Int32-instance-method","name":"renderable_status","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":26,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L26"},"def":{"name":"renderable_status","return_type":"Int32","visibility":"Public","body":"400"},"external_var":false},{"html_id":"request:HTTP::Request-instance-method","name":"request","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":20,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L20"},"def":{"name":"request","visibility":"Public","body":"@request"},"external_var":false}]},{"html_id":"lucky/Lucky/Params","path":"Lucky/Params.html","kind":"class","full_name":"Lucky::Params","name":"Params","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/params.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(request:HTTP::Request,route_params:Hash(String,String)=empty_params)-class-method","name":"new","doc":"Create a new params object\n\nThe params object is initialized with an `HTTP::Request` and a hash of\nparams. The request object has many optional parameters. See Crystal's\n[HTTP::Request](https://crystal-lang.org/api/latest/HTTP/Request.html)\nclass for more details.\n\n```\nrequest = HTTP::Request.new(\"GET\", \"/\")\nroute_params = {\"token\" => \"123\"}\n\nLucky::Params.new(request, route_params)\n```","summary":"<p>Create a new params object</p>","abstract":false,"args":[{"name":"request","external_name":"request","restriction":"HTTP::Request"},{"name":"route_params","default_value":"empty_params","external_name":"route_params","restriction":"Hash(String, String)"}],"args_string":"(request : HTTP::Request, route_params : Hash(String, String) = empty_params)","args_html":"(request : <a href=\"../HTTP/Request.html\">HTTP::Request</a>, route_params : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>) = empty_params)","location":{"filename":"src/lucky/params.cr","line_number":21,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L21"},"def":{"name":"new","args":[{"name":"request","external_name":"request","restriction":"HTTP::Request"},{"name":"route_params","default_value":"empty_params","external_name":"route_params","restriction":"Hash(String, String)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(request, route_params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"body:String-instance-method","name":"body","doc":"Returns cached value","summary":"<p>Returns cached value</p>","abstract":false,"location":{"filename":"src/lucky/params.cr","line_number":648,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L648"},"def":{"name":"body","return_type":"String","visibility":"Public","body":"body__tuple_cached().first"},"external_var":false},{"html_id":"body__tuple_cached:Tuple(String)-instance-method","name":"body__tuple_cached","doc":"Checks the passed arguments against the memoized args\nand runs the method body if it is the very first call\nor the arguments do not match","summary":"<p>Checks the passed arguments against the memoized args and runs the method body if it is the very first call or the arguments do not match</p>","abstract":false,"location":{"filename":"src/lucky/params.cr","line_number":648,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L648"},"def":{"name":"body__tuple_cached","return_type":"Tuple(String)","visibility":"Public","body":"@__memoized_body || (@__memoized_body = (-> do\n  result = body__uncached()\n  {result}\nend).call.not_nil!)"},"external_var":false},{"html_id":"body__uncached:String-instance-method","name":"body__uncached","doc":"Returns uncached value","summary":"<p>Returns uncached value</p>","abstract":false,"location":{"filename":"src/lucky/params.cr","line_number":648,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L648"},"def":{"name":"body__uncached","return_type":"String","visibility":"Public","body":"(Lucky::RequestBodyReader.new(request)).body"},"external_var":false},{"html_id":"from_form_data:URI::Params-instance-method","name":"from_form_data","doc":"Returns x-www-form-urlencoded body params as `URI::Params`\n\nReturns a `URI::Params` object for the request body. This method is rarely\nhelpful since you can get query params with `get`, but if you do need raw\naccess to the body params this is the way to get them.\n\n```\nparams.from_form_data[\"name\"]\n```\n\nSee the docs on [`URI::Params`](https://crystal-lang.org/api/URI/Params.html) for more information.","summary":"<p>Returns x-www-form-urlencoded body params as <code>URI::Params</code></p>","abstract":false,"location":{"filename":"src/lucky/params.cr","line_number":70,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L70"},"def":{"name":"from_form_data","return_type":"URI::Params","visibility":"Public","body":"form_params"},"external_var":false},{"html_id":"from_json:JSON::Any-instance-method","name":"from_json","doc":"Parses the request body as `JSON::Any` or raises `Lucky::ParamParsingError` if JSON is invalid.\n\n```\n# {\"page\": 1}\nparams.from_json[\"page\"].as_i # 1\n# {\"users\": [{\"name\": \"Skyler\"}]}\nparams.from_json[\"users\"][0][\"name\"].as_s # \"Skyler\"\n```\n\nSee the crystal docs on\n[`JSON::Any`](https://crystal-lang.org/api/JSON/Any.html) for more on using\nJSON in Crystal.\n\n> You can also get JSON params with `Lucky::Params#get/nested`. Sometimes\n> `Lucky::Params` are not flexible enough. In those cases this method opens\n> the possiblity to do just about anything with JSON.","summary":"<p>Parses the request body as <code>JSON::Any</code> or raises <code><a href=\"../Lucky/ParamParsingError.html\">Lucky::ParamParsingError</a></code> if JSON is invalid.</p>","abstract":false,"location":{"filename":"src/lucky/params.cr","line_number":40,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L40"},"def":{"name":"from_json","return_type":"JSON::Any","visibility":"Public","body":"parsed_json"},"external_var":false},{"html_id":"from_multipart:Tuple(Hash(String,String),Hash(String,Lucky::UploadedFile))-instance-method","name":"from_multipart","doc":"Returns multipart params and files.\n\nReturn a Tuple with a hash of params and a hash of `Lucky::UploadedFile`.\nThis method is rarely helpful since you can get params with `get` and files\nwith `get_file`, but if you need something more custom you can use this method\nto get better access to the raw params.\n\n```\nform_params = params.from_multipart.last # Hash(String, String)\nform_params[\"name\"]                      # \"Kyle\"\n\nfiles = params.from_multipart.last # Hash(String, Lucky::UploadedFile)\nfiles[\"avatar\"]                    # Lucky::UploadedFile\n```","summary":"<p>Returns multipart params and files.</p>","abstract":false,"location":{"filename":"src/lucky/params.cr","line_number":88,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L88"},"def":{"name":"from_multipart","return_type":"Tuple(Hash(String, String), Hash(String, Lucky::UploadedFile))","visibility":"Public","body":"form_data = parse_form_data\n{form_data.params.to_h, form_data.files.to_h}\n"},"external_var":false},{"html_id":"from_query:URI::Params-instance-method","name":"from_query","doc":"Returns just the query params as `URI::Params`\n\nReturns a `URI::Params` object for only the query params. This method is rarely\nhelpful since you can get query params with `get`, but if you do need raw\naccess to the query params this is the way to get them.\n\n```\nparams.from_query[\"search\"] # Will return the \"search\" query param\n```\n\nSee the docs on [`HTTP::Params`](https://crystal-lang.org/api/HTTP/Params.html) for more information.","summary":"<p>Returns just the query params as <code>URI::Params</code></p>","abstract":false,"location":{"filename":"src/lucky/params.cr","line_number":55,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L55"},"def":{"name":"from_query","return_type":"URI::Params","visibility":"Public","body":"request.query_params"},"external_var":false},{"html_id":"get(key):String-instance-method","name":"get","doc":"Retrieve a trimmed value from the params hash, raise if key is absent\n\nIf no key is found a `Lucky::MissingParamError` will be raised:\n\n```\nparams.get(\"name\")    # \"Paul\" : String\nparams.get(\"page\")    # \"1\" : String\nparams.get(\"missing\") # Missing parameter: missing\n```","summary":"<p>Retrieve a trimmed value from the params hash, raise if key is absent</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key) : String","args_html":"(key) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/params.cr","line_number":102,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L102"},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":""}],"return_type":"String","visibility":"Public","body":"(get_raw(key)).strip"},"external_var":false},{"html_id":"get?(key:String|Symbol):String|Nil-instance-method","name":"get?","doc":"Retrieve a trimmed value from the params hash, return nil if key is absent\n\n```\nparams.get?(\"missing\") # nil : (String | Nil)\nparams.get?(\"page\")    # \"1\" : (String | Nil)\nparams.get?(\"name\")    # \"Paul\" : (String | Nil)\n```","summary":"<p>Retrieve a trimmed value from the params hash, return nil if key is absent</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : String | Nil","args_html":"(key : <a href=\"../String.html\">String</a> | Symbol) : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/params.cr","line_number":113,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L113"},"def":{"name":"get?","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"String | ::Nil","visibility":"Public","body":"if value = get_raw?(key)\n  value.strip\nend"},"external_var":false},{"html_id":"get_all(key:String|Symbol):Array(String)-instance-method","name":"get_all","doc":"Retrieve values for a given key\n\nChecks in places that could provide multiple values and returns first with values:\n- JSON body\n- multipart params\n- form encoded params\n- query params\n\nFor all params locations it appends square brackets\nso searching for \"emails\" in query params will look for values with a key of \"emails[]\"\n\nIf no key is found a `Lucky::MissingParamError` will be raised\n\n```\nparams.get_all(:names)    # [\"Paul\", \"Johnny\"] : Array(String)\nparams.get_all(\"missing\") # Missing parameter: missing\n```","summary":"<p>Retrieve values for a given key</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Array(String)","args_html":"(key : <a href=\"../String.html\">String</a> | Symbol) : Array(<a href=\"../String.html\">String</a>)","location":{"filename":"src/lucky/params.cr","line_number":161,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L161"},"def":{"name":"get_all","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"Array(String)","visibility":"Public","body":"(get_all?(key)) || (raise(Lucky::MissingParamError.new(key.to_s)))"},"external_var":false},{"html_id":"get_all?(key:String|Symbol):Array(String)|Nil-instance-method","name":"get_all?","doc":"Retrieve values for a given key, return nil if key is absent\n\n```\nparams.get_all(:names)    # [\"Paul\", \"Johnny\"] : (Array(String) | Nil)\nparams.get_all(\"missing\") # nil : (Array(String) | Nil)\n```","summary":"<p>Retrieve values for a given key, return nil if key is absent</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Array(String) | Nil","args_html":"(key : <a href=\"../String.html\">String</a> | Symbol) : Array(<a href=\"../String.html\">String</a>) | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/params.cr","line_number":171,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L171"},"def":{"name":"get_all?","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"Array(String) | ::Nil","visibility":"Public","body":"key = key.to_s\n\nbody_values = if json?\n  get_all_json(key)\nelse\n  if multipart?\n    get_all_params(multipart_params, key)\n  else\n    get_all_params(form_params, key)\n  end\nend\n\nbody_values || (get_all_params(query_params, key))\n"},"external_var":false},{"html_id":"get_all_files(key:String|Symbol):Array(Lucky::UploadedFile)-instance-method","name":"get_all_files","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Array(Lucky::UploadedFile)","args_html":"(key : <a href=\"../String.html\">String</a> | Symbol) : Array(<a href=\"../Lucky/UploadedFile.html\">Lucky::UploadedFile</a>)","location":{"filename":"src/lucky/params.cr","line_number":215,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L215"},"def":{"name":"get_all_files","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"Array(Lucky::UploadedFile)","visibility":"Public","body":"(get_all_files?(key)) || (raise(Lucky::MissingParamError.new(key.to_s)))"},"external_var":false},{"html_id":"get_all_files?(key:String|Symbol):Array(Lucky::UploadedFile)-instance-method","name":"get_all_files?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Array(Lucky::UploadedFile)","args_html":"(key : <a href=\"../String.html\">String</a> | Symbol) : Array(<a href=\"../Lucky/UploadedFile.html\">Lucky::UploadedFile</a>)","location":{"filename":"src/lucky/params.cr","line_number":219,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L219"},"def":{"name":"get_all_files?","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"Array(Lucky::UploadedFile)","visibility":"Public","body":"multipart_files.fetch_all(key.to_s)"},"external_var":false},{"html_id":"get_file(key):Lucky::UploadedFile-instance-method","name":"get_file","doc":"Retrieve a file from the params hash, raise if key is absent\n\nIf no key is found a `Lucky::MissingParamError` will be raised:\n\n```\nparams.get_file(\"missing\") # Raise: Missing parameter: missing\n\nfile = params.get_file(\"avatar_file\") # Lucky::UploadedFile\nfile.name                             # avatar.png\nfile.metadata                         # HTTP::FormData::FileMetadata\nfile.tempfile.read                    # Get the file contents\n```","summary":"<p>Retrieve a file from the params hash, raise if key is absent</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key) : Lucky::UploadedFile","args_html":"(key) : <a href=\"../Lucky/UploadedFile.html\">Lucky::UploadedFile</a>","location":{"filename":"src/lucky/params.cr","line_number":197,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L197"},"def":{"name":"get_file","args":[{"name":"key","external_name":"key","restriction":""}],"return_type":"Lucky::UploadedFile","visibility":"Public","body":"(get_file?(key)) || (raise(Lucky::MissingParamError.new(key.to_s)))"},"external_var":false},{"html_id":"get_file?(key:String|Symbol):Lucky::UploadedFile|Nil-instance-method","name":"get_file?","doc":"Retrieve a file from the params hash, return nil if key is absent\n\n```\nparams.get_file?(\"missing\") # nil\n\nfile = params.get_file?(\"avatar_file\") # Lucky::UploadedFile\nfile.not_nil!.name                     # avatar.png\nfile.not_nil!.metadata                 # HTTP::FormData::FileMetadata\nfile.not_nil!.tempfile.read            # Get the file contents\n```","summary":"<p>Retrieve a file from the params hash, return nil if key is absent</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : Lucky::UploadedFile | Nil","args_html":"(key : <a href=\"../String.html\">String</a> | Symbol) : <a href=\"../Lucky/UploadedFile.html\">Lucky::UploadedFile</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/params.cr","line_number":211,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L211"},"def":{"name":"get_file?","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"Lucky::UploadedFile | ::Nil","visibility":"Public","body":"multipart_files[key.to_s]?"},"external_var":false},{"html_id":"get_raw(key):String-instance-method","name":"get_raw","doc":"Retrieve a raw, untrimmed value from the params hash, raise if key is absent\n\nIf no key is found a `Lucky::MissingParamError` will be raised:\n\n```\nparams.get_raw(\"name\")    # \" Paul \" : String\nparams.get_raw(\"page\")    # \"1\" : String\nparams.get_raw(\"missing\") # Missing parameter: missing\n```","summary":"<p>Retrieve a raw, untrimmed value from the params hash, raise if key is absent</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key) : String","args_html":"(key) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/params.cr","line_number":128,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L128"},"def":{"name":"get_raw","args":[{"name":"key","external_name":"key","restriction":""}],"return_type":"String","visibility":"Public","body":"(get_raw?(key)) || (raise(Lucky::MissingParamError.new(key.to_s)))"},"external_var":false},{"html_id":"get_raw?(key:String|Symbol):String|Nil-instance-method","name":"get_raw?","doc":"Retrieve a raw, untrimmed value from the params hash, return nil if key is\nabsent\n\n```\nparams.get_raw?(\"missing\") # nil : (String | Nil)\nparams.get_raw?(\"page\")    # \"1\" : (String | Nil)\nparams.get_raw?(\"name\")    # \" Paul \" : (String | Nil)\n```","summary":"<p>Retrieve a raw, untrimmed value from the params hash, return nil if key is absent</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : String | Nil","args_html":"(key : <a href=\"../String.html\">String</a> | Symbol) : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/params.cr","line_number":140,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L140"},"def":{"name":"get_raw?","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"String | ::Nil","visibility":"Public","body":"(route_params[key.to_s]? || (body_param(key.to_s))) || query_params[key.to_s]?"},"external_var":false},{"html_id":"many_nested(nested_key:String|Symbol):Array(Hash(String,String))-instance-method","name":"many_nested","doc":"Retrieve nested values from the params\n\nNested params often appear in JSON requests or Form submissions. If no key\nis found a `Lucky::MissingParamError` will be raised:\n\n```\nbody = \"users[0]:name=Alesia&users[0]:age=35&users[1]:name=Bob&users[1]:age=40&page=1\"\nrequest = HTTP::Request.new(\"POST\", \"/\", body: body)\nparams = Lucky::Params.new(request)\n\nparams.many_nested(\"users\")\n# [{\"name\" => \"Alesia\", \"age\" => \"35\"}, { \"name\" => \"Bob\", \"age\" => \"40\" }]\nparams.many_nested(\"missing\") # Missing parameter: missing\n```","summary":"<p>Retrieve nested values from the params</p>","abstract":false,"args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"args_string":"(nested_key : String | Symbol) : Array(Hash(String, String))","args_html":"(nested_key : <a href=\"../String.html\">String</a> | Symbol) : Array(<a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/lucky/params.cr","line_number":322,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L322"},"def":{"name":"many_nested","args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"return_type":"Array(Hash(String, String))","visibility":"Public","body":"(maybe_many_nested(nested_key)) || (raise(Lucky::MissingNestedParamError.new(nested_key)))"},"external_var":false},{"html_id":"many_nested?(nested_key:String|Symbol):Array(Hash(String,String))-instance-method","name":"many_nested?","doc":"Retrieve nested values from the params\n\nNested params often appear in JSON requests or Form submissions. If no key\nis found an empty array will be returned:\n\n```\nbody = \"users[0]:name=Alesia&users[0]:age=35&users[1]:name=Bob&users[1]:age=40&page=1\"\nrequest = HTTP::Request.new(\"POST\", \"/\", body: body)\nparams = Lucky::Params.new(request)\n\nparams.nested(\"users\")\n# [{\"name\" => \"Alesia\", \"age\" => \"35\"}, { \"name\" => \"Bob\", \"age\" => \"40\" }]\nparams.nested(\"missing\") # []\n```","summary":"<p>Retrieve nested values from the params</p>","abstract":false,"args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"args_string":"(nested_key : String | Symbol) : Array(Hash(String, String))","args_html":"(nested_key : <a href=\"../String.html\">String</a> | Symbol) : Array(<a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/lucky/params.cr","line_number":340,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L340"},"def":{"name":"many_nested?","args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"return_type":"Array(Hash(String, String))","visibility":"Public","body":"(maybe_many_nested(nested_key)) || Array(Hash(String, String)).new"},"external_var":false},{"html_id":"nested(nested_key:String|Symbol):Hash(String,String)-instance-method","name":"nested","doc":"Retrieve a nested value from the params\n\nNested params often appear in JSON requests or Form submissions. If no key\nis found a `Lucky::MissingParamError` will be raised:\n\n```\nbody = \"user:name=Alesia&user:age=35&page=1\"\nrequest = HTTP::Request.new(\"POST\", \"/\", body: body)\nparams = Lucky::Params.new(request)\n\nparams.nested(\"user\")    # {\"name\" => \"Alesia\", \"age\" => \"35\"}\nparams.nested(\"missing\") # Missing parameter: missing\n```","summary":"<p>Retrieve a nested value from the params</p>","abstract":false,"args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"args_string":"(nested_key : String | Symbol) : Hash(String, String)","args_html":"(nested_key : <a href=\"../String.html\">String</a> | Symbol) : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/lucky/params.cr","line_number":236,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L236"},"def":{"name":"nested","args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"return_type":"Hash(String, String)","visibility":"Public","body":"(maybe_nested(nested_key)) || (raise(Lucky::MissingNestedParamError.new(nested_key)))"},"external_var":false},{"html_id":"nested?(nested_key:String|Symbol):Hash(String,String)-instance-method","name":"nested?","doc":"Retrieve a nested value from the params\n\nNested params often appear in JSON requests or Form submissions. If no key\nis found an empty hash will be returned:\n\n```\nbody = \"user:name=Alesia&user:age=35&page=1\"\nrequest = HTTP::Request.new(\"POST\", \"/\", body: body)\nparams = Lucky::Params.new(request)\n\nparams.nested(\"user\")    # {\"name\" => \"Alesia\", \"age\" => \"35\"}\nparams.nested(\"missing\") # {}\n```","summary":"<p>Retrieve a nested value from the params</p>","abstract":false,"args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"args_string":"(nested_key : String | Symbol) : Hash(String, String)","args_html":"(nested_key : <a href=\"../String.html\">String</a> | Symbol) : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/lucky/params.cr","line_number":253,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L253"},"def":{"name":"nested?","args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"return_type":"Hash(String, String)","visibility":"Public","body":"(maybe_nested(nested_key)) || empty_params"},"external_var":false},{"html_id":"nested_array_files(nested_key:String|Symbol):Hash(String,Array(Lucky::UploadedFile))-instance-method","name":"nested_array_files","abstract":false,"args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"args_string":"(nested_key : String | Symbol) : Hash(String, Array(Lucky::UploadedFile))","args_html":"(nested_key : <a href=\"../String.html\">String</a> | Symbol) : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, Array(<a href=\"../Lucky/UploadedFile.html\">Lucky::UploadedFile</a>))","location":{"filename":"src/lucky/params.cr","line_number":300,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L300"},"def":{"name":"nested_array_files","args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"return_type":"Hash(String, Array(Lucky::UploadedFile))","visibility":"Public","body":"(maybe_nested_array_files(nested_key)) || (raise(Lucky::MissingNestedParamError.new(nested_key)))"},"external_var":false},{"html_id":"nested_array_files?(nested_key:String|Symbol):Hash(String,Array(Lucky::UploadedFile))-instance-method","name":"nested_array_files?","abstract":false,"args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"args_string":"(nested_key : String | Symbol) : Hash(String, Array(Lucky::UploadedFile))","args_html":"(nested_key : <a href=\"../String.html\">String</a> | Symbol) : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, Array(<a href=\"../Lucky/UploadedFile.html\">Lucky::UploadedFile</a>))","location":{"filename":"src/lucky/params.cr","line_number":304,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L304"},"def":{"name":"nested_array_files?","args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"return_type":"Hash(String, Array(Lucky::UploadedFile))","visibility":"Public","body":"(maybe_nested_array_files(nested_key)) || Hash(String, Array(Lucky::UploadedFile)).new"},"external_var":false},{"html_id":"nested_arrays(nested_key:String|Symbol):Hash(String,Array(String))-instance-method","name":"nested_arrays","doc":"Retrieve a nested array from the params\n\nNested params often appear in JSON requests or Form submissions. If no key\nis found a `Lucky::MissingParamError` will be raised:\n\n```\nparams.nested_array(\"tags\")    # {\"tags\" => [\"Lucky\", \"Crystal\"]}\nparams.nested_array(\"missing\") # Missing parameter: missing\n```","summary":"<p>Retrieve a nested array from the params</p>","abstract":false,"args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"args_string":"(nested_key : String | Symbol) : Hash(String, Array(String))","args_html":"(nested_key : <a href=\"../String.html\">String</a> | Symbol) : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, Array(<a href=\"../String.html\">String</a>))","location":{"filename":"src/lucky/params.cr","line_number":266,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L266"},"def":{"name":"nested_arrays","args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"return_type":"Hash(String, Array(String))","visibility":"Public","body":"(maybe_nested_arrays(nested_key)) || (raise(Lucky::MissingNestedParamError.new(nested_key)))"},"external_var":false},{"html_id":"nested_arrays?(nested_key:String|Symbol):Hash(String,Array(String))-instance-method","name":"nested_arrays?","abstract":false,"args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"args_string":"(nested_key : String | Symbol) : Hash(String, Array(String))","args_html":"(nested_key : <a href=\"../String.html\">String</a> | Symbol) : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, Array(<a href=\"../String.html\">String</a>))","location":{"filename":"src/lucky/params.cr","line_number":270,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L270"},"def":{"name":"nested_arrays?","args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"return_type":"Hash(String, Array(String))","visibility":"Public","body":"(maybe_nested_arrays(nested_key)) || Hash(String, Array(String)).new"},"external_var":false},{"html_id":"nested_file(nested_key:String|Symbol):Hash(String,Lucky::UploadedFile)-instance-method","name":"nested_file","doc":"Retrieve a nested file from the params\n\nNested params often appear in JSON requests or Form submissions. If no key\nis found a `Lucky::MissingParamError` will be raised:\n\n```\nparams.nested_file?(\"file\")    # Lucky::UploadedFile\nparams.nested_file?(\"missing\") # {}\n```","summary":"<p>Retrieve a nested file from the params</p>","abstract":false,"args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"args_string":"(nested_key : String | Symbol) : Hash(String, Lucky::UploadedFile)","args_html":"(nested_key : <a href=\"../String.html\">String</a> | Symbol) : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../Lucky/UploadedFile.html\">Lucky::UploadedFile</a>)","location":{"filename":"src/lucky/params.cr","line_number":283,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L283"},"def":{"name":"nested_file","args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"return_type":"Hash(String, Lucky::UploadedFile)","visibility":"Public","body":"(maybe_nested_file(nested_key)) || (raise(Lucky::MissingNestedParamError.new(nested_key)))"},"external_var":false},{"html_id":"nested_file?(nested_key:String|Symbol):Hash(String,Lucky::UploadedFile)-instance-method","name":"nested_file?","doc":"Retrieve a nested file from the params\n\nNested params often appear in JSON requests or Form submissions. If no key\nis found an empty hash will be returned:\n\n```\nparams.nested_file(\"file\")    # Lucky::UploadedFile\nparams.nested_file(\"missing\") # Missing parameter: missing\n```","summary":"<p>Retrieve a nested file from the params</p>","abstract":false,"args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"args_string":"(nested_key : String | Symbol) : Hash(String, Lucky::UploadedFile)","args_html":"(nested_key : <a href=\"../String.html\">String</a> | Symbol) : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../Lucky/UploadedFile.html\">Lucky::UploadedFile</a>)","location":{"filename":"src/lucky/params.cr","line_number":296,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L296"},"def":{"name":"nested_file?","args":[{"name":"nested_key","external_name":"nested_key","restriction":"String | Symbol"}],"return_type":"Hash(String, Lucky::UploadedFile)","visibility":"Public","body":"(maybe_nested_file(nested_key)) || empty_file_params"},"external_var":false},{"html_id":"route_params=(route_params:Hash(String,String))-instance-method","name":"route_params=","abstract":false,"args":[{"name":"route_params","external_name":"route_params","restriction":"::Hash(::String, ::String)"}],"args_string":"(route_params : Hash(String, String))","args_html":"(route_params : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/lucky/params.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L6"},"def":{"name":"route_params=","args":[{"name":"route_params","external_name":"route_params","restriction":"::Hash(::String, ::String)"}],"visibility":"Public","body":"@route_params = route_params"},"external_var":false},{"html_id":"to_h-instance-method","name":"to_h","doc":"Converts the params in to a `Hash(String, String)`\n\n```\nrequest.query = \"filter:name=trombone&page=1&per=50\"\nparams = Lucky::Params.new(request)\nparams.to_h # {\"filter\" => {\"name\" => \"trombone\"}, \"page\" => \"1\", \"per\" => \"50\"}\n```","summary":"<p>Converts the params in to a <code><a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)</code></p>","abstract":false,"location":{"filename":"src/lucky/params.cr","line_number":351,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/params.cr#L351"},"def":{"name":"to_h","visibility":"Public","body":"if json?\n  parsed_json.as_h.merge(query_params.to_h)\nelse\n  hash = {} of String => String | Hash(String, String)\n  params = body_params.to_h.merge(query_params.to_h)\n  params.map do |key, value|\n    keys = key.split(':')\n    is_nested = keys.size > 1\n    if is_nested\n      hash[keys.first] = nested(keys.first)\n    else\n      hash[key] = value.as(String)\n    end\n  end\n  hash\nend"},"external_var":false}]},{"html_id":"lucky/Lucky/PrettyLogFormatter","path":"Lucky/PrettyLogFormatter.html","kind":"struct","full_name":"Lucky::PrettyLogFormatter","name":"PrettyLogFormatter","abstract":false,"superclass":{"html_id":"lucky/Dexter/BaseFormatter","kind":"struct","full_name":"Dexter::BaseFormatter","name":"BaseFormatter"},"ancestors":[{"html_id":"lucky/Dexter/BaseFormatter","kind":"struct","full_name":"Dexter::BaseFormatter","name":"BaseFormatter"},{"html_id":"lucky/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/pretty_log_formatter.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/pretty_log_formatter.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ENTRY_FORMATTERS","name":"ENTRY_FORMATTERS","value":"[RequestStartedFormatter, RequestEndedFormatter, ExceptionFormatter, AnyOtherDataFormatter]"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"call:Nil-instance-method","name":"call","abstract":false,"location":{"filename":"src/lucky/pretty_log_formatter.cr","line_number":9,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/pretty_log_formatter.cr#L9"},"def":{"name":"call","return_type":"Nil","visibility":"Public","body":"ENTRY_FORMATTERS.each do |entry_formatter|\n  formatter = entry_formatter.new(io, entry)\n\n  if formatter.should_format?\n    formatter.write\n    break\n  end\nend"},"external_var":false}]},{"html_id":"lucky/Lucky/ProtectFromForgery","path":"Lucky/ProtectFromForgery.html","kind":"module","full_name":"Lucky::ProtectFromForgery","name":"ProtectFromForgery","abstract":false,"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"locations":[{"filename":"src/lucky/protect_from_forgery.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/protect_from_forgery.cr#L5"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ALLOWED_METHODS","name":"ALLOWED_METHODS","value":"[\"GET\", \"HEAD\", \"OPTIONS\", \"TRACE\"] of ::String"},{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: allow_forgery_protection : Bool = true, example: nil, validation: nil}] of Nil"},{"id":"PARAM_KEY","name":"PARAM_KEY","value":"\"_csrf\""},{"id":"SESSION_KEY","name":"SESSION_KEY","value":"\"X-CSRF-TOKEN\""}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Protect from CSRF attacks\n\nThis module is automatically included in `BrowserAction` to protect from CSRF\nattacks.","summary":"<p>Protect from CSRF attacks</p>","class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/protect_from_forgery.cr","line_number":14,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/protect_from_forgery.cr#L14"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/protect_from_forgery.cr","line_number":14,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/protect_from_forgery.cr#L14"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"instance_methods":[{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/protect_from_forgery.cr","line_number":14,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/protect_from_forgery.cr#L14"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/ProtectFromForgery/HabitatSettings","path":"Lucky/ProtectFromForgery/HabitatSettings.html","kind":"class","full_name":"Lucky::ProtectFromForgery::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/protect_from_forgery.cr","line_number":14,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/protect_from_forgery.cr#L14"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/ProtectFromForgery","kind":"module","full_name":"Lucky::ProtectFromForgery","name":"ProtectFromForgery"},"class_methods":[{"html_id":"allow_forgery_protection:Bool-class-method","name":"allow_forgery_protection","abstract":false,"def":{"name":"allow_forgery_protection","return_type":"Bool","visibility":"Public","body":"@@allow_forgery_protection.not_nil!"},"external_var":false},{"html_id":"allow_forgery_protection=(value:Bool)-class-method","name":"allow_forgery_protection=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../../Bool.html\">Bool</a>)","def":{"name":"allow_forgery_protection=","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"visibility":"Public","body":"@@allow_forgery_protection = value"},"external_var":false},{"html_id":"allow_forgery_protection?-class-method","name":"allow_forgery_protection?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use allow_forgery_protection in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use allow_forgery_protection in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"allow_forgery_protection?","visibility":"Public","body":"@@allow_forgery_protection"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"allow_forgery_protection\" => allow_forgery_protection}"},"external_var":false}]}]},{"html_id":"lucky/Lucky/QuickDef","path":"Lucky/QuickDef.html","kind":"module","full_name":"Lucky::QuickDef","name":"QuickDef","abstract":false,"locations":[{"filename":"src/lucky/quick_def.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/quick_def.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"macros":[{"html_id":"quick_def(method_name,value)-macro","name":"quick_def","doc":"Quickly create a method with a simple return value\n\n```\n# Instead of:\ndef name\n  \"Kylo\"\nend\n\n# You could use quick_def:\nquick_def :name, \"Kylo\"\n```","summary":"<p>Quickly create a method with a simple return value</p>","abstract":false,"args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(method_name, value)","args_html":"(method_name, value)","location":{"filename":"src/lucky/quick_def.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/quick_def.cr#L13"},"def":{"name":"quick_def","args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"    def \n{{ method_name.id }}\n\n      \n{{ value }}\n\n    \nend\n  \n"}}]},{"html_id":"lucky/Lucky/RateLimit","path":"Lucky/RateLimit.html","kind":"module","full_name":"Lucky::RateLimit","name":"RateLimit","abstract":false,"locations":[{"filename":"src/lucky/rate_limit.cr","line_number":18,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/rate_limit.cr#L18"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Adds in action level rate limiting. Limit the request rate of a specific\naction by including this module, then define the `rate_limit` method to configue.\nFor convienence, you can also use the `rate_limit` macro.\n\n```\nclass Reports::Index < ApiAction\n  include Lucky::RateLimit\n  rate_limit to: 5, within: 1.minute\n\n  get \"/reports\"\n    plain_text \"ok\"\n  end\nend\n```\n\nBy default, the `rate_limit_identifier` uses the IP address. You can override this method\nto define a different strategy.","summary":"<p>Adds in action level rate limiting.</p>","instance_methods":[{"html_id":"rate_limit:NamedTuple(to:Int32,within:Time::Span)-instance-method","name":"rate_limit","doc":"Defines the rate limit limiting to `to` requests within `within` time span.\n```\ndef rate_limit : NamedTuple(to: Int32, within: Time::Span)\n  {to: 5, within: 1.minute}\nend\n```","summary":"<p>Defines the rate limit limiting to <code>to</code> requests within <code>within</code> time span.</p>","abstract":true,"location":{"filename":"src/lucky/rate_limit.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/rate_limit.cr#L29"},"def":{"name":"rate_limit","return_type":"NamedTuple(to: Int32, within: Time::Span)","visibility":"Public","body":""},"external_var":false}],"macros":[{"html_id":"rate_limit(to,within)-macro","name":"rate_limit","doc":"Convience macro to define the required `rate_limit` method\n```\nrate_limit to: 5, within: 1.minute\n```","summary":"<p>Convience macro to define the required <code><a href=\"../Lucky/RateLimit.html#rate_limit%3ANamedTuple%28to%3AInt32%2Cwithin%3ATime%3A%3ASpan%29-instance-method\">#rate_limit</a></code> method <code>rate_limit to: 5, within: 1.minute</code></p>","abstract":false,"args":[{"name":"to","external_name":"to","restriction":""},{"name":"within","external_name":"within","restriction":""}],"args_string":"(to, within)","args_html":"(to, within)","location":{"filename":"src/lucky/rate_limit.cr","line_number":35,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/rate_limit.cr#L35"},"def":{"name":"rate_limit","args":[{"name":"to","external_name":"to","restriction":""},{"name":"within","external_name":"within","restriction":""}],"visibility":"Public","body":"    def rate_limit : NamedTuple(to: Int32, within: Time::Span)\n      \n{to: \n{{ to }}\n, within: \n{{ within }}\n}\n    \nend\n  \n"}}]},{"html_id":"lucky/Lucky/Redirectable","path":"Lucky/Redirectable.html","kind":"module","full_name":"Lucky::Redirectable","name":"Redirectable","abstract":false,"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"locations":[{"filename":"src/lucky/redirectable.cr","line_number":37,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable.cr#L37"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: redirect_status : Int32 = HTTP::Status::FOUND.value, example: nil, validation: nil}] of Nil"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"including_types":[{"html_id":"lucky/Lucky/Action","kind":"class","full_name":"Lucky::Action","name":"Action"},{"html_id":"lucky/Lucky/ErrorAction","kind":"class","full_name":"Lucky::ErrorAction","name":"ErrorAction"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Redirect the request\n\nThere are multiple ways to redirect inside of an action. The most common ways are to redirect to a `Lucky::Action` class, or a URL/path `String`. Both use the `redirect` method:\n\n```\nredirect to: Users::Index\nredirect to: Users::Show.with(user.id)\nredirect to: \"https://luckyframework.org/\"\nredirect to: \"/users\"\n```\n\nBy default, the method will set the status code to `302` A.K.A. \"Found\". If you want to customize the status code, you can pass it directly:\n\n```\nredirect to: Users::Index, status: 301\n\n# or use the built-in enum value\nredirect to: Users::Index, status: HTTP::Status::MOVED_PERMANENTLY\n```\n\nAlternatively, the status code can also be configured globally through the `redirect_status` setting:\n\n```\nLucky::Redirectable.configure do |config|\n  config.redirect_status = 303\n\n  # or using a built-in enum value\n  config.redirect_status = HTTP::Status::SEE_OTHER.value\nend\n```\n\nYou can find a list of all possible statuses [here](https://crystal-lang.org/api/latest/HTTP/Status.html).\n\nInternally, all the different methods in this module eventually use the\nmethod that takes a `String`. However, it's recommended you pass a\n`Lucky::Action` class if possible because it guarantees runtime safety.","summary":"<p>Redirect the request</p>","class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/redirectable.cr","line_number":38,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable.cr#L38"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/redirectable.cr","line_number":38,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable.cr#L38"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"instance_methods":[{"html_id":"redirect(toroute:Lucky::RouteHelper,status=Lucky::Redirectable.settings.redirect_status):Lucky::TextResponse-instance-method","name":"redirect","doc":"Redirect using a `Lucky::RouteHelper`\n\n```\nredirect to: Users::Show.with(user.id), status: 301\n```","summary":"<p>Redirect using a <code><a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a></code></p>","abstract":false,"args":[{"name":"route","external_name":"to","restriction":"Lucky::RouteHelper"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":""}],"args_string":"(to route : Lucky::RouteHelper, status = Lucky::Redirectable.settings.redirect_status) : Lucky::TextResponse","args_html":"(to route : <a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a>, status = <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Redirectable</span>.settings.redirect_status) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/redirectable.cr","line_number":127,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable.cr#L127"},"def":{"name":"redirect","args":[{"name":"route","external_name":"to","restriction":"Lucky::RouteHelper"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":""}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"redirect(to: route.path, status: status)"},"external_var":false},{"html_id":"redirect(toaction:Lucky::Action.class,status=Lucky::Redirectable.settings.redirect_status):Lucky::TextResponse-instance-method","name":"redirect","doc":"Redirect to a `Lucky::Action`\n\n```\nredirect to: Users::Index\n```","summary":"<p>Redirect to a <code><a href=\"../Lucky/Action.html\">Lucky::Action</a></code></p>","abstract":false,"args":[{"name":"action","external_name":"to","restriction":"Lucky::Action.class"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":""}],"args_string":"(to action : Lucky::Action.class, status = Lucky::Redirectable.settings.redirect_status) : Lucky::TextResponse","args_html":"(to action : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Action</span>.<span class=\"k\">class</span>, status = <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Redirectable</span>.settings.redirect_status) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/redirectable.cr","line_number":139,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable.cr#L139"},"def":{"name":"redirect","args":[{"name":"action","external_name":"to","restriction":"Lucky::Action.class"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":""}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"redirect(to: action.route, status: status)"},"external_var":false},{"html_id":"redirect(topath:String,status:HTTP::Status):Lucky::TextResponse-instance-method","name":"redirect","doc":"Redirect to the given path, with a human friendly status\n\n```\nredirect to: \"/users\", status: HTTP::Status::MOVED_PERMANENTLY\n```","summary":"<p>Redirect to the given path, with a human friendly status</p>","abstract":false,"args":[{"name":"path","external_name":"to","restriction":"String"},{"name":"status","external_name":"status","restriction":"HTTP::Status"}],"args_string":"(to path : String, status : HTTP::Status) : Lucky::TextResponse","args_html":"(to path : <a href=\"../String.html\">String</a>, status : HTTP::Status) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/redirectable.cr","line_number":151,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable.cr#L151"},"def":{"name":"redirect","args":[{"name":"path","external_name":"to","restriction":"String"},{"name":"status","external_name":"status","restriction":"HTTP::Status"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"redirect(path, status.value)"},"external_var":false},{"html_id":"redirect(topath:String,status:Int32=Lucky::Redirectable.settings.redirect_status):Lucky::TextResponse-instance-method","name":"redirect","doc":"Redirect to the given path, with an optional `Int32` status\n\n```\nredirect to: \"/users\"\nredirect to: \"/users/1\", status: 301\n```\nNote: It's recommended to use the method above that accepts a human friendly version of the status","summary":"<p>Redirect to the given path, with an optional <code><a href=\"../Int32.html\">Int32</a></code> status</p>","abstract":false,"args":[{"name":"path","external_name":"to","restriction":"String"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":"Int32"}],"args_string":"(to path : String, status : Int32 = Lucky::Redirectable.settings.redirect_status) : Lucky::TextResponse","args_html":"(to path : <a href=\"../String.html\">String</a>, status : <a href=\"../Int32.html\">Int32</a> = <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Redirectable</span>.settings.redirect_status) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/redirectable.cr","line_number":162,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable.cr#L162"},"def":{"name":"redirect","args":[{"name":"path","external_name":"to","restriction":"String"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":"Int32"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"flash.keep\ncontext.response.headers.add(\"Location\", path)\ncontext.response.status_code = status\nLucky::TextResponse.new(context, \"\", \"\")\n"},"external_var":false},{"html_id":"redirect_back(*,fallback:Lucky::Action.class,status=Lucky::Redirectable.settings.redirect_status,allow_external=false):Lucky::TextResponse-instance-method","name":"redirect_back","doc":"Redirect back with a `Lucky::Action` fallback\n\n```\nredirect_back fallback: Users::Index\n```","summary":"<p>Redirect back with a <code><a href=\"../Lucky/Action.html\">Lucky::Action</a></code> fallback</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"fallback","external_name":"fallback","restriction":"Lucky::Action.class"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":""},{"name":"allow_external","default_value":"false","external_name":"allow_external","restriction":""}],"args_string":"(*, fallback : Lucky::Action.class, status = Lucky::Redirectable.settings.redirect_status, allow_external = false) : Lucky::TextResponse","args_html":"(*, fallback : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Action</span>.<span class=\"k\">class</span>, status = <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Redirectable</span>.settings.redirect_status, allow_external = <span class=\"n\">false</span>) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/redirectable.cr","line_number":47,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable.cr#L47"},"def":{"name":"redirect_back","args":[{"name":"","external_name":"","restriction":""},{"name":"fallback","external_name":"fallback","restriction":"Lucky::Action.class"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":""},{"name":"allow_external","default_value":"false","external_name":"allow_external","restriction":""}],"splat_index":0,"return_type":"Lucky::TextResponse","visibility":"Public","body":"redirect_back(fallback: fallback.route, status: status, allow_external: allow_external)"},"external_var":false},{"html_id":"redirect_back(*,fallback:Lucky::RouteHelper,status=Lucky::Redirectable.settings.redirect_status,allow_external=false):Lucky::TextResponse-instance-method","name":"redirect_back","doc":"Redirect back with a `Lucky::RouteHelper` fallback\n\n```\nredirect_back fallback: Users::Show.with(user.id)\n```","summary":"<p>Redirect back with a <code><a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a></code> fallback</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"fallback","external_name":"fallback","restriction":"Lucky::RouteHelper"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":""},{"name":"allow_external","default_value":"false","external_name":"allow_external","restriction":""}],"args_string":"(*, fallback : Lucky::RouteHelper, status = Lucky::Redirectable.settings.redirect_status, allow_external = false) : Lucky::TextResponse","args_html":"(*, fallback : <a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a>, status = <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Redirectable</span>.settings.redirect_status, allow_external = <span class=\"n\">false</span>) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/redirectable.cr","line_number":61,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable.cr#L61"},"def":{"name":"redirect_back","args":[{"name":"","external_name":"","restriction":""},{"name":"fallback","external_name":"fallback","restriction":"Lucky::RouteHelper"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":""},{"name":"allow_external","default_value":"false","external_name":"allow_external","restriction":""}],"splat_index":0,"return_type":"Lucky::TextResponse","visibility":"Public","body":"redirect_back(fallback: fallback.path, status: status, allow_external: allow_external)"},"external_var":false},{"html_id":"redirect_back(*,fallback:String,status:HTTP::Status,allow_external=false):Lucky::TextResponse-instance-method","name":"redirect_back","doc":"Redirect back with a human friendly status\n\n```\nredirect_back fallback: \"/users\", status: HTTP::Status::MOVED_PERMANENTLY\n```","summary":"<p>Redirect back with a human friendly status</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"fallback","external_name":"fallback","restriction":"String"},{"name":"status","external_name":"status","restriction":"HTTP::Status"},{"name":"allow_external","default_value":"false","external_name":"allow_external","restriction":""}],"args_string":"(*, fallback : String, status : HTTP::Status, allow_external = false) : Lucky::TextResponse","args_html":"(*, fallback : <a href=\"../String.html\">String</a>, status : HTTP::Status, allow_external = <span class=\"n\">false</span>) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/redirectable.cr","line_number":75,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable.cr#L75"},"def":{"name":"redirect_back","args":[{"name":"","external_name":"","restriction":""},{"name":"fallback","external_name":"fallback","restriction":"String"},{"name":"status","external_name":"status","restriction":"HTTP::Status"},{"name":"allow_external","default_value":"false","external_name":"allow_external","restriction":""}],"splat_index":0,"return_type":"Lucky::TextResponse","visibility":"Public","body":"redirect_back(fallback: fallback, status: status.value, allow_external: allow_external)"},"external_var":false},{"html_id":"redirect_back(*,fallback:String,status:Int32=Lucky::Redirectable.settings.redirect_status,allow_external:Bool=false):Lucky::TextResponse-instance-method","name":"redirect_back","doc":"Redirects the browser to the page that issued the request (the referrer)\nif possible, otherwise redirects to the provided default fallback\nlocation.\n\nThe referrer information is pulled from the 'Referer' header on\nthe request. This is an optional header, and if the request\nis missing this header the *fallback* will be used.\n\n```\nredirect_back fallback: \"/users\"\n```\n\nA redirect status can be specified\n\n```\nredirect_back fallback: \"/home\", status: 301\n```\n\nExternal referers are ignored by default.\nIt is determined by comparing the referer header to the request host.\nThey can be explicitly allowed if necessary\n\nredirect_back fallback: \"/home\", allow_external: true","summary":"<p>Redirects the browser to the page that issued the request (the referrer) if possible, otherwise redirects to the provided default fallback location.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"fallback","external_name":"fallback","restriction":"String"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":"Int32"},{"name":"allow_external","default_value":"false","external_name":"allow_external","restriction":"Bool"}],"args_string":"(*, fallback : String, status : Int32 = Lucky::Redirectable.settings.redirect_status, allow_external : Bool = false) : Lucky::TextResponse","args_html":"(*, fallback : <a href=\"../String.html\">String</a>, status : <a href=\"../Int32.html\">Int32</a> = <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Redirectable</span>.settings.redirect_status, allow_external : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/redirectable.cr","line_number":107,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable.cr#L107"},"def":{"name":"redirect_back","args":[{"name":"","external_name":"","restriction":""},{"name":"fallback","external_name":"fallback","restriction":"String"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":"Int32"},{"name":"allow_external","default_value":"false","external_name":"allow_external","restriction":"Bool"}],"splat_index":0,"return_type":"Lucky::TextResponse","visibility":"Public","body":"referer = request.headers[\"Referer\"]?\n\nif referer && (allow_external || (allowed_host?(referer)))\n  redirect(to: referer, status: status)\nelse\n  redirect(to: fallback, status: status)\nend\n"},"external_var":false},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/redirectable.cr","line_number":38,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable.cr#L38"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/Redirectable/HabitatSettings","path":"Lucky/Redirectable/HabitatSettings.html","kind":"class","full_name":"Lucky::Redirectable::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/redirectable.cr","line_number":38,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable.cr#L38"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/Redirectable","kind":"module","full_name":"Lucky::Redirectable","name":"Redirectable"},"class_methods":[{"html_id":"redirect_status:Int32-class-method","name":"redirect_status","abstract":false,"def":{"name":"redirect_status","return_type":"Int32","visibility":"Public","body":"@@redirect_status.not_nil!"},"external_var":false},{"html_id":"redirect_status=(value:Int32)-class-method","name":"redirect_status=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : <a href=\"../../Int32.html\">Int32</a>)","def":{"name":"redirect_status=","args":[{"name":"value","external_name":"value","restriction":"Int32"}],"visibility":"Public","body":"@@redirect_status = value"},"external_var":false},{"html_id":"redirect_status?-class-method","name":"redirect_status?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use redirect_status in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use redirect_status in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"redirect_status?","visibility":"Public","body":"@@redirect_status"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"redirect_status\" => redirect_status}"},"external_var":false}]}]},{"html_id":"lucky/Lucky/RedirectableTurbolinksSupport","path":"Lucky/RedirectableTurbolinksSupport.html","kind":"module","full_name":"Lucky::RedirectableTurbolinksSupport","name":"RedirectableTurbolinksSupport","abstract":false,"locations":[{"filename":"src/lucky/redirectable_turbolinks_support.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable_turbolinks_support.cr#L6"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Set \"Turbolinks-Location\" from session\nNeeds to change browser address bar at last request, see https://github.com/turbolinks/turbolinks#following-redirects\n\nThis pipe extracted Lucky::Redirectable, because Lucky::Redirectable included to Lucky::ErrorAction\nbut Lucky::ErrorAction not have pipe support","summary":"<p>Set &quot;Turbolinks-Location&quot; from session Needs to change browser address bar at last request, see https://github.com/turbolinks/turbolinks#following-redirects</p>","instance_methods":[{"html_id":"redirect(topath:String,status:Int32=Lucky::Redirectable.settings.redirect_status):Lucky::TextResponse-instance-method","name":"redirect","doc":"Overrides Lucky::Redirectable redirect's method","summary":"<p>Overrides Lucky::Redirectable redirect's method</p>","abstract":false,"args":[{"name":"path","external_name":"to","restriction":"String"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":"Int32"}],"args_string":"(to path : String, status : Int32 = Lucky::Redirectable.settings.redirect_status) : Lucky::TextResponse","args_html":"(to path : <a href=\"../String.html\">String</a>, status : <a href=\"../Int32.html\">Int32</a> = <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Redirectable</span>.settings.redirect_status) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/redirectable_turbolinks_support.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/redirectable_turbolinks_support.cr#L8"},"def":{"name":"redirect","args":[{"name":"path","external_name":"to","restriction":"String"},{"name":"status","default_value":"Lucky::Redirectable.settings.redirect_status","external_name":"status","restriction":"Int32"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"flash.keep\nif ajax? && (request.method != \"GET\")\n  context.response.headers.add(\"Location\", path)\n\n\n  context.response.headers.add(\"X-Xhr-Redirect\", path)\n\n  Lucky::TextResponse.new(context, \"text/javascript\", \"Turbolinks.clearCache();\\nTurbolinks.visit(#{path.to_json}, {\\\"action\\\": \\\"replace\\\"})\", status: 200)\nelse\n  if request.headers[\"Turbolinks-Referrer\"]?\n    store_turbolinks_location_in_session(path)\n  end\n\n  context.response.headers.add(\"Location\", path)\n  context.response.status_code = status\n  Lucky::TextResponse.new(context, \"\", \"\")\nend\n"},"external_var":false}]},{"html_id":"lucky/Lucky/RemoteIpHandler","path":"Lucky/RemoteIpHandler.html","kind":"class","full_name":"Lucky::RemoteIpHandler","name":"RemoteIpHandler","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/remote_ip_handler.cr","line_number":14,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/remote_ip_handler.cr#L14"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: ip_header_name : String = \"X-Forwarded-For\", example: nil, validation: nil}] of Nil"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Sets the HTTP::Request#remote_address value as `Socket::IPAddress?`\nto the value of the last IP in the `X-Forwarded-For`\nheader, or fallback to the default `remote_address`.\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For\n\nThis will also set a `remote_ip` String value as `String` which will be\neither the raw `remote_address` value, or an empty string.\n\nThis Handler does a \"best guess\" for the IP which is generally good\nenough. If you require IP based Authentication, then you may want\nto handle this on your own as there will be edge cases when related\nto mobile clients on the go, and potential IP spoofing attacks.\nMore detailed info: https://adam-p.ca/blog/2022/03/x-forwarded-for/","summary":"<p>Sets the HTTP::Request#remote_address value as <code>Socket::IPAddress?</code> to the value of the last IP in the <code>X-Forwarded-For</code> header, or fallback to the default <code>remote_address</code>.</p>","class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/remote_ip_handler.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/remote_ip_handler.cr#L17"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/remote_ip_handler.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/remote_ip_handler.cr#L17"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"instance_methods":[{"html_id":"call(context:HTTP::Server::Context)-instance-method","name":"call","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>)","location":{"filename":"src/lucky/remote_ip_handler.cr","line_number":21,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/remote_ip_handler.cr#L21"},"def":{"name":"call","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"visibility":"Public","body":"context.request.remote_address = fetch_remote_ip(context)\nif ip_value = (context.request.remote_address.as?(Socket::IPAddress)).try() do |__arg0|\n  __arg0.address.presence\nend\n  context.request.remote_ip = ip_value\nend\ncall_next(context)\n"},"external_var":false},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/remote_ip_handler.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/remote_ip_handler.cr#L17"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/RemoteIpHandler/HabitatSettings","path":"Lucky/RemoteIpHandler/HabitatSettings.html","kind":"class","full_name":"Lucky::RemoteIpHandler::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/remote_ip_handler.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/remote_ip_handler.cr#L17"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/RemoteIpHandler","kind":"class","full_name":"Lucky::RemoteIpHandler","name":"RemoteIpHandler"},"class_methods":[{"html_id":"ip_header_name:String-class-method","name":"ip_header_name","abstract":false,"def":{"name":"ip_header_name","return_type":"String","visibility":"Public","body":"@@ip_header_name.not_nil!"},"external_var":false},{"html_id":"ip_header_name=(value:String)-class-method","name":"ip_header_name=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../../String.html\">String</a>)","def":{"name":"ip_header_name=","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@@ip_header_name = value"},"external_var":false},{"html_id":"ip_header_name?-class-method","name":"ip_header_name?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use ip_header_name in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use ip_header_name in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"ip_header_name?","visibility":"Public","body":"@@ip_header_name"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"ip_header_name\" => ip_header_name}"},"external_var":false}]}]},{"html_id":"lucky/Lucky/Renderable","path":"Lucky/Renderable.html","kind":"module","full_name":"Lucky::Renderable","name":"Renderable","abstract":false,"locations":[{"filename":"src/lucky/renderable.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/Action","kind":"class","full_name":"Lucky::Action","name":"Action"},{"html_id":"lucky/Lucky/ErrorAction","kind":"class","full_name":"Lucky::ErrorAction","name":"ErrorAction"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"component(comp:Lucky::BaseComponent.class,status:Int32|Nil=nil,**named_args):Lucky::TextResponse-instance-method","name":"component","doc":"Render a Component as an HTML response.\n\n```\nget \"/foo\" do\n  component MyComponent, with: :args\nend\n```","summary":"<p>Render a Component as an HTML response.</p>","abstract":false,"args":[{"name":"comp","external_name":"comp","restriction":"Lucky::BaseComponent.class"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"}],"args_string":"(comp : Lucky::BaseComponent.class, status : Int32 | Nil = nil, **named_args) : Lucky::TextResponse","args_html":"(comp : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">BaseComponent</span>.<span class=\"k\">class</span>, status : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":326,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L326"},"def":{"name":"component","args":[{"name":"comp","external_name":"comp","restriction":"Lucky::BaseComponent.class"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"return_type":"Lucky::TextResponse","visibility":"Public","body":"send_text_response(((comp.new(**named_args)).context(context)).render_to_string, html_content_type, status)"},"external_var":false},{"html_id":"component(comp:Lucky::BaseComponent.class,status:HTTP::Status,**named_args):Lucky::TextResponse-instance-method","name":"component","abstract":false,"args":[{"name":"comp","external_name":"comp","restriction":"Lucky::BaseComponent.class"},{"name":"status","external_name":"status","restriction":"HTTP::Status"}],"args_string":"(comp : Lucky::BaseComponent.class, status : HTTP::Status, **named_args) : Lucky::TextResponse","args_html":"(comp : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">BaseComponent</span>.<span class=\"k\">class</span>, status : HTTP::Status, **named_args) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":334,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L334"},"def":{"name":"component","args":[{"name":"comp","external_name":"comp","restriction":"Lucky::BaseComponent.class"},{"name":"status","external_name":"status","restriction":"HTTP::Status"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"return_type":"Lucky::TextResponse","visibility":"Public","body":"component(comp, status.value, **named_args)"},"external_var":false},{"html_id":"data(data:String,content_type:String=\"application/octet-stream\",disposition:String=\"attachment\",filename:String|Nil=nil,status:Int32|Nil=nil):Lucky::DataResponse-instance-method","name":"data","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"String"},{"name":"content_type","default_value":"\"application/octet-stream\"","external_name":"content_type","restriction":"String"},{"name":"disposition","default_value":"\"attachment\"","external_name":"disposition","restriction":"String"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"}],"args_string":"(data : String, content_type : String = \"application/octet-stream\", disposition : String = \"attachment\", filename : String | Nil = nil, status : Int32 | Nil = nil) : Lucky::DataResponse","args_html":"(data : <a href=\"../String.html\">String</a>, content_type : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;application/octet-stream&quot;</span>, disposition : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;attachment&quot;</span>, filename : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, status : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>) : <a href=\"../Lucky/DataResponse.html\">Lucky::DataResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":239,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L239"},"def":{"name":"data","args":[{"name":"data","external_name":"data","restriction":"String"},{"name":"content_type","default_value":"\"application/octet-stream\"","external_name":"content_type","restriction":"String"},{"name":"disposition","default_value":"\"attachment\"","external_name":"disposition","restriction":"String"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"}],"return_type":"Lucky::DataResponse","visibility":"Public","body":"Lucky::DataResponse.new(context, data, content_type, disposition, filename, status)"},"external_var":false},{"html_id":"file(path:String,content_type:String|Nil=nil,disposition:String=\"attachment\",filename:String|Nil=nil,status:Int32|Nil=nil):Lucky::FileResponse-instance-method","name":"file","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"content_type","default_value":"nil","external_name":"content_type","restriction":"String | ::Nil"},{"name":"disposition","default_value":"\"attachment\"","external_name":"disposition","restriction":"String"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"}],"args_string":"(path : String, content_type : String | Nil = nil, disposition : String = \"attachment\", filename : String | Nil = nil, status : Int32 | Nil = nil) : Lucky::FileResponse","args_html":"(path : <a href=\"../String.html\">String</a>, content_type : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, disposition : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;attachment&quot;</span>, filename : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, status : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>) : <a href=\"../Lucky/FileResponse.html\">Lucky::FileResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":219,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L219"},"def":{"name":"file","args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"content_type","default_value":"nil","external_name":"content_type","restriction":"String | ::Nil"},{"name":"disposition","default_value":"\"attachment\"","external_name":"disposition","restriction":"String"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"}],"return_type":"Lucky::FileResponse","visibility":"Public","body":"Lucky::FileResponse.new(context, path, content_type, disposition, filename, status)"},"external_var":false},{"html_id":"file(path:String,content_type:String|Nil=nil,disposition:String=\"attachment\",filename:String|Nil=nil,status:HTTP::Status=HTTP::Status::OK):Lucky::FileResponse-instance-method","name":"file","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"content_type","default_value":"nil","external_name":"content_type","restriction":"String | ::Nil"},{"name":"disposition","default_value":"\"attachment\"","external_name":"disposition","restriction":"String"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"status","default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status"}],"args_string":"(path : String, content_type : String | Nil = nil, disposition : String = \"attachment\", filename : String | Nil = nil, status : HTTP::Status = HTTP::Status::OK) : Lucky::FileResponse","args_html":"(path : <a href=\"../String.html\">String</a>, content_type : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, disposition : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;attachment&quot;</span>, filename : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, status : HTTP::Status = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Status</span><span class=\"t\">::</span><span class=\"t\">OK</span>) : <a href=\"../Lucky/FileResponse.html\">Lucky::FileResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":229,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L229"},"def":{"name":"file","args":[{"name":"path","external_name":"path","restriction":"String"},{"name":"content_type","default_value":"nil","external_name":"content_type","restriction":"String | ::Nil"},{"name":"disposition","default_value":"\"attachment\"","external_name":"disposition","restriction":"String"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"status","default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status"}],"return_type":"Lucky::FileResponse","visibility":"Public","body":"file(path, content_type, disposition, filename, status.value)"},"external_var":false},{"html_id":"head(status:Int32):Lucky::TextResponse-instance-method","name":"head","abstract":false,"args":[{"name":"status","external_name":"status","restriction":"Int32"}],"args_string":"(status : Int32) : Lucky::TextResponse","args_html":"(status : <a href=\"../Int32.html\">Int32</a>) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":271,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L271"},"def":{"name":"head","args":[{"name":"status","external_name":"status","restriction":"Int32"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"send_text_response(body: \"\", content_type: \"\", status: status)"},"external_var":false},{"html_id":"head(status:HTTP::Status):Lucky::TextResponse-instance-method","name":"head","abstract":false,"args":[{"name":"status","external_name":"status","restriction":"HTTP::Status"}],"args_string":"(status : HTTP::Status) : Lucky::TextResponse","args_html":"(status : HTTP::Status) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":275,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L275"},"def":{"name":"head","args":[{"name":"status","external_name":"status","restriction":"HTTP::Status"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"head(status.value)"},"external_var":false},{"html_id":"html_content_type:String-instance-method","name":"html_content_type","doc":"The default global content-type header for HTML","summary":"<p>The default global content-type header for HTML</p>","abstract":false,"location":{"filename":"src/lucky/renderable.cr","line_number":200,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L200"},"def":{"name":"html_content_type","return_type":"String","visibility":"Public","body":"\"text/html\""},"external_var":false},{"html_id":"json(body,status:Int32|Nil=nil,content_type:String=json_content_type):Lucky::TextResponse-instance-method","name":"json","abstract":false,"args":[{"name":"body","external_name":"body","restriction":""},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"content_type","default_value":"json_content_type","external_name":"content_type","restriction":"String"}],"args_string":"(body, status : Int32 | Nil = nil, content_type : String = json_content_type) : Lucky::TextResponse","args_html":"(body, status : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, content_type : <a href=\"../String.html\">String</a> = json_content_type) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":303,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L303"},"def":{"name":"json","args":[{"name":"body","external_name":"body","restriction":""},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"content_type","default_value":"json_content_type","external_name":"content_type","restriction":"String"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"raw_json(body.to_json, status, content_type)"},"external_var":false},{"html_id":"json(body,status:HTTP::Status,content_type:String=json_content_type):Lucky::TextResponse-instance-method","name":"json","abstract":false,"args":[{"name":"body","external_name":"body","restriction":""},{"name":"status","external_name":"status","restriction":"HTTP::Status"},{"name":"content_type","default_value":"json_content_type","external_name":"content_type","restriction":"String"}],"args_string":"(body, status : HTTP::Status, content_type : String = json_content_type) : Lucky::TextResponse","args_html":"(body, status : HTTP::Status, content_type : <a href=\"../String.html\">String</a> = json_content_type) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":307,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L307"},"def":{"name":"json","args":[{"name":"body","external_name":"body","restriction":""},{"name":"status","external_name":"status","restriction":"HTTP::Status"},{"name":"content_type","default_value":"json_content_type","external_name":"content_type","restriction":"String"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"json(body, status: status.value, content_type: content_type)"},"external_var":false},{"html_id":"json_content_type:String-instance-method","name":"json_content_type","doc":"The default global content-type header for JSON","summary":"<p>The default global content-type header for JSON</p>","abstract":false,"location":{"filename":"src/lucky/renderable.cr","line_number":205,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L205"},"def":{"name":"json_content_type","return_type":"String","visibility":"Public","body":"\"application/json\""},"external_var":false},{"html_id":"plain_content_type:String-instance-method","name":"plain_content_type","doc":"The default global content-type header for Plain text","summary":"<p>The default global content-type header for Plain text</p>","abstract":false,"location":{"filename":"src/lucky/renderable.cr","line_number":215,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L215"},"def":{"name":"plain_content_type","return_type":"String","visibility":"Public","body":"\"text/plain\""},"external_var":false},{"html_id":"plain_text(body:String,status:Int32|Nil=nil,content_type:String=plain_content_type):Lucky::TextResponse-instance-method","name":"plain_text","abstract":false,"args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"content_type","default_value":"plain_content_type","external_name":"content_type","restriction":"String"}],"args_string":"(body : String, status : Int32 | Nil = nil, content_type : String = plain_content_type) : Lucky::TextResponse","args_html":"(body : <a href=\"../String.html\">String</a>, status : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, content_type : <a href=\"../String.html\">String</a> = plain_content_type) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":263,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L263"},"def":{"name":"plain_text","args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"content_type","default_value":"plain_content_type","external_name":"content_type","restriction":"String"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"send_text_response(body, content_type, status)"},"external_var":false},{"html_id":"plain_text(body:String,status:HTTP::Status,content_type:String=plain_content_type):Lucky::TextResponse-instance-method","name":"plain_text","abstract":false,"args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"status","external_name":"status","restriction":"HTTP::Status"},{"name":"content_type","default_value":"plain_content_type","external_name":"content_type","restriction":"String"}],"args_string":"(body : String, status : HTTP::Status, content_type : String = plain_content_type) : Lucky::TextResponse","args_html":"(body : <a href=\"../String.html\">String</a>, status : HTTP::Status, content_type : <a href=\"../String.html\">String</a> = plain_content_type) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":267,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L267"},"def":{"name":"plain_text","args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"status","external_name":"status","restriction":"HTTP::Status"},{"name":"content_type","default_value":"plain_content_type","external_name":"content_type","restriction":"String"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"plain_text(body, status: status.value)"},"external_var":false},{"html_id":"raw_json(body:String,status:Int32|Nil=nil,content_type:String=json_content_type):Lucky::TextResponse-instance-method","name":"raw_json","doc":"allows json-compatible string to be returned directly","summary":"<p>allows json-compatible string to be returned directly</p>","abstract":false,"args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"content_type","default_value":"json_content_type","external_name":"content_type","restriction":"String"}],"args_string":"(body : String, status : Int32 | Nil = nil, content_type : String = json_content_type) : Lucky::TextResponse","args_html":"(body : <a href=\"../String.html\">String</a>, status : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, content_type : <a href=\"../String.html\">String</a> = json_content_type) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":280,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L280"},"def":{"name":"raw_json","args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"content_type","default_value":"json_content_type","external_name":"content_type","restriction":"String"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"send_text_response(body, content_type, status)"},"external_var":false},{"html_id":"raw_json(body:String,status:HTTP::Status,content_type:String=json_content_type):Lucky::TextResponse-instance-method","name":"raw_json","abstract":false,"args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"status","external_name":"status","restriction":"HTTP::Status"},{"name":"content_type","default_value":"json_content_type","external_name":"content_type","restriction":"String"}],"args_string":"(body : String, status : HTTP::Status, content_type : String = json_content_type) : Lucky::TextResponse","args_html":"(body : <a href=\"../String.html\">String</a>, status : HTTP::Status, content_type : <a href=\"../String.html\">String</a> = json_content_type) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":284,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L284"},"def":{"name":"raw_json","args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"status","external_name":"status","restriction":"HTTP::Status"},{"name":"content_type","default_value":"json_content_type","external_name":"content_type","restriction":"String"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"raw_json(body, status: status.value, content_type: content_type)"},"external_var":false},{"html_id":"send_text_response(body:String,content_type:String,status:Int32|Nil=nil):Lucky::TextResponse-instance-method","name":"send_text_response","abstract":false,"args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"content_type","external_name":"content_type","restriction":"String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"}],"args_string":"(body : String, content_type : String, status : Int32 | Nil = nil) : Lucky::TextResponse","args_html":"(body : <a href=\"../String.html\">String</a>, content_type : <a href=\"../String.html\">String</a>, status : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":249,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L249"},"def":{"name":"send_text_response","args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"content_type","external_name":"content_type","restriction":"String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"Lucky::TextResponse.new(context, content_type, body, status: status, enable_cookies: enable_cookies?)"},"external_var":false},{"html_id":"xml(body:String,status:Int32|Nil=nil,content_type:String=xml_content_type):Lucky::TextResponse-instance-method","name":"xml","abstract":false,"args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"content_type","default_value":"xml_content_type","external_name":"content_type","restriction":"String"}],"args_string":"(body : String, status : Int32 | Nil = nil, content_type : String = xml_content_type) : Lucky::TextResponse","args_html":"(body : <a href=\"../String.html\">String</a>, status : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, content_type : <a href=\"../String.html\">String</a> = xml_content_type) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":311,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L311"},"def":{"name":"xml","args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"content_type","default_value":"xml_content_type","external_name":"content_type","restriction":"String"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"send_text_response(body, content_type, status)"},"external_var":false},{"html_id":"xml(body,status:HTTP::Status,content_type:String=xml_content_type):Lucky::TextResponse-instance-method","name":"xml","abstract":false,"args":[{"name":"body","external_name":"body","restriction":""},{"name":"status","external_name":"status","restriction":"HTTP::Status"},{"name":"content_type","default_value":"xml_content_type","external_name":"content_type","restriction":"String"}],"args_string":"(body, status : HTTP::Status, content_type : String = xml_content_type) : Lucky::TextResponse","args_html":"(body, status : HTTP::Status, content_type : <a href=\"../String.html\">String</a> = xml_content_type) : <a href=\"../Lucky/TextResponse.html\">Lucky::TextResponse</a>","location":{"filename":"src/lucky/renderable.cr","line_number":315,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L315"},"def":{"name":"xml","args":[{"name":"body","external_name":"body","restriction":""},{"name":"status","external_name":"status","restriction":"HTTP::Status"},{"name":"content_type","default_value":"xml_content_type","external_name":"content_type","restriction":"String"}],"return_type":"Lucky::TextResponse","visibility":"Public","body":"xml(body, status: status.value, content_type: content_type)"},"external_var":false},{"html_id":"xml_content_type:String-instance-method","name":"xml_content_type","doc":"The default global content-type header for XML","summary":"<p>The default global content-type header for XML</p>","abstract":false,"location":{"filename":"src/lucky/renderable.cr","line_number":210,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L210"},"def":{"name":"xml_content_type","return_type":"String","visibility":"Public","body":"\"text/xml\""},"external_var":false}],"macros":[{"html_id":"disable_cookies-macro","name":"disable_cookies","doc":"Disable cookies\n\nWhen `disable_cookies` is used, no `Set-Cookie` header will be written to\nthe response.\n\n```\nclass Events::Show < ApiAction\n  disable_cookies\n\n  get \"/events/:id\" do\n    ...\n  end\nend\n```\n","summary":"<p>Disable cookies</p>","abstract":false,"location":{"filename":"src/lucky/renderable.cr","line_number":114,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L114"},"def":{"name":"disable_cookies","visibility":"Public","body":"    private def \nenable_cookies? : Bool\n      false\n    \nend\n  \n"}},{"html_id":"html(page_class=nil,_with_status_code=200,**assigns)-macro","name":"html","doc":"Render a page and pass it data\n\n`html` is used to pass data to a page and render it. Each key/value pair\nmust match up with each `needs` declarations for that page. For example, if\nwe have a page like this:\n\n```\nclass Users::IndexPage < MainLayout\n  needs users : UserQuery\n\n  def content\n    @users.each do |user|\n      # ...\n    end\n  end\nend\n```\n\nOur action must pass a `users` key to the `html` method like this:\n\n```\nclass Users::Index < BrowserAction\n  get \"/users\" do\n    html IndexPage, users: UserQuery.new\n  end\nend\n```\n\nNote also that each piece of data is merged with any `expose` declarations:\n\n```\nclass Users::Index < BrowserAction\n  expose current_user\n\n  get \"/users\" do\n    # Users::IndexPage receives users AND current_user\n    html IndexPage users: UserQuery.new\n  end\n\n  private def current_user\n    # ...\n  end\nend\n```","summary":"<p>Render a page and pass it data</p>","abstract":false,"args":[{"name":"page_class","default_value":"nil","external_name":"page_class","restriction":""},{"name":"_with_status_code","default_value":"200","external_name":"_with_status_code","restriction":""}],"args_string":"(page_class = nil, _with_status_code = 200, **assigns)","args_html":"(page_class = <span class=\"n\">nil</span>, _with_status_code = <span class=\"n\">200</span>, **assigns)","location":{"filename":"src/lucky/renderable.cr","line_number":46,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L46"},"def":{"name":"html","args":[{"name":"page_class","default_value":"nil","external_name":"page_class","restriction":""},{"name":"_with_status_code","default_value":"200","external_name":"_with_status_code","restriction":""}],"double_splat":{"name":"assigns","external_name":"assigns","restriction":""},"visibility":"Public","body":"    \n{% page_class = page_class || (parse_type(\"#{@type.name}Page\")) %}\n\n    \n{% ancestors = page_class.resolve.ancestors %}\n\n    \n{% if ancestors.includes?(Lucky::Action) %}\n      {% page_class.raise(\"You accidentally rendered an action (#{page_class}) instead of an HTMLPage in the #{@type.name} action. Did you mean #{page_class}Page?\") %}\n    {% else %}{% if !(ancestors.includes?(Lucky::HTMLPage)) %}\n      {% page_class.raise(\"Couldn't render #{page_class} in #{@type.name} because it is not an HTMLPage\") %}\n    {% end %}{% end %}\n\n\n    \n# Found in \n{{ @type.name }}\n\n\n    view = \n{{ page_class }}\n.new(\n      context: context,\n      \n{% for key, value in assigns %}\n        {{ key }}: {{ value }},\n      {% end %}\n\n      \n{% for key in EXPOSURES %}\n        {{ key }}: {{ key }},\n      {% end %}\n\n    )\n    Lucky::TextResponse.new(\n      context,\n      html_content_type,\n      view.perform_render,\n      status: \n{{ _with_status_code }}\n,\n      debug_message: log_message(view),\n      \nenable_cookies: \nenable_cookies?\n    )\n  \n"}},{"html_id":"html_with_status(page_class,status,**assigns)-macro","name":"html_with_status","doc":"Render an HTMLPage with a status other than 200\n\nThe status can either be a Number, a HTTP::Status, or a Symbol that corresponds to the HTTP::Status.\n\n```\nclass SecretAgents::Index < BrowserAction\n  get \"/shhhh\" do\n    html_with_status IndexPage, 472, message: \"This page can only be seen with special goggles\"\n  end\nend\n```\nSee Crystal's\n[HTTP::Status](https://crystal-lang.org/api/latest/HTTP/Status.html)\nenum for more available http status codes.","summary":"<p>Render an HTMLPage with a status other than 200</p>","abstract":false,"args":[{"name":"page_class","external_name":"page_class","restriction":""},{"name":"status","external_name":"status","restriction":""}],"args_string":"(page_class, status, **assigns)","args_html":"(page_class, status, **assigns)","location":{"filename":"src/lucky/renderable.cr","line_number":89,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable.cr#L89"},"def":{"name":"html_with_status","args":[{"name":"page_class","external_name":"page_class","restriction":""},{"name":"status","external_name":"status","restriction":""}],"double_splat":{"name":"assigns","external_name":"assigns","restriction":""},"visibility":"Public","body":"    \n{% if status.is_a?(SymbolLiteral) %}\n      html {{ page_class }}, _with_status_code: HTTP::Status::{{ status.upcase.id }}.value, {{ assigns.double_splat }}\n    {% else %}{% if status.is_a?(Path) && ((status.names.join(\"::\")).starts_with?(\"HTTP::Status::\")) %}\n      html {{ page_class }}, _with_status_code: {{ status.resolve }}, {{ assigns.double_splat }}\n    {% else %}\n      html {{ page_class }}, _with_status_code: {{ status }}, {{ assigns.double_splat }}\n    {% end %}{% end %}\n\n  \n"}}]},{"html_id":"lucky/Lucky/RenderableError","path":"Lucky/RenderableError.html","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError","abstract":false,"locations":[{"filename":"src/lucky/renderable_error.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable_error.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/CookieNotFoundError","kind":"class","full_name":"Lucky::CookieNotFoundError","name":"CookieNotFoundError"},{"html_id":"lucky/Lucky/InvalidParamError","kind":"class","full_name":"Lucky::InvalidParamError","name":"InvalidParamError"},{"html_id":"lucky/Lucky/MissingNestedParamError","kind":"class","full_name":"Lucky::MissingNestedParamError","name":"MissingNestedParamError"},{"html_id":"lucky/Lucky/MissingParamError","kind":"class","full_name":"Lucky::MissingParamError","name":"MissingParamError"},{"html_id":"lucky/Lucky/NotAcceptableError","kind":"class","full_name":"Lucky::NotAcceptableError","name":"NotAcceptableError"},{"html_id":"lucky/Lucky/ParamParsingError","kind":"class","full_name":"Lucky::ParamParsingError","name":"ParamParsingError"},{"html_id":"lucky/Lucky/UnknownAcceptHeaderError","kind":"class","full_name":"Lucky::UnknownAcceptHeaderError","name":"UnknownAcceptHeaderError"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"renderable_message:String-instance-method","name":"renderable_message","abstract":true,"location":{"filename":"src/lucky/renderable_error.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable_error.cr#L3"},"def":{"name":"renderable_message","return_type":"String","visibility":"Public","body":""},"external_var":false},{"html_id":"renderable_status:Int32-instance-method","name":"renderable_status","abstract":true,"location":{"filename":"src/lucky/renderable_error.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/renderable_error.cr#L2"},"def":{"name":"renderable_status","return_type":"Int32","visibility":"Public","body":""},"external_var":false}]},{"html_id":"lucky/Lucky/RenderIfDefined","path":"Lucky/RenderIfDefined.html","kind":"module","full_name":"Lucky::RenderIfDefined","name":"RenderIfDefined","abstract":false,"locations":[{"filename":"src/lucky/page_helpers/render_if_defined.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/render_if_defined.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"macros":[{"html_id":"render_if_defined(method_name)-macro","name":"render_if_defined","abstract":false,"args":[{"name":"method_name","external_name":"method_name","restriction":""}],"args_string":"(method_name)","args_html":"(method_name)","location":{"filename":"src/lucky/page_helpers/render_if_defined.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/render_if_defined.cr#L2"},"def":{"name":"render_if_defined","args":[{"name":"method_name","external_name":"method_name","restriction":""}],"visibility":"Public","body":"    if self.responds_to?(:\n{{ method_name.id }}\n)\n      self.\n{{ method_name.id }}\n()\n    \nend\n  \n"}}]},{"html_id":"lucky/Lucky/RequestExpectations","path":"Lucky/RequestExpectations.html","kind":"module","full_name":"Lucky::RequestExpectations","name":"RequestExpectations","abstract":false,"locations":[{"filename":"src/lucky/request_expectations.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_expectations.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Expectations for writing specs for HTTP requests and responses","summary":"<p>Expectations for writing specs for HTTP requests and responses</p>","instance_methods":[{"html_id":"send_json(status,expected:NamedTuple)-instance-method","name":"send_json","abstract":false,"args":[{"name":"status","external_name":"status","restriction":""},{"name":"expected","external_name":"expected","restriction":"NamedTuple"}],"args_string":"(status, expected : NamedTuple)","args_html":"(status, expected : NamedTuple)","location":{"filename":"src/lucky/request_expectations.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_expectations.cr#L17"},"def":{"name":"send_json","args":[{"name":"status","external_name":"status","restriction":""},{"name":"expected","external_name":"expected","restriction":"NamedTuple"}],"visibility":"Public","body":"SendJsonExpectation.new(status, expected.to_json)"},"external_var":false},{"html_id":"send_json(status,**expected)-instance-method","name":"send_json","doc":"Test that the HTTP response has the expected status and JSON body\n\n```\nuser = UserFactory.create\n\nresponse = AppClient.new.exec(Users::Show.with(user.id))\n\nresponse.should send_json(200, {status: \"success\"})\nresponse.should send_json(200, name: user.name, age: user.age)\n```","summary":"<p>Test that the HTTP response has the expected status and JSON body</p>","abstract":false,"args":[{"name":"status","external_name":"status","restriction":""}],"args_string":"(status, **expected)","args_html":"(status, **expected)","location":{"filename":"src/lucky/request_expectations.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_expectations.cr#L13"},"def":{"name":"send_json","args":[{"name":"status","external_name":"status","restriction":""}],"double_splat":{"name":"expected","external_name":"expected","restriction":""},"visibility":"Public","body":"send_json(status, expected)"},"external_var":false}]},{"html_id":"lucky/Lucky/RequestIdHandler","path":"Lucky/RequestIdHandler.html","kind":"class","full_name":"Lucky::RequestIdHandler","name":"RequestIdHandler","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/request_id_handler.cr","line_number":14,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_id_handler.cr#L14"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: set_request_id : Proc(HTTP::Server::Context, String) | ::Nil = nil, example: nil, validation: nil}] of Nil"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Sets the HTTP::Server::Context#request_id value\n\nConfigure the `set_request_id` Proc to return a\nnew `String` value on each request. This can be\nused to group logs and such that may be ran asynchronously.\n\n```\nLucky::RequestIdHandler.configure do |settings|\n  settings.set_request_id = ->(context : HTTP::Server::Context) {\n    UUID.random.to_s\n  }\nend\n```","summary":"<p>Sets the HTTP::Server::Context#request_id value</p>","class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/request_id_handler.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_id_handler.cr#L17"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/request_id_handler.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_id_handler.cr#L17"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"instance_methods":[{"html_id":"call(context:HTTP::Server::Context)-instance-method","name":"call","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>)","location":{"filename":"src/lucky/request_id_handler.cr","line_number":21,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_id_handler.cr#L21"},"def":{"name":"call","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"visibility":"Public","body":"context.request_id = settings.set_request_id.try(&.call(context))\n\ncall_next(context)\n"},"external_var":false},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/request_id_handler.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_id_handler.cr#L17"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/RequestIdHandler/HabitatSettings","path":"Lucky/RequestIdHandler/HabitatSettings.html","kind":"class","full_name":"Lucky::RequestIdHandler::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/request_id_handler.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_id_handler.cr#L17"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/RequestIdHandler","kind":"class","full_name":"Lucky::RequestIdHandler","name":"RequestIdHandler"},"class_methods":[{"html_id":"set_request_id:Proc(HTTP::Server::Context,String)|Nil-class-method","name":"set_request_id","abstract":false,"def":{"name":"set_request_id","return_type":"Proc(HTTP::Server::Context, String) | ::Nil","visibility":"Public","body":"@@set_request_id"},"external_var":false},{"html_id":"set_request_id=(value:Proc(HTTP::Server::Context,String)|Nil)-class-method","name":"set_request_id=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Proc(HTTP::Server::Context, String) | ::Nil"}],"args_string":"(value : Proc(HTTP::Server::Context, String) | Nil)","args_html":"(value : Proc(<a href=\"../../HTTP/Server/Context.html\">HTTP::Server::Context</a>, <a href=\"../../String.html\">String</a>) | <a href=\"../../Nil.html\">Nil</a>)","def":{"name":"set_request_id=","args":[{"name":"value","external_name":"value","restriction":"Proc(HTTP::Server::Context, String) | ::Nil"}],"visibility":"Public","body":"@@set_request_id = value"},"external_var":false},{"html_id":"set_request_id?-class-method","name":"set_request_id?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use set_request_id in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use set_request_id in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"set_request_id?","visibility":"Public","body":"@@set_request_id"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"set_request_id\" => set_request_id}"},"external_var":false}]}]},{"html_id":"lucky/Lucky/RequestTypeHelpers","path":"Lucky/RequestTypeHelpers.html","kind":"module","full_name":"Lucky::RequestTypeHelpers","name":"RequestTypeHelpers","abstract":false,"locations":[{"filename":"src/lucky/request_type_helpers.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_type_helpers.cr#L4"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/Action","kind":"class","full_name":"Lucky::Action","name":"Action"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"These helpers check HTTP headers to determine \"request MIME type\".\n\nGenerally the `Accept` header is checked, but some check other headers, such as `X-Requested-With`.","summary":"<p>These helpers check HTTP headers to determine &quot;request MIME type&quot;.</p>","instance_methods":[{"html_id":"accepts?(format:Symbol):Bool-instance-method","name":"accepts?","doc":"Check whether the request wants the passed in format","summary":"<p>Check whether the request wants the passed in format</p>","abstract":false,"args":[{"name":"format","external_name":"format","restriction":"Symbol"}],"args_string":"(format : Symbol) : Bool","args_html":"(format : Symbol) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/lucky/request_type_helpers.cr","line_number":113,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_type_helpers.cr#L113"},"def":{"name":"accepts?","args":[{"name":"format","external_name":"format","restriction":"Symbol"}],"return_type":"Bool","visibility":"Public","body":"clients_desired_format == format"},"external_var":false},{"html_id":"ajax?:Bool-instance-method","name":"ajax?","doc":"Check if the request is AJAX\n\nThis tests if the `X-Requested-With` header is `XMLHttpRequest`","summary":"<p>Check if the request is AJAX</p>","abstract":false,"location":{"filename":"src/lucky/request_type_helpers.cr","line_number":158,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_type_helpers.cr#L158"},"def":{"name":"ajax?","return_type":"Bool","visibility":"Public","body":"request.headers[\"X-Requested-With\"]?.try(&.downcase) == \"xmlhttprequest\""},"external_var":false},{"html_id":"html?:Bool-instance-method","name":"html?","doc":"Check if the request is HTML\n\nBrowsers typically send vague Accept headers. Because of that this will return `true` when:\n\n * The `accepted_formats` includes `:html`\n * And the `Accept` header is the browser default. For example `text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","summary":"<p>Check if the request is HTML</p>","abstract":false,"location":{"filename":"src/lucky/request_type_helpers.cr","line_number":136,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_type_helpers.cr#L136"},"def":{"name":"html?","return_type":"Bool","visibility":"Public","body":"accepts?(:html)"},"external_var":false},{"html_id":"json?:Bool-instance-method","name":"json?","doc":"Check if the request is JSON\n\nThis tests if the request type is `application/json`","summary":"<p>Check if the request is JSON</p>","abstract":false,"location":{"filename":"src/lucky/request_type_helpers.cr","line_number":126,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_type_helpers.cr#L126"},"def":{"name":"json?","return_type":"Bool","visibility":"Public","body":"accepts?(:json)"},"external_var":false},{"html_id":"multipart?:Bool-instance-method","name":"multipart?","doc":"Check if the request is multipart\n\nThis tests if the `Content-Type` header is `multipart/form-data`","summary":"<p>Check if the request is multipart</p>","abstract":false,"location":{"filename":"src/lucky/request_type_helpers.cr","line_number":165,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_type_helpers.cr#L165"},"def":{"name":"multipart?","return_type":"Bool","visibility":"Public","body":"!!request.headers[\"Content-Type\"]?.try() do |__arg1|\n  __arg1.downcase.starts_with?(\"multipart/form-data\")\nend"},"external_var":false},{"html_id":"plain_text?:Bool-instance-method","name":"plain_text?","doc":"Check if the request is plain text\n\nThis tests if the `Accept` header type is `text/plain` or\nwith the optional character set per W3 RFC1341 7.1","summary":"<p>Check if the request is plain text</p>","abstract":false,"location":{"filename":"src/lucky/request_type_helpers.cr","line_number":151,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_type_helpers.cr#L151"},"def":{"name":"plain_text?","return_type":"Bool","visibility":"Public","body":"accepts?(:plain_text)"},"external_var":false},{"html_id":"url_format:Lucky::Format|Lucky::FormatRegistry::CustomFormat|Nil-instance-method","name":"url_format","doc":"Get the detected format as an enum (if available)\nReturns nil if the format came from Accept header or is unknown","summary":"<p>Get the detected format as an enum (if available) Returns nil if the format came from Accept header or is unknown</p>","abstract":false,"location":{"filename":"src/lucky/request_type_helpers.cr","line_number":119,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_type_helpers.cr#L119"},"def":{"name":"url_format","return_type":"Lucky::Format | Lucky::FormatRegistry::CustomFormat | Nil","visibility":"Public","body":"context._url_format"},"external_var":false},{"html_id":"xml?:Bool-instance-method","name":"xml?","doc":"Check if the request is XML\n\nThis tests if the request type is `application/xml`","summary":"<p>Check if the request is XML</p>","abstract":false,"location":{"filename":"src/lucky/request_type_helpers.cr","line_number":143,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_type_helpers.cr#L143"},"def":{"name":"xml?","return_type":"Bool","visibility":"Public","body":"accepts?(:xml)"},"external_var":false}],"macros":[{"html_id":"default_format(format)-macro","name":"default_format","doc":"If Lucky doesn't find a format then default to the given format\n\n```\ndefault_format :html\n```","summary":"<p>If Lucky doesn't find a format then default to the given format</p>","abstract":false,"args":[{"name":"format","external_name":"format","restriction":""}],"args_string":"(format)","args_html":"(format)","location":{"filename":"src/lucky/request_type_helpers.cr","line_number":31,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/request_type_helpers.cr#L31"},"def":{"name":"default_format","args":[{"name":"format","external_name":"format","restriction":""}],"visibility":"Public","body":"    private def default_format : Symbol\n      \n{{ format }}\n\n    \nend\n  \n"}}]},{"html_id":"lucky/Lucky/Response","path":"Lucky/Response.html","kind":"class","full_name":"Lucky::Response","name":"Response","abstract":true,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/response.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/response.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"lucky/Lucky/DataResponse","kind":"class","full_name":"Lucky::DataResponse","name":"DataResponse"},{"html_id":"lucky/Lucky/FileResponse","kind":"class","full_name":"Lucky::FileResponse","name":"FileResponse"},{"html_id":"lucky/Lucky/TextResponse","kind":"class","full_name":"Lucky::TextResponse","name":"TextResponse"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"debug_message:String|Nil-instance-method","name":"debug_message","abstract":true,"location":{"filename":"src/lucky/response.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/response.cr#L4"},"def":{"name":"debug_message","return_type":"String | ::Nil","visibility":"Public","body":""},"external_var":false},{"html_id":"print-instance-method","name":"print","abstract":true,"location":{"filename":"src/lucky/response.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/response.cr#L2"},"def":{"name":"print","visibility":"Public","body":""},"external_var":false},{"html_id":"status:Int-instance-method","name":"status","abstract":true,"location":{"filename":"src/lucky/response.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/response.cr#L3"},"def":{"name":"status","return_type":"Int","visibility":"Public","body":""},"external_var":false}]},{"html_id":"lucky/Lucky/Routable","path":"Lucky/Routable.html","kind":"module","full_name":"Lucky::Routable","name":"Routable","abstract":false,"locations":[{"filename":"src/lucky/routable.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/routable.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/Action","kind":"class","full_name":"Lucky::Action","name":"Action"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Methods for routing HTTP requests and their parameters to actions.","summary":"<p>Methods for routing HTTP requests and their parameters to actions.</p>","macros":[{"html_id":"delete(path)-macro","name":"delete","doc":"Define a route that responds to a DELETE request\n\nUse these methods if you need a custom path or are using a non-restful\nroute. For example:\n\n```\nclass Profile::ImageUpload\n  delete \"/profile/image/:id\" do\n    # action code here\n  end\nend\n```\n\nwill respond to an `HTTP DELETE` request.\n\n**See also** our guides for more information and examples:\n* [Routing](https://luckyframework.org/guides/http-and-routing/routing-and-params#routing)","summary":"<p>Define a route that responds to a DELETE request</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""}],"args_string":"(path)","args_html":"(path)","location":{"filename":"src/lucky/routable.cr","line_number":36,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/routable.cr#L36"},"def":{"name":"delete","args":[{"name":"path","external_name":"path","restriction":""}],"visibility":"Public","body":"      match(:delete, \n{{ path }}\n) do\n        \n{{ yield }}\n\n      \nend\n    \n"}},{"html_id":"enforce_route_style(path,action)-macro","name":"enforce_route_style","doc":"Implement this macro in your action to check the path for a particular style.\n\nBy default Lucky ships with a `Lucky::EnforceUnderscoredRoute` that is included\nin your `BrowserAction` and `ApiAction` (as of Lucky 0.28)\n\nSee the docs for `Lucky::EnforceUnderscoredRoute` to learn how to use it or disable it.","summary":"<p>Implement this macro in your action to check the path for a particular style.</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"action","external_name":"action","restriction":""}],"args_string":"(path, action)","args_html":"(path, action)","location":{"filename":"src/lucky/routable.cr","line_number":124,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/routable.cr#L124"},"def":{"name":"enforce_route_style","args":[{"name":"path","external_name":"path","restriction":""},{"name":"action","external_name":"action","restriction":""}],"visibility":"Public","body":"    \n# no-op by default\n\n  \n"}},{"html_id":"fallback-macro","name":"fallback","abstract":false,"location":{"filename":"src/lucky/routable.cr","line_number":22,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/routable.cr#L22"},"def":{"name":"fallback","visibility":"Public","body":"    Lucky::RouteNotFoundHandler.fallback_action = \n{{ @type.name.id }}\n\n    setup_call_method(\n{{ yield }}\n)\n  \n"}},{"html_id":"get(path)-macro","name":"get","doc":"Define a route that responds to a GET request\n\nUse these methods if you need a custom path or are using a non-restful\nroute. For example:\n\n```\nclass Profile::ImageUpload\n  get \"/profile/image/:id\" do\n    # action code here\n  end\nend\n```\n\nwill respond to an `HTTP GET` request.\n\n**See also** our guides for more information and examples:\n* [Routing](https://luckyframework.org/guides/http-and-routing/routing-and-params#routing)","summary":"<p>Define a route that responds to a GET request</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""}],"args_string":"(path)","args_html":"(path)","location":{"filename":"src/lucky/routable.cr","line_number":36,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/routable.cr#L36"},"def":{"name":"get","args":[{"name":"path","external_name":"path","restriction":""}],"visibility":"Public","body":"      match(:get, \n{{ path }}\n) do\n        \n{{ yield }}\n\n      \nend\n    \n"}},{"html_id":"inherit_route_settings-macro","name":"inherit_route_settings","abstract":false,"location":{"filename":"src/lucky/routable.cr","line_number":16,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/routable.cr#L16"},"def":{"name":"inherit_route_settings","visibility":"Public","body":"    \n\\{% for\n k, v in @type.ancestors.first.constant :ROUTE_SETTINGS %}\n      \n\\{% \nROUTE_SETTINGS[k] = v %}\n    \n\\{% end\n %}\n  \n"}},{"html_id":"match(method,path)-macro","name":"match","doc":"Define a route with a custom HTTP method.\n\nUse this method if you need to match a route with a custom HTTP method (verb).\nFor example:\n\n```\nclass Profile::Show\n  match :options, \"/profile\" do\n    # action code here\n  end\nend\n```\nWill respond to an `HTTP OPTIONS` request.","summary":"<p>Define a route with a custom HTTP method.</p>","abstract":false,"args":[{"name":"method","external_name":"method","restriction":""},{"name":"path","external_name":"path","restriction":""}],"args_string":"(method, path)","args_html":"(method, path)","location":{"filename":"src/lucky/routable.cr","line_number":74,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/routable.cr#L74"},"def":{"name":"match","args":[{"name":"method","external_name":"method","restriction":""},{"name":"path","external_name":"path","restriction":""}],"visibility":"Public","body":"    \n{% if path.starts_with?(\"/\") %}{% else %}\n      {% path.raise(\"Path must start with a slash. Example: '/#{path}'\") %}\n    {% end %}\n\n\n    \n{% if method == method.downcase %}{% else %}\n      {% method.raise(\"HTTP methods should be lower-case symbols. Use #{method.downcase} instead of #{method}.\") %}\n    {% end %}\n\n\n    add_route(\n{{ method }}\n, \n{{ path }}\n, \n{{ @type.name.id }}\n)\n\n    setup_call_method(\n{{ yield }}\n)\n  \n"}},{"html_id":"param(type_declaration)-macro","name":"param","doc":"Access query and POST parameters\n\nWhen a query parameter or POST data is passed to an action, it is stored in\nthe params object. But accessing the param directly from the params object\nisn't type safe. Enter `param`. It checks the given param's type and makes\nit easily available inside the action.\n\n```\nclass Posts::Index < BrowserAction\n  param page : Int32?\n\n  get \"/posts\" do\n    plain_text \"Posts - Page #{page || 1}\"\n  end\nend\n```\n\nTo generate a link with a param, use the `with` method:\n`Posts::Index.with(10).path` which will generate `/posts?page=10`. Visiting\nthat path would render the above action like this:\n\n```text\nPosts - Page 10\n```\n\nThis works behind the scenes by creating a `page` method in the action to\naccess the parameter.\n\n**Note:** Params can also have a default, but then their routes will not\ninclude the parameter in the query string. Using the `with(10)` method for a\nparam like this:\n`param page : Int32 = 1` will only generate `/posts`.\n\nThese parameters are also typed. The path `/posts?page=ten` will raise a\n`Lucky::InvalidParamError` error because `ten` is a String not an\nInt32.\n\nAdditionally, if the param is non-optional it will raise the\n`Lucky::MissingParamError` error if the required param is absent\nwhen making a request:\n\n```\nclass UserConfirmations::New < BrowserAction\n  param token : String # this param is required!\n\n  get \"/user_confirmations/new\" do\n    # confirm the user with their `token`\n  end\nend\n```\n\nWhen visiting this page, the path _must_ contain the token parameter:\n`/user_confirmations/new?token=abc123`","summary":"<p>Access query and POST parameters</p>","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","args_html":"(type_declaration)","location":{"filename":"src/lucky/routable.cr","line_number":488,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/routable.cr#L488"},"def":{"name":"param","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"visibility":"Public","body":"    \n{% if type_declaration.is_a?(TypeDeclaration) %}{% else %}\n      {% raise(\"'param' expects a type declaration like 'name : String', instead got: '#{type_declaration}'\") %}\n    {% end %}\n\n\n    \n{% PARAM_DECLARATIONS << type_declaration %}\n\n    @@query_param_declarations << \"\n{{ type_declaration.var }}\n : \n{{ type_declaration.type }}\n\"\n\n    getter \n{{ type_declaration.var }}\n : \n{{ type_declaration.type }}\n do\n      \n{% is_nilable_type = type_declaration.type.resolve.nilable? %}\n\n      \n{% base_type = is_nilable_type ? type_declaration.type.types.first : type_declaration.type %}\n\n      \n{% is_array = base_type.is_a?(Generic) %}\n\n      \n{% type = is_array ? base_type.type_vars.first : base_type %}\n\n\n      \n{% if is_array %}\n      val = params.get_all?(:{{ type_declaration.var.id }})\n      {% else %}\n      val = params.get?(:{{ type_declaration.var.id }}).presence\n      {% end %}\n\n\n      if val.nil?\n        default_or_nil = \n{{ type_declaration.value.is_a?(Nop) ? nil : type_declaration.value }}\n\n        \n{% if is_nilable_type %}\n          return default_or_nil\n        {% else %}\n          if default_or_nil.nil?\n            raise Lucky::MissingParamError.new(\"{{ type_declaration.var.id }}\")\n          else\n            return default_or_nil\n          end\n        {% end %}\n\n      \nend\n\n      result = Lucky::ParamParser.parse(val, \n{{ base_type }}\n)\n\n      if result.nil?\n        raise Lucky::InvalidParamError.new(\n          param_name: \"\n{{ type_declaration.var.id }}\n\",\n          param_value: val.to_s,\n          param_type: \"\n{{ type }}\n\"\n        )\n      \nend\n\n      result\n    \nend\n  \n"}},{"html_id":"patch(path)-macro","name":"patch","doc":"Define a route that responds to a PATCH request\n\nUse these methods if you need a custom path or are using a non-restful\nroute. For example:\n\n```\nclass Profile::ImageUpload\n  patch \"/profile/image/:id\" do\n    # action code here\n  end\nend\n```\n\nwill respond to an `HTTP PATCH` request.\n\n**See also** our guides for more information and examples:\n* [Routing](https://luckyframework.org/guides/http-and-routing/routing-and-params#routing)","summary":"<p>Define a route that responds to a PATCH request</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""}],"args_string":"(path)","args_html":"(path)","location":{"filename":"src/lucky/routable.cr","line_number":36,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/routable.cr#L36"},"def":{"name":"patch","args":[{"name":"path","external_name":"path","restriction":""}],"visibility":"Public","body":"      match(:patch, \n{{ path }}\n) do\n        \n{{ yield }}\n\n      \nend\n    \n"}},{"html_id":"post(path)-macro","name":"post","doc":"Define a route that responds to a POST request\n\nUse these methods if you need a custom path or are using a non-restful\nroute. For example:\n\n```\nclass Profile::ImageUpload\n  post \"/profile/image/:id\" do\n    # action code here\n  end\nend\n```\n\nwill respond to an `HTTP POST` request.\n\n**See also** our guides for more information and examples:\n* [Routing](https://luckyframework.org/guides/http-and-routing/routing-and-params#routing)","summary":"<p>Define a route that responds to a POST request</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""}],"args_string":"(path)","args_html":"(path)","location":{"filename":"src/lucky/routable.cr","line_number":36,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/routable.cr#L36"},"def":{"name":"post","args":[{"name":"path","external_name":"path","restriction":""}],"visibility":"Public","body":"      match(:post, \n{{ path }}\n) do\n        \n{{ yield }}\n\n      \nend\n    \n"}},{"html_id":"put(path)-macro","name":"put","doc":"Define a route that responds to a PUT request\n\nUse these methods if you need a custom path or are using a non-restful\nroute. For example:\n\n```\nclass Profile::ImageUpload\n  put \"/profile/image/:id\" do\n    # action code here\n  end\nend\n```\n\nwill respond to an `HTTP PUT` request.\n\n**See also** our guides for more information and examples:\n* [Routing](https://luckyframework.org/guides/http-and-routing/routing-and-params#routing)","summary":"<p>Define a route that responds to a PUT request</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""}],"args_string":"(path)","args_html":"(path)","location":{"filename":"src/lucky/routable.cr","line_number":36,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/routable.cr#L36"},"def":{"name":"put","args":[{"name":"path","external_name":"path","restriction":""}],"visibility":"Public","body":"      match(:put, \n{{ path }}\n) do\n        \n{{ yield }}\n\n      \nend\n    \n"}},{"html_id":"route_prefix(prefix)-macro","name":"route_prefix","doc":"Sets the prefix for all routes defined by the match\nand http method (get, put, post, etc..) macros","summary":"<p>Sets the prefix for all routes defined by the match and http method (get, put, post, etc..) macros</p>","abstract":false,"args":[{"name":"prefix","external_name":"prefix","restriction":""}],"args_string":"(prefix)","args_html":"(prefix)","location":{"filename":"src/lucky/routable.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/routable.cr#L29"},"def":{"name":"route_prefix","args":[{"name":"prefix","external_name":"prefix","restriction":""}],"visibility":"Public","body":"    \n{% if prefix.starts_with?(\"/\") %}{% else %}\n      {% prefix.raise(\"Prefix must start with a slash. Example: '/#{prefix}'\") %}\n    {% end %}\n\n    \n{% ROUTE_SETTINGS[:prefix] = prefix %}\n\n  \n"}},{"html_id":"trace(path)-macro","name":"trace","doc":"Define a route that responds to a TRACE request\n\nUse these methods if you need a custom path or are using a non-restful\nroute. For example:\n\n```\nclass Profile::ImageUpload\n  trace \"/profile/image/:id\" do\n    # action code here\n  end\nend\n```\n\nwill respond to an `HTTP TRACE` request.\n\n**See also** our guides for more information and examples:\n* [Routing](https://luckyframework.org/guides/http-and-routing/routing-and-params#routing)","summary":"<p>Define a route that responds to a TRACE request</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""}],"args_string":"(path)","args_html":"(path)","location":{"filename":"src/lucky/routable.cr","line_number":36,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/routable.cr#L36"},"def":{"name":"trace","args":[{"name":"path","external_name":"path","restriction":""}],"visibility":"Public","body":"      match(:trace, \n{{ path }}\n) do\n        \n{{ yield }}\n\n      \nend\n    \n"}}]},{"html_id":"lucky/Lucky/RouteHandler","path":"Lucky/RouteHandler.html","kind":"class","full_name":"Lucky::RouteHandler","name":"RouteHandler","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/route_handler.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_handler.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"call(context:HTTP::Server::Context)-instance-method","name":"call","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>)","location":{"filename":"src/lucky/route_handler.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_handler.cr#L6"},"def":{"name":"call","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"visibility":"Public","body":"original_path = context.request.path\n\n\nif url_format = Lucky::MimeType.extract_format_from_path(original_path)\n  context._url_format = url_format\n\n  path_without_format = original_path.sub(/^([^?]*)\\.[a-zA-Z0-9]+(\\?.*)?$/, \"\\\\1\\\\2\")\n  modified_request = context.request.dup\n  modified_request.path = path_without_format\n  lookup_request = modified_request\nelse\n  lookup_request = context.request\nend\n\nhandler = Lucky.router.find_action(lookup_request)\nif handler\n  Lucky::Log.dexter.debug do\n    {handled_by: handler.payload.to_s}\n  end\n  (handler.payload.new(context, handler.params)).perform_action\nelse\n  call_next(context)\nend\n"},"external_var":false}]},{"html_id":"lucky/Lucky/RouteHelper","path":"Lucky/RouteHelper.html","kind":"class","full_name":"Lucky::RouteHelper","name":"RouteHelper","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/route_helper.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_helper.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: base_uri : String, example: nil, validation: nil}] of Nil"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/route_helper.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_helper.cr#L2"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/route_helper.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_helper.cr#L2"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"constructors":[{"html_id":"new(method:Symbol,path:String,subdomain:String|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"method","external_name":"method","restriction":"Symbol"},{"name":"path","external_name":"path","restriction":"String"},{"name":"subdomain","default_value":"nil","external_name":"subdomain","restriction":"String | ::Nil"}],"args_string":"(method : Symbol, path : String, subdomain : String | Nil = nil)","args_html":"(method : Symbol, path : <a href=\"../String.html\">String</a>, subdomain : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/lucky/route_helper.cr","line_number":10,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_helper.cr#L10"},"def":{"name":"new","args":[{"name":"method","external_name":"method","restriction":"Symbol"},{"name":"path","external_name":"path","restriction":"String"},{"name":"subdomain","default_value":"nil","external_name":"subdomain","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(method, path, subdomain)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"==(other:self)-instance-method","name":"==","doc":"Returns `true` if this reference is the same as *other*. Invokes `same?`.","summary":"<p>Returns <code>true</code> if this reference is the same as <em>other</em>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/lucky/route_helper.cr","line_number":45,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_helper.cr#L45"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"self"}],"visibility":"Public","body":"if same?(other)\n  return true\nend\n\n\nif @method == (other.@method)\nelse\n  return false\nend\n\nif @path == (other.@path)\nelse\n  return false\nend\n\nif @subdomain == (other.@subdomain)\nelse\n  return false\nend\n\ntrue\n"},"external_var":false},{"html_id":"method:Symbol-instance-method","name":"method","abstract":false,"location":{"filename":"src/lucky/route_helper.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_helper.cr#L6"},"def":{"name":"method","return_type":"Symbol","visibility":"Public","body":"@method"},"external_var":false},{"html_id":"path:String-instance-method","name":"path","abstract":false,"location":{"filename":"src/lucky/route_helper.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_helper.cr#L7"},"def":{"name":"path","return_type":"String","visibility":"Public","body":"@path"},"external_var":false},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/route_helper.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_helper.cr#L2"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false},{"html_id":"subdomain:String|Nil-instance-method","name":"subdomain","abstract":false,"location":{"filename":"src/lucky/route_helper.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_helper.cr#L8"},"def":{"name":"subdomain","return_type":"String | ::Nil","visibility":"Public","body":"@subdomain"},"external_var":false},{"html_id":"url:String-instance-method","name":"url","abstract":false,"location":{"filename":"src/lucky/route_helper.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_helper.cr#L13"},"def":{"name":"url","return_type":"String","visibility":"Public","body":"if subdomain\n  build_subdomain_url\nelse\n  settings.base_uri + path\nend"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/RouteHelper/HabitatSettings","path":"Lucky/RouteHelper/HabitatSettings.html","kind":"class","full_name":"Lucky::RouteHelper::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/route_helper.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_helper.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/RouteHelper","kind":"class","full_name":"Lucky::RouteHelper","name":"RouteHelper"},"class_methods":[{"html_id":"base_uri:String-class-method","name":"base_uri","abstract":false,"def":{"name":"base_uri","return_type":"String","visibility":"Public","body":"@@base_uri.not_nil!"},"external_var":false},{"html_id":"base_uri=(value:String)-class-method","name":"base_uri=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../../String.html\">String</a>)","def":{"name":"base_uri=","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@@base_uri = value"},"external_var":false},{"html_id":"base_uri?-class-method","name":"base_uri?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use base_uri in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use base_uri in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"base_uri?","visibility":"Public","body":"@@base_uri"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"base_uri\" => base_uri}"},"external_var":false}]}]},{"html_id":"lucky/Lucky/RouteInferrer","path":"Lucky/RouteInferrer.html","kind":"class","full_name":"Lucky::RouteInferrer","name":"RouteInferrer","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/route_inferrer.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_inferrer.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(action_class_name:String,nested_route:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"action_class_name","external_name":"action_class_name","restriction":"String"},{"name":"nested_route","default_value":"false","external_name":"nested_route","restriction":"Bool"}],"args_string":"(action_class_name : String, nested_route : Bool = false)","args_html":"(action_class_name : <a href=\"../String.html\">String</a>, nested_route : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/lucky/route_inferrer.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_inferrer.cr#L7"},"def":{"name":"new","args":[{"name":"action_class_name","external_name":"action_class_name","restriction":"String"},{"name":"nested_route","default_value":"false","external_name":"nested_route","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(action_class_name, nested_route)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"action_class_name:String-instance-method","name":"action_class_name","abstract":false,"location":{"filename":"src/lucky/route_inferrer.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_inferrer.cr#L5"},"def":{"name":"action_class_name","return_type":"String","visibility":"Public","body":"@action_class_name"},"external_var":false},{"html_id":"generate_inferred_route:String-instance-method","name":"generate_inferred_route","abstract":false,"location":{"filename":"src/lucky/route_inferrer.cr","line_number":10,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_inferrer.cr#L10"},"def":{"name":"generate_inferred_route","return_type":"String","visibility":"Public","body":"\"#{http_method} \\\"#{path}\\\"\""},"external_var":false},{"html_id":"nested_route?:Bool-instance-method","name":"nested_route?","abstract":false,"location":{"filename":"src/lucky/route_inferrer.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_inferrer.cr#L4"},"def":{"name":"nested_route?","return_type":"Bool","visibility":"Public","body":"@nested_route"},"external_var":false}]},{"html_id":"lucky/Lucky/RouteNotFoundError","path":"Lucky/RouteNotFoundError.html","kind":"class","full_name":"Lucky::RouteNotFoundError","name":"RouteNotFoundError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":9,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L9"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Raised when a route could not be found","summary":"<p>Raised when a route could not be found</p>","constructors":[{"html_id":"new(context:HTTP::Server::Context)-class-method","name":"new","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>)","location":{"filename":"src/lucky/errors.cr","line_number":12,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L12"},"def":{"name":"new","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"visibility":"Public","body":"_ = allocate\n_.initialize(context)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"context:HTTP::Server::Context-instance-method","name":"context","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":10,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L10"},"def":{"name":"context","visibility":"Public","body":"@context"},"external_var":false}]},{"html_id":"lucky/Lucky/RouteNotFoundHandler","path":"Lucky/RouteNotFoundHandler.html","kind":"class","full_name":"Lucky::RouteNotFoundHandler","name":"RouteNotFoundHandler","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/route_not_found_handler.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_not_found_handler.cr#L8"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"This HTTP::Handler takes in the current `context`,\nthen checks to see if a `fallback_action` has been defined to render that action first.\nIf no fallback has been defined, then it will raise a `Lucky::RouteNotFoundError` exception.\n\nThis handler should be used after the `Lucky::RouteHandler`.\n\nSee `Lucky::Routable.fallback` for implementing the `fallback_action`.","summary":"<p>This HTTP::Handler takes in the current <code>context</code>, then checks to see if a <code><a href=\"../Lucky/RouteNotFoundHandler.html#fallback_action%3ALucky%3A%3AAction.class%7CNil-class-method\">.fallback_action</a></code> has been defined to render that action first.</p>","class_methods":[{"html_id":"fallback_action:Lucky::Action.class|Nil-class-method","name":"fallback_action","abstract":false,"location":{"filename":"src/lucky/route_not_found_handler.cr","line_number":10,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_not_found_handler.cr#L10"},"def":{"name":"fallback_action","return_type":"Lucky::Action.class | Nil","visibility":"Public","body":"@@fallback_action"},"external_var":false},{"html_id":"fallback_action=(fallback_action:Lucky::Action.class|Nil)-class-method","name":"fallback_action=","abstract":false,"args":[{"name":"fallback_action","external_name":"fallback_action","restriction":"Lucky::Action.class | Nil"}],"args_string":"(fallback_action : Lucky::Action.class | Nil)","args_html":"(fallback_action : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Action</span>.<span class=\"k\">class</span> | <a href=\"../Nil.html\">Nil</a>)","location":{"filename":"src/lucky/route_not_found_handler.cr","line_number":10,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_not_found_handler.cr#L10"},"def":{"name":"fallback_action=","args":[{"name":"fallback_action","external_name":"fallback_action","restriction":"Lucky::Action.class | Nil"}],"visibility":"Public","body":"@@fallback_action = fallback_action"},"external_var":false}],"instance_methods":[{"html_id":"call(context:HTTP::Server::Context)-instance-method","name":"call","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>)","location":{"filename":"src/lucky/route_not_found_handler.cr","line_number":12,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/route_not_found_handler.cr#L12"},"def":{"name":"call","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"visibility":"Public","body":"if has_fallback?(context)\n  Lucky::Log.dexter.debug do\n    {handled_by_fallback: fallback_action.name.to_s}\n  end\n  (fallback_action.new(context, {} of String => String)).perform_action\nelse\n  raise(Lucky::RouteNotFoundError.new(context))\nend"},"external_var":false}]},{"html_id":"lucky/Lucky/SecureHeaders","path":"Lucky/SecureHeaders.html","kind":"module","full_name":"Lucky::SecureHeaders","name":"SecureHeaders","abstract":false,"locations":[{"filename":"src/lucky/secure_headers/disable_floc.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/disable_floc.cr#L2"},{"filename":"src/lucky/secure_headers/set_csp_guard.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_csp_guard.cr#L2"},{"filename":"src/lucky/secure_headers/set_frame_guard.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_frame_guard.cr#L2"},{"filename":"src/lucky/secure_headers/set_sniff_guard.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_sniff_guard.cr#L2"},{"filename":"src/lucky/secure_headers/set_xss_guard.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_xss_guard.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"types":[{"html_id":"lucky/Lucky/SecureHeaders/DisableFLoC","path":"Lucky/SecureHeaders/DisableFLoC.html","kind":"module","full_name":"Lucky::SecureHeaders::DisableFLoC","name":"DisableFLoC","abstract":false,"locations":[{"filename":"src/lucky/secure_headers/disable_floc.cr","line_number":16,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/disable_floc.cr#L16"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/SecureHeaders","kind":"module","full_name":"Lucky::SecureHeaders","name":"SecureHeaders"},"doc":"```\nclass BrowserAction < Lucky::Action\n  include Lucky::SecureHeaders::DisableFLoC\nend\n```","summary":"<p><code>class BrowserAction &lt; <a href=\"../../Lucky/Action.html\">Lucky::Action</a>   include <a href=\"../../Lucky/SecureHeaders/DisableFLoC.html\">Lucky::SecureHeaders::DisableFLoC</a> end</code></p>"},{"html_id":"lucky/Lucky/SecureHeaders/SetCSPGuard","path":"Lucky/SecureHeaders/SetCSPGuard.html","kind":"module","full_name":"Lucky::SecureHeaders::SetCSPGuard","name":"SetCSPGuard","abstract":false,"locations":[{"filename":"src/lucky/secure_headers/set_csp_guard.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_csp_guard.cr#L17"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/SecureHeaders","kind":"module","full_name":"Lucky::SecureHeaders","name":"SecureHeaders"},"doc":"This module sets the HTTP header [Content-Security-Policy](https://wiki.owasp.org/index.php/OWASP_Secure_Headers_Project#csp).\nIt's job is to prevent a wide range of attacks like Cross-Site Scripting.\n\nInclude this module in the actions you want to add this to.\nA required method `csp_guard_value` must be defined\n```\nclass BrowserAction < Lucky::Action\n  include Lucky::SecureHeaders::SetCSPGuard\n\n  def csp_guard_value : String\n    \"script-src 'self'\"\n  end\nend\n```","summary":"<p>This module sets the HTTP header <a href=\"https://wiki.owasp.org/index.php/OWASP_Secure_Headers_Project#csp\">Content-Security-Policy</a>.</p>","instance_methods":[{"html_id":"csp_guard_value:String-instance-method","name":"csp_guard_value","abstract":true,"location":{"filename":"src/lucky/secure_headers/set_csp_guard.cr","line_number":22,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_csp_guard.cr#L22"},"def":{"name":"csp_guard_value","return_type":"String","visibility":"Public","body":""},"external_var":false}]},{"html_id":"lucky/Lucky/SecureHeaders/SetFrameGuard","path":"Lucky/SecureHeaders/SetFrameGuard.html","kind":"module","full_name":"Lucky::SecureHeaders::SetFrameGuard","name":"SetFrameGuard","abstract":false,"locations":[{"filename":"src/lucky/secure_headers/set_frame_guard.cr","line_number":25,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_frame_guard.cr#L25"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/SecureHeaders","kind":"module","full_name":"Lucky::SecureHeaders","name":"SecureHeaders"},"doc":"This module sets the HTTP header [X-Frame-Options](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options).\nIt's job is responsible for deciding which site can call your site from within a frame.\nFor more information, read up on [Clickjacking](https://en.wikipedia.org/wiki/Clickjacking).\n\nInclude this module in the actions you want to add this to.\nA required method `frame_guard_value` must be defined`\n```\nclass BrowserAction < Lucky::Action\n  include Lucky::SecureHeaders::SetFrameGuard\n\n  def frame_guard_value : String\n    \"deny\"\n  end\nend\n```\n\n### Options\nThe `frame_guard_value` method must be defined and return a `String`\nIt can have one of 3 String values:\n- `\"sameorigin\"`\n- `\"deny\"`\n- a valid URL e.g. `\"https://mysite.com\"`","summary":"<p>This module sets the HTTP header <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options\">X-Frame-Options</a>.</p>","instance_methods":[{"html_id":"frame_guard_value:String-instance-method","name":"frame_guard_value","abstract":true,"location":{"filename":"src/lucky/secure_headers/set_frame_guard.cr","line_number":30,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_frame_guard.cr#L30"},"def":{"name":"frame_guard_value","return_type":"String","visibility":"Public","body":""},"external_var":false}]},{"html_id":"lucky/Lucky/SecureHeaders/SetSniffGuard","path":"Lucky/SecureHeaders/SetSniffGuard.html","kind":"module","full_name":"Lucky::SecureHeaders::SetSniffGuard","name":"SetSniffGuard","abstract":false,"locations":[{"filename":"src/lucky/secure_headers/set_sniff_guard.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_sniff_guard.cr#L13"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/SecureHeaders","kind":"module","full_name":"Lucky::SecureHeaders","name":"SecureHeaders"},"doc":"This module sets the HTTP header [X-Content-Type-Options](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options).\nIt's job is responsible for disabling mime type sniffing.\nFor more information, read up on [MIME type security](https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)).\n\nInclude this module in the actions you want to add this to.\n```\nclass BrowserAction < Lucky::Action\n  include Lucky::SecureHeaders::SetSniffGuard\nend\n```","summary":"<p>This module sets the HTTP header <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options\">X-Content-Type-Options</a>.</p>"},{"html_id":"lucky/Lucky/SecureHeaders/SetXSSGuard","path":"Lucky/SecureHeaders/SetXSSGuard.html","kind":"module","full_name":"Lucky::SecureHeaders::SetXSSGuard","name":"SetXSSGuard","abstract":false,"locations":[{"filename":"src/lucky/secure_headers/set_xss_guard.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/secure_headers/set_xss_guard.cr#L17"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/SecureHeaders","kind":"module","full_name":"Lucky::SecureHeaders","name":"SecureHeaders"},"doc":"```\nclass BrowserAction < Lucky::Action\n  include Lucky::SecureHeaders::SetXSSGuard\nend\n```","summary":"<p><code>class BrowserAction &lt; <a href=\"../../Lucky/Action.html\">Lucky::Action</a>   include <a href=\"../../Lucky/SecureHeaders/SetXSSGuard.html\">Lucky::SecureHeaders::SetXSSGuard</a> end</code></p>"}]},{"html_id":"lucky/Lucky/Serializable","path":"Lucky/Serializable.html","kind":"module","full_name":"Lucky::Serializable","name":"Serializable","abstract":false,"locations":[{"filename":"src/lucky/serializable.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/serializable.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/Serializer","kind":"class","full_name":"Lucky::Serializer","name":"Serializer"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"render-instance-method","name":"render","abstract":true,"location":{"filename":"src/lucky/serializable.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/serializable.cr#L4"},"def":{"name":"render","visibility":"Public","body":""},"external_var":false},{"html_id":"to_json(io)-instance-method","name":"to_json","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/lucky/serializable.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/serializable.cr#L6"},"def":{"name":"to_json","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"render.to_json(io)"},"external_var":false}]},{"html_id":"lucky/Lucky/Serializer","path":"Lucky/Serializer.html","kind":"class","full_name":"Lucky::Serializer","name":"Serializer","abstract":true,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Lucky/Serializable","kind":"module","full_name":"Lucky::Serializable","name":"Serializable"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/serializer.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/serializer.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Lucky/Serializable","kind":"module","full_name":"Lucky::Serializable","name":"Serializable"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"summary":"<p><span class=\"flag red\">DEPRECATED</span>  include <code><a href=\"../Lucky/Serializable.html\">Lucky::Serializable</a></code> instead of inheriting from <code><a href=\"../Lucky/Serializer.html\">Lucky::Serializer</a></code></p>"},{"html_id":"lucky/Lucky/Server","path":"Lucky/Server.html","kind":"class","full_name":"Lucky::Server","name":"Server","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/server.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/server.cr#L4"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: secret_key_base : String, example: nil, validation: nil}, {decl: host : String, example: nil, validation: nil}, {decl: port : Int32, example: nil, validation: nil}, {decl: asset_host : String = \"\", example: nil, validation: nil}, {decl: gzip_enabled : Bool = false, example: nil, validation: nil}, {decl: gzip_content_types : Array(String) = [\"application/json\", \"application/javascript\", \"application/xml\", \"font/otf\", \"font/ttf\", \"font/woff\", \"font/woff2\", \"image/svg+xml\", \"text/css\", \"text/csv\", \"text/html\", \"text/javascript\", \"text/plain\"] of ::String, example: nil, validation: nil}] of Nil"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Class for configuring server settings\n\nThe settings created here can be customized in each Lucky app by modifying them in your config/server.cr","summary":"<p>Class for configuring server settings</p>","class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/server.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/server.cr#L5"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/server.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/server.cr#L5"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"instance_methods":[{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/server.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/server.cr#L5"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/Server/HabitatSettings","path":"Lucky/Server/HabitatSettings.html","kind":"class","full_name":"Lucky::Server::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/server.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/server.cr#L5"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/Server","kind":"class","full_name":"Lucky::Server","name":"Server"},"class_methods":[{"html_id":"asset_host:String-class-method","name":"asset_host","abstract":false,"def":{"name":"asset_host","return_type":"String","visibility":"Public","body":"@@asset_host.not_nil!"},"external_var":false},{"html_id":"asset_host=(value:String)-class-method","name":"asset_host=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../../String.html\">String</a>)","def":{"name":"asset_host=","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@@asset_host = value"},"external_var":false},{"html_id":"asset_host?-class-method","name":"asset_host?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use asset_host in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use asset_host in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"asset_host?","visibility":"Public","body":"@@asset_host"},"external_var":false},{"html_id":"gzip_content_types:Array(String)-class-method","name":"gzip_content_types","abstract":false,"def":{"name":"gzip_content_types","return_type":"Array(String)","visibility":"Public","body":"@@gzip_content_types.not_nil!"},"external_var":false},{"html_id":"gzip_content_types=(value:Array(String))-class-method","name":"gzip_content_types=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Array(String)"}],"args_string":"(value : Array(String))","args_html":"(value : Array(<a href=\"../../String.html\">String</a>))","def":{"name":"gzip_content_types=","args":[{"name":"value","external_name":"value","restriction":"Array(String)"}],"visibility":"Public","body":"@@gzip_content_types = value"},"external_var":false},{"html_id":"gzip_content_types?-class-method","name":"gzip_content_types?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use gzip_content_types in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use gzip_content_types in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"gzip_content_types?","visibility":"Public","body":"@@gzip_content_types"},"external_var":false},{"html_id":"gzip_enabled:Bool-class-method","name":"gzip_enabled","abstract":false,"def":{"name":"gzip_enabled","return_type":"Bool","visibility":"Public","body":"@@gzip_enabled.not_nil!"},"external_var":false},{"html_id":"gzip_enabled=(value:Bool)-class-method","name":"gzip_enabled=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../../Bool.html\">Bool</a>)","def":{"name":"gzip_enabled=","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"visibility":"Public","body":"@@gzip_enabled = value"},"external_var":false},{"html_id":"gzip_enabled?-class-method","name":"gzip_enabled?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use gzip_enabled in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use gzip_enabled in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"gzip_enabled?","visibility":"Public","body":"@@gzip_enabled"},"external_var":false},{"html_id":"host:String-class-method","name":"host","abstract":false,"def":{"name":"host","return_type":"String","visibility":"Public","body":"@@host.not_nil!"},"external_var":false},{"html_id":"host=(value:String)-class-method","name":"host=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../../String.html\">String</a>)","def":{"name":"host=","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@@host = value"},"external_var":false},{"html_id":"host?-class-method","name":"host?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use host in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use host in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"host?","visibility":"Public","body":"@@host"},"external_var":false},{"html_id":"port:Int32-class-method","name":"port","abstract":false,"def":{"name":"port","return_type":"Int32","visibility":"Public","body":"@@port.not_nil!"},"external_var":false},{"html_id":"port=(value:Int32)-class-method","name":"port=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : <a href=\"../../Int32.html\">Int32</a>)","def":{"name":"port=","args":[{"name":"value","external_name":"value","restriction":"Int32"}],"visibility":"Public","body":"@@port = value"},"external_var":false},{"html_id":"port?-class-method","name":"port?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use port in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use port in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"port?","visibility":"Public","body":"@@port"},"external_var":false},{"html_id":"secret_key_base:String-class-method","name":"secret_key_base","abstract":false,"def":{"name":"secret_key_base","return_type":"String","visibility":"Public","body":"@@secret_key_base.not_nil!"},"external_var":false},{"html_id":"secret_key_base=(value:String)-class-method","name":"secret_key_base=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../../String.html\">String</a>)","def":{"name":"secret_key_base=","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@@secret_key_base = value"},"external_var":false},{"html_id":"secret_key_base?-class-method","name":"secret_key_base?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use secret_key_base in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use secret_key_base in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"secret_key_base?","visibility":"Public","body":"@@secret_key_base"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"secret_key_base\" => secret_key_base, \"host\" => host, \"port\" => port, \"asset_host\" => asset_host, \"gzip_enabled\" => gzip_enabled, \"gzip_content_types\" => gzip_content_types}"},"external_var":false}]}]},{"html_id":"lucky/Lucky/ServerSettings","path":"Lucky/ServerSettings.html","kind":"module","full_name":"Lucky::ServerSettings","name":"ServerSettings","abstract":false,"locations":[{"filename":"src/lucky/server_settings.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/server_settings.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"YAML_SETTINGS_PATH","name":"YAML_SETTINGS_PATH","value":"\"./config/watch.yml\""}],"extended_modules":[{"html_id":"lucky/Lucky/ServerSettings","kind":"module","full_name":"Lucky::ServerSettings","name":"ServerSettings"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"host:String-instance-method","name":"host","doc":"The host for your local development.\nDepending on your setup, you may need `localhost`, `127.0.0.1`, or `0.0.0.0`","summary":"<p>The host for your local development.</p>","abstract":false,"location":{"filename":"src/lucky/server_settings.cr","line_number":10,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/server_settings.cr#L10"},"def":{"name":"host","return_type":"String","visibility":"Public","body":"ENV[\"DEV_HOST\"]? || settings[\"host\"].as_s"},"external_var":false},{"html_id":"port:Int32-instance-method","name":"port","doc":"The port to run your local dev server","summary":"<p>The port to run your local dev server</p>","abstract":false,"location":{"filename":"src/lucky/server_settings.cr","line_number":15,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/server_settings.cr#L15"},"def":{"name":"port","return_type":"Int32","visibility":"Public","body":"ENV[\"DEV_PORT\"]?.try(&.to_i) || settings[\"port\"].as_i"},"external_var":false},{"html_id":"reload_port:Int32-instance-method","name":"reload_port","doc":"This is the port the dev watcher service will run on","summary":"<p>This is the port the dev watcher service will run on</p>","abstract":false,"location":{"filename":"src/lucky/server_settings.cr","line_number":20,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/server_settings.cr#L20"},"def":{"name":"reload_port","return_type":"Int32","visibility":"Public","body":"(ENV[\"RELOAD_PORT\"]?.try(&.to_i) || settings[\"reload_port\"]?.try(&.as_i)) || 3001"},"external_var":false},{"html_id":"reload_watch_paths:Array(String)-instance-method","name":"reload_watch_paths","doc":"Watch additional paths for changes","summary":"<p>Watch additional paths for changes</p>","abstract":false,"location":{"filename":"src/lucky/server_settings.cr","line_number":25,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/server_settings.cr#L25"},"def":{"name":"reload_watch_paths","return_type":"Array(String)","visibility":"Public","body":"settings[\"extra_watch_paths\"]?.try() do |__arg3|\n  __arg3.as_a.map(&.as_s)\nend || ([] of String)"},"external_var":false}]},{"html_id":"lucky/Lucky/Session","path":"Lucky/Session.html","kind":"class","full_name":"Lucky::Session","name":"Session","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/cookies/session.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: key : String, example: nil, validation: nil}] of Nil"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/cookies/session.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L7"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"from_cookie_jar(cookie_jar:Lucky::CookieJar):Lucky::Session-class-method","name":"from_cookie_jar","abstract":false,"args":[{"name":"cookie_jar","external_name":"cookie_jar","restriction":"Lucky::CookieJar"}],"args_string":"(cookie_jar : Lucky::CookieJar) : Lucky::Session","args_html":"(cookie_jar : <a href=\"../Lucky/CookieJar.html\">Lucky::CookieJar</a>) : <a href=\"../Lucky/Session.html\">Lucky::Session</a>","location":{"filename":"src/lucky/cookies/session.cr","line_number":11,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L11"},"def":{"name":"from_cookie_jar","args":[{"name":"cookie_jar","external_name":"cookie_jar","restriction":"Lucky::CookieJar"}],"return_type":"Lucky::Session","visibility":"Public","body":"new.tap do |session|\n  (cookie_jar.get?(settings.key)).try do |contents|\n    (JSON.parse(contents)).as_h.each do |key, value|\n      session.set(key, value.as_s)\n    end\n  end\nend"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/cookies/session.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L7"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"instance_methods":[{"html_id":"clear(*args,**options)-instance-method","name":"clear","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/lucky/cookies/session.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L5"},"def":{"name":"clear","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"store.clear(*args, **options)"},"external_var":false},{"html_id":"clear(*args,**options,&)-instance-method","name":"clear","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/lucky/cookies/session.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L5"},"def":{"name":"clear","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"store.clear(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"delete(key:Key):String|Nil-instance-method","name":"delete","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : String | Nil","args_html":"(key : <a href=\"../Lucky/Session/Key.html\">Key</a>) : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/cookies/session.cr","line_number":21,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L21"},"def":{"name":"delete","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"String | ::Nil","visibility":"Public","body":"store.delete(key.to_s)"},"external_var":false},{"html_id":"get(key:Key):String-instance-method","name":"get","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : String","args_html":"(key : <a href=\"../Lucky/Session/Key.html\">Key</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/cookies/session.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L29"},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"String","visibility":"Public","body":"(get?(key)) || (raise(\"No key for '#{key}' in session\"))"},"external_var":false},{"html_id":"get?(key:Key):String|Nil-instance-method","name":"get?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : String | Nil","args_html":"(key : <a href=\"../Lucky/Session/Key.html\">Key</a>) : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/cookies/session.cr","line_number":33,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L33"},"def":{"name":"get?","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"String | ::Nil","visibility":"Public","body":"store[key.to_s]?"},"external_var":false},{"html_id":"set(key:Key,value:String):String-instance-method","name":"set","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(key : Key, value : String) : String","args_html":"(key : <a href=\"../Lucky/Session/Key.html\">Key</a>, value : <a href=\"../String.html\">String</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/cookies/session.cr","line_number":25,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L25"},"def":{"name":"set","args":[{"name":"key","external_name":"key","restriction":"Key"},{"name":"value","external_name":"value","restriction":"String"}],"return_type":"String","visibility":"Public","body":"store[key.to_s] = value"},"external_var":false},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/cookies/session.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L7"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false},{"html_id":"to_json(*args,**options)-instance-method","name":"to_json","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/lucky/cookies/session.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L5"},"def":{"name":"to_json","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"store.to_json(*args, **options)"},"external_var":false},{"html_id":"to_json(*args,**options,&)-instance-method","name":"to_json","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/lucky/cookies/session.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L5"},"def":{"name":"to_json","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"store.to_json(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/Session/HabitatSettings","path":"Lucky/Session/HabitatSettings.html","kind":"class","full_name":"Lucky::Session::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/cookies/session.cr","line_number":7,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L7"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/Session","kind":"class","full_name":"Lucky::Session","name":"Session"},"class_methods":[{"html_id":"key:String-class-method","name":"key","abstract":false,"def":{"name":"key","return_type":"String","visibility":"Public","body":"@@key.not_nil!"},"external_var":false},{"html_id":"key=(value:String)-class-method","name":"key=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../../String.html\">String</a>)","def":{"name":"key=","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@@key = value"},"external_var":false},{"html_id":"key?-class-method","name":"key?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use key in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use key in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"key?","visibility":"Public","body":"@@key"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"key\" => key}"},"external_var":false}]},{"html_id":"lucky/Lucky/Session/Key","path":"Lucky/Session/Key.html","kind":"alias","full_name":"Lucky::Session::Key","name":"Key","abstract":false,"locations":[{"filename":"src/lucky/cookies/session.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/cookies/session.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":true,"aliased":"(String | Symbol)","aliased_html":"<a href=\"../../String.html\">String</a> | Symbol","const":false,"namespace":{"html_id":"lucky/Lucky/Session","kind":"class","full_name":"Lucky::Session","name":"Session"}}]},{"html_id":"lucky/Lucky/SkipRouteStyleCheck","path":"Lucky/SkipRouteStyleCheck.html","kind":"module","full_name":"Lucky::SkipRouteStyleCheck","name":"SkipRouteStyleCheck","abstract":false,"locations":[{"filename":"src/lucky/skip_route_style_check.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/skip_route_style_check.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Include this in an action to skip any style checks on routes","summary":"<p>Include this in an action to skip any style checks on routes</p>","macros":[{"html_id":"enforce_route_style(*args,**named_args)-macro","name":"enforce_route_style","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/lucky/skip_route_style_check.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/skip_route_style_check.cr#L3"},"def":{"name":"enforce_route_style","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":0,"visibility":"Public","body":"    \n# no-op\n\n  \n"}}]},{"html_id":"lucky/Lucky/SpecialtyTags","path":"Lucky/SpecialtyTags.html","kind":"module","full_name":"Lucky::SpecialtyTags","name":"SpecialtyTags","abstract":false,"locations":[{"filename":"src/lucky/tags/specialty_tags.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/specialty_tags.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"canonical_link(href:String):Nil-instance-method","name":"canonical_link","doc":"Generates a canonical link tag to specify the \"canonical\" or \"preferred\"\nversion of a page.","summary":"<p>Generates a canonical link tag to specify the &quot;canonical&quot; or &quot;preferred&quot; version of a page.</p>","abstract":false,"args":[{"name":"href","external_name":"href","restriction":"String"}],"args_string":"(href : String) : Nil","args_html":"(href : <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/specialty_tags.cr","line_number":47,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/specialty_tags.cr#L47"},"def":{"name":"canonical_link","args":[{"name":"href","external_name":"href","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"empty_tag(\"link\", href: href, rel: \"canonical\")"},"external_var":false},{"html_id":"css_link(href,**options):Nil-instance-method","name":"css_link","doc":"Generates a link tag for a stylesheet at the path *href*.\n\nAdditional tag attributes can be passed in keyword arguments via *options*.","summary":"<p>Generates a link tag for a stylesheet at the path <em>href</em>.</p>","abstract":false,"args":[{"name":"href","external_name":"href","restriction":""}],"args_string":"(href, **options) : Nil","args_html":"(href, **options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/specialty_tags.cr","line_number":10,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/specialty_tags.cr#L10"},"def":{"name":"css_link","args":[{"name":"href","external_name":"href","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"Nil","visibility":"Public","body":"options = {href: href, rel: \"stylesheet\", media: \"screen\"}.merge(options)\nempty_tag(\"link\", **options)\n"},"external_var":false},{"html_id":"html_doctype:Nil-instance-method","name":"html_doctype","doc":"Generates an HTML5 doctype tag.","summary":"<p>Generates an HTML5 doctype tag.</p>","abstract":false,"location":{"filename":"src/lucky/tags/specialty_tags.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/specialty_tags.cr#L3"},"def":{"name":"html_doctype","return_type":"Nil","visibility":"Public","body":"view << \"<!DOCTYPE html>\""},"external_var":false},{"html_id":"js_link(src,**options):Nil-instance-method","name":"js_link","doc":"Generates a script tag for a file at path *src*.\n\nAdditional tag attributes can be passed in as keyword arguments via\n*options*.","summary":"<p>Generates a script tag for a file at path <em>src</em>.</p>","abstract":false,"args":[{"name":"src","external_name":"src","restriction":""}],"args_string":"(src, **options) : Nil","args_html":"(src, **options) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/specialty_tags.cr","line_number":19,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/specialty_tags.cr#L19"},"def":{"name":"js_link","args":[{"name":"src","external_name":"src","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"Nil","visibility":"Public","body":"options = {src: src}.merge(options)\ntag(\"script\", **options)\n"},"external_var":false},{"html_id":"nbsp(how_many:Int32=1):Nil-instance-method","name":"nbsp","doc":"Generates an escaped HTML `&nbsp;` entity for the number of times specified\nby `how_many`. By default it generates 1 non-breaking space character.\n\n```\nlink \"Home\", to: Home::Index\nspan do\n  nbsp\n  text \"|\"\n  nbsp\nend\nlink \"About\", to: About::Index\n```\nWould generate `<a href=\"/\">Home</a><span>&nbsp;|&nbsp;</span><a href=\"/about\">About</a>`","summary":"<p>Generates an escaped HTML <code>&amp;nbsp;</code> entity for the number of times specified by <code>how_many</code>.</p>","abstract":false,"args":[{"name":"how_many","default_value":"1","external_name":"how_many","restriction":"Int32"}],"args_string":"(how_many : Int32 = 1) : Nil","args_html":"(how_many : <a href=\"../Int32.html\">Int32</a> = <span class=\"n\">1</span>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/specialty_tags.cr","line_number":80,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/specialty_tags.cr#L80"},"def":{"name":"nbsp","args":[{"name":"how_many","default_value":"1","external_name":"how_many","restriction":"Int32"}],"return_type":"Nil","visibility":"Public","body":"how_many.times do\n  raw(\"&nbsp;\")\nend\nview\n"},"external_var":false},{"html_id":"raw(string:String):Nil-instance-method","name":"raw","doc":"Adds *string* directly to the rendered HTML with no escaping.\n\nFor example,\n```\nraw \"<hopefully-something-safe>\" # Renders \"<hopefully-something-safe>\"\n```\n\nFor custom elements, it's recommended to use the `tag` method.\n\nNOTE: Should **never** be used to render unescaped user-generated data, as\nthis can leave one vulnerable to [cross-site scripting\nattacks](https://en.wikipedia.org/wiki/Cross-site_scripting).","summary":"<p>Adds <em>string</em> directly to the rendered HTML with no escaping.</p>","abstract":false,"args":[{"name":"string","external_name":"string","restriction":"String"}],"args_string":"(string : String) : Nil","args_html":"(string : <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/tags/specialty_tags.cr","line_number":63,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/specialty_tags.cr#L63"},"def":{"name":"raw","args":[{"name":"string","external_name":"string","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"view << string"},"external_var":false},{"html_id":"responsive_meta_tag(**options):Nil-instance-method","name":"responsive_meta_tag","doc":"Generates a meta tag telling browsers to render the page as wide as the\ndevice screen/window and at an initial scale of 1.\n\nOptional keyword arguments can be used to override these defaults, as well\nas specify additional properties. Please refer to [MDN's documentation on\nthe viewport meta tag](https://developer.mozilla.org/en-US/docs/Mozilla/Mobile/Viewport_meta_tag)\nfor usage details.","summary":"<p>Generates a meta tag telling browsers to render the page as wide as the device screen/window and at an initial scale of 1.</p>","abstract":false,"location":{"filename":"src/lucky/tags/specialty_tags.cr","line_number":40,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/specialty_tags.cr#L40"},"def":{"name":"responsive_meta_tag","double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"Nil","visibility":"Public","body":"options = {width: \"device-width\", initial_scale: \"1\"}.merge(options)\nmeta(name: \"viewport\", content: build_viewport_properties(options))\n"},"external_var":false},{"html_id":"utf8_charset:Nil-instance-method","name":"utf8_charset","doc":"Generates a meta tag to specify the character encoding as UTF-8.\n\nIt is highly encouraged to specify the character encoding as early in a\npage's `<head>` as possible as some browsers only look at the first 1024\nbytes to determine the encoding.","summary":"<p>Generates a meta tag to specify the character encoding as UTF-8.</p>","abstract":false,"location":{"filename":"src/lucky/tags/specialty_tags.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/specialty_tags.cr#L29"},"def":{"name":"utf8_charset","return_type":"Nil","visibility":"Public","body":"meta(charset: \"utf-8\")"},"external_var":false}]},{"html_id":"lucky/Lucky/StaticCompressionHandler","path":"Lucky/StaticCompressionHandler.html","kind":"class","full_name":"Lucky::StaticCompressionHandler","name":"StaticCompressionHandler","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/static_compression_handler.cr","line_number":15,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/static_compression_handler.cr#L15"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Middleware that serves static files that have been pre-compressed.\nThere can be multiple instances and the first in the middleware stack will take precedence.\nFor example, if you want to serve brotli compressed assets for browsers that support it and\nserve gzip assets for those that don't you would do something like this in your middleware\nin `src/app_server.cr`:\n\n```\n[\n  # ...\n  Lucky::StaticCompressionHandler.new(\"./public\", file_ext: \"br\", content_encoding: \"br\"),\n  Lucky::StaticCompressionHandler.new(\"./public\", file_ext: \"gz\", content_encoding: \"gzip\"),\n  # ...\n]\n```","summary":"<p>Middleware that serves static files that have been pre-compressed.</p>","constructors":[{"html_id":"new(public_dir:String,file_ext:String=\"gz\",content_encoding:String=\"gzip\")-class-method","name":"new","abstract":false,"args":[{"name":"public_dir","external_name":"public_dir","restriction":"String"},{"name":"file_ext","default_value":"\"gz\"","external_name":"file_ext","restriction":"::String"},{"name":"content_encoding","default_value":"\"gzip\"","external_name":"content_encoding","restriction":"::String"}],"args_string":"(public_dir : String, file_ext : String = \"gz\", content_encoding : String = \"gzip\")","args_html":"(public_dir : <a href=\"../String.html\">String</a>, file_ext : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;gz&quot;</span>, content_encoding : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;gzip&quot;</span>)","location":{"filename":"src/lucky/static_compression_handler.cr","line_number":18,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/static_compression_handler.cr#L18"},"def":{"name":"new","args":[{"name":"public_dir","external_name":"public_dir","restriction":"String"},{"name":"file_ext","default_value":"\"gz\"","external_name":"file_ext","restriction":"::String"},{"name":"content_encoding","default_value":"\"gzip\"","external_name":"content_encoding","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(public_dir, file_ext, content_encoding)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"call(context:HTTP::Server::Context)-instance-method","name":"call","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>)","location":{"filename":"src/lucky/static_compression_handler.cr","line_number":21,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/static_compression_handler.cr#L21"},"def":{"name":"call","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"visibility":"Public","body":"original_path = context.request.path.to_s\nrequest_path = URI.decode(original_path)\nfile_path = File.join(@public_dir, request_path)\ncompressed_path = \"#{file_path}.#{@file_ext}\"\ncontent_type = MIME.from_filename(file_path, \"application/octet-stream\")\n\nif !(should_compress?(file_path, content_type, compressed_path, context.request.headers))\n  call_next(context)\n  return\nend\n\ncontext.response.headers[\"Content-Encoding\"] = @content_encoding\n\nlast_modified = modification_time(compressed_path)\nadd_cache_headers(context.response.headers, last_modified)\n\nif cache_request?(context, last_modified)\n  context.response.status = :not_modified\n  return\nend\n\ncontext.response.content_type = content_type\ncontext.response.content_length = File.size(compressed_path)\nFile.open(compressed_path) do |file|\n  IO.copy(file, context.response)\nend\n"},"external_var":false}]},{"html_id":"lucky/Lucky/StaticFileHandler","path":"Lucky/StaticFileHandler.html","kind":"class","full_name":"Lucky::StaticFileHandler","name":"StaticFileHandler","abstract":false,"superclass":{"html_id":"lucky/HTTP/StaticFileHandler","kind":"class","full_name":"HTTP::StaticFileHandler","name":"StaticFileHandler"},"ancestors":[{"html_id":"lucky/HTTP/StaticFileHandler","kind":"class","full_name":"HTTP::StaticFileHandler","name":"StaticFileHandler"},{"html_id":"lucky/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/charms/static_file_handler.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/static_file_handler.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"call(context:HTTP::Server::Context)-instance-method","name":"call","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>)","location":{"filename":"src/charms/static_file_handler.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/static_file_handler.cr#L4"},"def":{"name":"call","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"visibility":"Public","body":"super(context)"},"external_var":false}]},{"html_id":"lucky/Lucky/Subdomain","path":"Lucky/Subdomain.html","kind":"module","full_name":"Lucky::Subdomain","name":"Subdomain","abstract":false,"ancestors":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"locations":[{"filename":"src/lucky/subdomain.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/subdomain.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: tld_length : Int32 = 1, example: nil, validation: nil}] of Nil"},{"id":"IP_HOST_REGEXP","name":"IP_HOST_REGEXP","value":"/\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/","doc":"Taken from https://github.com/rails/rails/blob/afc6abb674b51717dac39ea4d9e2252d7e40d060/actionpack/lib/action_dispatch/http/url.rb#L8","summary":"<p>Taken from https://github.com/rails/rails/blob/afc6abb674b51717dac39ea4d9e2252d7e40d060/actionpack/lib/action_dispatch/http/url.rb#L8</p>"}],"included_modules":[{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/lucky/subdomain.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/subdomain.cr#L5"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/subdomain.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/subdomain.cr#L5"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"instance_methods":[{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/lucky/subdomain.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/subdomain.cr#L5"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"macros":[{"html_id":"require_subdomain(matcher=true)-macro","name":"require_subdomain","doc":"Sets up a subdomain requirement for an action\n\n```\nrequire_subdomain                                    # subdomain required but can be anything\nrequire_subdomain \"admin\"                            # subdomain required and must equal \"admin\"\nrequire_subdomain /(dev|qa|prod)/                    # subdomain required and must match regex\nrequire_subdomain [\"tenant1\", \"tenant2\", /tenant\\d/] # subdomain required and must match one of the items in the array\n```\n\nThe subdomain can then be accessed from within the route block by calling `subdomain`.\n\nIf you don't want to require a subdomain but still want to check if one is passed\nyou can still call `subdomain?` without using `require_subdomain`.\nJust know that `subdomain?` is nilable.","summary":"<p>Sets up a subdomain requirement for an action</p>","abstract":false,"args":[{"name":"matcher","default_value":"true","external_name":"matcher","restriction":""}],"args_string":"(matcher = true)","args_html":"(matcher = <span class=\"n\">true</span>)","location":{"filename":"src/lucky/subdomain.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/subdomain.cr#L29"},"def":{"name":"require_subdomain","args":[{"name":"matcher","default_value":"true","external_name":"matcher","restriction":""}],"visibility":"Public","body":"    before _match_subdomain\n\n    private def subdomain : String\n      subdomain?.not_nil!\n    \nend\n\n    private def _match_subdomain\n      _match_subdomain(\n{{ matcher }}\n)\n    \nend\n  \n"}}],"types":[{"html_id":"lucky/Lucky/Subdomain/HabitatSettings","path":"Lucky/Subdomain/HabitatSettings.html","kind":"class","full_name":"Lucky::Subdomain::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/subdomain.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/subdomain.cr#L5"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/Subdomain","kind":"module","full_name":"Lucky::Subdomain","name":"Subdomain"},"class_methods":[{"html_id":"tld_length:Int32-class-method","name":"tld_length","abstract":false,"def":{"name":"tld_length","return_type":"Int32","visibility":"Public","body":"@@tld_length.not_nil!"},"external_var":false},{"html_id":"tld_length=(value:Int32)-class-method","name":"tld_length=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : <a href=\"../../Int32.html\">Int32</a>)","def":{"name":"tld_length=","args":[{"name":"value","external_name":"value","restriction":"Int32"}],"visibility":"Public","body":"@@tld_length = value"},"external_var":false},{"html_id":"tld_length?-class-method","name":"tld_length?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use tld_length in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use tld_length in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"tld_length?","visibility":"Public","body":"@@tld_length"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"tld_length\" => tld_length}"},"external_var":false}]},{"html_id":"lucky/Lucky/Subdomain/Matcher","path":"Lucky/Subdomain/Matcher.html","kind":"alias","full_name":"Lucky::Subdomain::Matcher","name":"Matcher","abstract":false,"locations":[{"filename":"src/lucky/subdomain.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/subdomain.cr#L13"}],"repository_name":"lucky","program":false,"enum":false,"alias":true,"aliased":"(Array(Regex | String) | Array(Regex) | Array(String) | Bool | Regex | String)","aliased_html":"Array(Regex | <a href=\"../../String.html\">String</a>) | Array(Regex) | Array(<a href=\"../../String.html\">String</a>) | <a href=\"../../Bool.html\">Bool</a> | Regex | <a href=\"../../String.html\">String</a>","const":false,"namespace":{"html_id":"lucky/Lucky/Subdomain","kind":"module","full_name":"Lucky::Subdomain","name":"Subdomain"}}]},{"html_id":"lucky/Lucky/SvgInliner","path":"Lucky/SvgInliner.html","kind":"module","full_name":"Lucky::SvgInliner","name":"SvgInliner","abstract":false,"locations":[{"filename":"src/lucky/page_helpers/svg_inliner.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/svg_inliner.cr#L1"},{"filename":"src/lucky/page_helpers/svg_inliner.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/svg_inliner.cr#L8"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"macros":[{"html_id":"inline_svg(path,strip_styling=true)-macro","name":"inline_svg","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"strip_styling","default_value":"true","external_name":"strip_styling","restriction":""}],"args_string":"(path, strip_styling = true)","args_html":"(path, strip_styling = <span class=\"n\">true</span>)","location":{"filename":"src/lucky/page_helpers/svg_inliner.cr","line_number":9,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/svg_inliner.cr#L9"},"def":{"name":"inline_svg","args":[{"name":"path","external_name":"path","restriction":""},{"name":"strip_styling","default_value":"true","external_name":"strip_styling","restriction":""}],"visibility":"Public","body":"    \n{%\n  svgs_path = (Lucky::SvgInliner.annotation(Lucky::SvgInliner::Path)).args.first\n  regex = (Lucky::SvgInliner.annotation(Lucky::SvgInliner::StripRegex)).args.first\n  full_path = \"#{svgs_path.id}/#{path.id}\"\n\n  unless file_exists?(full_path)\n    raise(\"SVG file #{full_path.id} is missing\")\n  end\n\n  svg = ((((read_file(full_path)).gsub(/<\\?xml[^>]+>/, \"\")).gsub(/<!--[^>]+>/, \"\")).gsub(/\\n\\s*/, \" \")).strip\n  if strip_styling\n    svg = svg.gsub(regex, \"\")\n  end\n  modifier = strip_styling ? \"\" : \"-styled\"\n%}\n\n\n    raw \n{{ svg.gsub(/<svg/, \"<svg data-inline-svg#{modifier.id}=\\\"#{path.id}\\\"\") }}\n\n  \n"}}],"types":[{"html_id":"lucky/Lucky/SvgInliner/Path","path":"Lucky/SvgInliner/Path.html","kind":"annotation","full_name":"Lucky::SvgInliner::Path","name":"Path","abstract":false,"locations":[{"filename":"src/lucky/page_helpers/svg_inliner.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/svg_inliner.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/SvgInliner","kind":"module","full_name":"Lucky::SvgInliner","name":"SvgInliner"}},{"html_id":"lucky/Lucky/SvgInliner/StripRegex","path":"Lucky/SvgInliner/StripRegex.html","kind":"annotation","full_name":"Lucky::SvgInliner::StripRegex","name":"StripRegex","abstract":false,"locations":[{"filename":"src/lucky/page_helpers/svg_inliner.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/svg_inliner.cr#L3"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/SvgInliner","kind":"module","full_name":"Lucky::SvgInliner","name":"SvgInliner"}}]},{"html_id":"lucky/Lucky/TagDefaults","path":"Lucky/TagDefaults.html","kind":"module","full_name":"Lucky::TagDefaults","name":"TagDefaults","abstract":false,"locations":[{"filename":"src/lucky/tags/tag_defaults.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/tag_defaults.cr#L4"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Set up defaults arguments for HTML tags.\n\nThis is automatically included in Pages and Components.","summary":"<p>Set up defaults arguments for HTML tags.</p>","instance_methods":[{"html_id":"tag_defaults(**named_args,&)-instance-method","name":"tag_defaults","doc":"This is typically used in components and helper methods to set up defaults for\nreusable components.\n\nExample in a page or component:\n\n   tag_defaults field: form.email, class: \"input\" do |tag_builder|\n     tag_builder.email_input placeholder: \"Email\"\n   end\n\nIs the same as:\n\n    email_input field: form.email, class: \"input\", placeholder: \"Email\"","summary":"<p>This is typically used in components and helper methods to set up defaults for reusable components.</p>","abstract":false,"location":{"filename":"src/lucky/tags/tag_defaults.cr","line_number":17,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/tag_defaults.cr#L17"},"def":{"name":"tag_defaults","double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"yields":1,"block_arity":1,"visibility":"Public","body":"OptionMerger.new(page_context: self, named_args: named_args).run do |tag_builder|\n  yield tag_builder\nend"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/TagDefaults/OptionMerger","path":"Lucky/TagDefaults/OptionMerger.html","kind":"class","full_name":"Lucky::TagDefaults::OptionMerger(T, V)","name":"OptionMerger","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/tags/tag_defaults.cr","line_number":23,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/tag_defaults.cr#L23"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/TagDefaults","kind":"module","full_name":"Lucky::TagDefaults","name":"TagDefaults"},"constructors":[{"html_id":"new(page_context:T,named_args:V)-class-method","name":"new","abstract":false,"args":[{"name":"page_context","external_name":"page_context","restriction":"T"},{"name":"named_args","external_name":"named_args","restriction":"V"}],"args_string":"(page_context : T, named_args : V)","args_html":"(page_context : T, named_args : V)","location":{"filename":"src/lucky/tags/tag_defaults.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/tag_defaults.cr#L24"},"def":{"name":"new","args":[{"name":"page_context","external_name":"page_context","restriction":"T"},{"name":"named_args","external_name":"named_args","restriction":"V"}],"visibility":"Public","body":"_ = OptionMerger(T, V).allocate\n_.initialize(page_context, named_args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"run(&)-instance-method","name":"run","abstract":false,"location":{"filename":"src/lucky/tags/tag_defaults.cr","line_number":27,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/tag_defaults.cr#L27"},"def":{"name":"run","yields":1,"block_arity":1,"visibility":"Public","body":"yield self"},"external_var":false}],"macros":[{"html_id":"method_missing(call)-macro","name":"method_missing","abstract":false,"args":[{"name":"call","external_name":"call","restriction":""}],"args_string":"(call)","args_html":"(call)","location":{"filename":"src/lucky/tags/tag_defaults.cr","line_number":31,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/tags/tag_defaults.cr#L31"},"def":{"name":"method_missing","args":[{"name":"call","external_name":"call","restriction":""}],"visibility":"Public","body":"      overridden_html_class = nil\n\n      \n{% named_args = call.named_args %}\n\n      \n{% if named_args %}\n        {% if call.named_args.any? do |arg|\n  arg.name == (:class)\nend %}\n          {% raise(\"\\n\\nUse 'replace_class' or 'append_class' instead of 'class'.\\n\\nCorrect example:\\n\\n    tag_defaults class: \\\"default\\\" do |tag_builder|\\n      # Use 'replace_class' or 'append_class' here\\n      tag_builder.div replace_class: \\\"replaced\\\"\\n    end\\n\\nIncorrect example:\\n\\n    tag_defaults class: \\\"default\\\" do |tag_builder|\\n      # Won't work with 'class'\\n      tag_builder.div class: \\\"replaced\\\"\\n    end\\n\\n-----------------\\n\")\n%}\n        {% end %}\n\n        {% appended_class_arg = call.named_args.find do |arg|\n  arg.name == (:append_class)\nend %}\n        {% if appended_class_arg %}\n          original_class = if klass = @named_args[:class]?\n            # Append an empty space if there is a default class that\n            # we are appending to\n            \"#{klass} \"\n          else\n            # Otherwise leave it empty\n            \"\"\n          end\n\n          overridden_html_class = \"#{original_class}#{{{ appended_class_arg.value }}}\"\n        {% end %}\n        {% named_args = named_args.reject do |arg|\n  arg.name == (:append_class)\nend %}\n\n        {% replace_class_arg = call.named_args.find do |arg|\n  arg.name == (:replace_class)\nend %}\n        {% if replace_class_arg %}\n          overridden_html_class = \"#{{{ replace_class_arg.value }}}\"\n        {% end %}\n        {% named_args = named_args.reject do |arg|\n  arg.name == (:replace_class)\nend %}\n      {% end %}\n\n\n      nargs = @named_args\n{% if named_args %}.merge({{ named_args.splat }})\n\n      # If there is no default class and we want to append/replace one, then\n      # the compiler blows up because the @named_args type is a Union. Where\n      # one type has the 'class' key and the other doesn't.\n      #\n      # We fix that by making sure there is always a class key if we try to\n      # append/replace a class.\n      {% if appended_class_arg || replace_class_arg %}\n        nargs = nargs.merge(class: \"\")\n      {% end %}\n\n      if overridden_html_class\n        nargs = nargs.merge(class: overridden_html_class)\n      end\n      {% end %}\n\n\n      args = Tuple.new(\n{% if call.args %}\n        {% for arg in call.args %}\n          {{ arg }},\n        {% end %}\n      {% end %}\n)\n\n      @page_context.\n{{ call.name }}\n *args, **nargs  \n{{ call.block }}\n\n    \n"}}]}]},{"html_id":"lucky/Lucky/TextHelpers","path":"Lucky/TextHelpers.html","kind":"module","full_name":"Lucky::TextHelpers","name":"TextHelpers","abstract":false,"locations":[{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"These helper methods will return a `String`.","summary":"<p>These helper methods will return a <code><a href=\"../String.html\">String</a></code>.</p>","instance_methods":[{"html_id":"current_cycle(name:String=\"default\"):String|Nil-instance-method","name":"current_cycle","abstract":false,"args":[{"name":"name","default_value":"\"default\"","external_name":"name","restriction":"String"}],"args_string":"(name : String = \"default\") : String | Nil","args_html":"(name : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;default&quot;</span>) : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":174,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L174"},"def":{"name":"current_cycle","args":[{"name":"name","default_value":"\"default\"","external_name":"name","restriction":"String"}],"return_type":"String | ::Nil","visibility":"Public","body":"cycle = get_cycle(name)\nif cycle\n  cycle.current_value\nend\n"},"external_var":false},{"html_id":"cycle(values:Array,name=\"default\"):String-instance-method","name":"cycle","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array"},{"name":"name","default_value":"\"default\"","external_name":"name","restriction":""}],"args_string":"(values : Array, name = \"default\") : String","args_html":"(values : Array, name = <span class=\"s\">&quot;default&quot;</span>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":160,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L160"},"def":{"name":"cycle","args":[{"name":"values","external_name":"values","restriction":"Array"},{"name":"name","default_value":"\"default\"","external_name":"name","restriction":""}],"return_type":"String","visibility":"Public","body":"values = normalize_values(values)\ncycle = get_cycle(name)\nif cycle && (cycle.values == values)\nelse\n  cycle = set_cycle(name, Cycle.new(values))\nend\ncycle.to_s\n"},"external_var":false},{"html_id":"cycle(*values,name:String=\"default\"):String-instance-method","name":"cycle","abstract":false,"args":[{"name":"values","external_name":"values","restriction":""},{"name":"name","default_value":"\"default\"","external_name":"name","restriction":"String"}],"args_string":"(*values, name : String = \"default\") : String","args_html":"(*values, name : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;default&quot;</span>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":169,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L169"},"def":{"name":"cycle","args":[{"name":"values","external_name":"values","restriction":""},{"name":"name","default_value":"\"default\"","external_name":"name","restriction":"String"}],"splat_index":0,"return_type":"String","visibility":"Public","body":"values = normalize_values(values)\ncycle(values, name: name)\n"},"external_var":false},{"html_id":"excerpt(text:String,phrase:Regex|String,separator:String=\"\",radius:Int32=100,omission:String=\"...\"):String-instance-method","name":"excerpt","doc":"Grab a window of longer string\n\nYou'll need to specify a `phrase` to center on, either a Regex or a String.\n\nOptionally:\n* A `radius` (default: `100`) which controls how many units out from the\n`phrase` on either side the excerpt will be.\n* A `separator` (default `\"\"`) which controls what the `radius` will count.\nThe unit by default is any character, which means the default is 100\ncharacter from the `phrase` in either direction. For example, an excerpt of # 10 words would use a `radius` of 10 and a `separator` of `\" \"`.\n* An `omission` string (default: `\"...\"`), which prepends and appends to\nthe excerpt.\n\n```\nlyrics = \"We represent the Lolly pop Guild, The Lolly pop Guild\"\nexcerpt(text, phrase: \"Guild\", radius: 10)\n```\noutputs:\n```html\n...Lolly pop Guild, The Loll...\n```","summary":"<p>Grab a window of longer string</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"phrase","external_name":"phrase","restriction":"Regex | String"},{"name":"separator","default_value":"\"\"","external_name":"separator","restriction":"String"},{"name":"radius","default_value":"100","external_name":"radius","restriction":"Int32"},{"name":"omission","default_value":"\"...\"","external_name":"omission","restriction":"String"}],"args_string":"(text : String, phrase : Regex | String, separator : String = \"\", radius : Int32 = 100, omission : String = \"...\") : String","args_html":"(text : <a href=\"../String.html\">String</a>, phrase : Regex | <a href=\"../String.html\">String</a>, separator : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, radius : <a href=\"../Int32.html\">Int32</a> = <span class=\"n\">100</span>, omission : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;...&quot;</span>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":54,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L54"},"def":{"name":"excerpt","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"phrase","external_name":"phrase","restriction":"Regex | String"},{"name":"separator","default_value":"\"\"","external_name":"separator","restriction":"String"},{"name":"radius","default_value":"100","external_name":"radius","restriction":"Int32"},{"name":"omission","default_value":"\"...\"","external_name":"omission","restriction":"String"}],"return_type":"String","visibility":"Public","body":"if text.nil? || text.to_s.blank?\n  return \"\"\nend\n\ncase phrase\nwhen Regex\n  regex = phrase\nelse\n  regex = /#{Regex.escape(phrase.to_s)}/i\nend\nif matches = text.match(regex)\nelse\n  return \"\"\nend\nphrase = matches[0]\n\nif separator.empty?\nelse\n  (text.split(separator)).each do |value|\n    if value.match(regex)\n      phrase = value\n      break\n    end\n  end\nend\n\nfirst_part, second_part = text.split(phrase, 2)\n\nprefix, first_part = cut_excerpt_part(:first, first_part, separator, radius, omission)\npostfix, second_part = cut_excerpt_part(:second, second_part, separator, radius, omission)\n\naffix = [first_part, separator, phrase, separator, second_part].join.strip\n[prefix, affix, postfix].join\n"},"external_var":false},{"html_id":"pluralize(count:Int|String|Nil,singular:String,plural=nil):String-instance-method","name":"pluralize","doc":"It pluralizes `singular` unless `count` is 1. You can specify the `plural` option\nto override the chosen plural word.","summary":"<p>It pluralizes <code>singular</code> unless <code>count</code> is 1.</p>","abstract":false,"args":[{"name":"count","external_name":"count","restriction":"Int | String | Nil"},{"name":"singular","external_name":"singular","restriction":"String"},{"name":"plural","default_value":"nil","external_name":"plural","restriction":""}],"args_string":"(count : Int | String | Nil, singular : String, plural = nil) : String","args_html":"(count : Int | <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>, singular : <a href=\"../String.html\">String</a>, plural = <span class=\"n\">nil</span>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":89,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L89"},"def":{"name":"pluralize","args":[{"name":"count","external_name":"count","restriction":"Int | String | Nil"},{"name":"singular","external_name":"singular","restriction":"String"},{"name":"plural","default_value":"nil","external_name":"plural","restriction":""}],"return_type":"String","visibility":"Public","body":"word = if (count == 1) || (count =~ (/^1(\\.0+)?$/))\n  singular\nelse\n  plural || (Wordsmith::Inflector.pluralize(singular))\nend\n\n\"#{count || 0} #{word}\"\n"},"external_var":false},{"html_id":"reset_cycle(name:String=\"default\"):Int32|Nil-instance-method","name":"reset_cycle","abstract":false,"args":[{"name":"name","default_value":"\"default\"","external_name":"name","restriction":"String"}],"args_string":"(name : String = \"default\") : Int32 | Nil","args_html":"(name : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;default&quot;</span>) : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":179,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L179"},"def":{"name":"reset_cycle","args":[{"name":"name","default_value":"\"default\"","external_name":"name","restriction":"String"}],"return_type":"Int32 | ::Nil","visibility":"Public","body":"cycle = get_cycle(name)\nif cycle\n  cycle.reset\nend\n"},"external_var":false},{"html_id":"reset_cycles:Hash(String,Cycle)-instance-method","name":"reset_cycles","abstract":false,"location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":228,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L228"},"def":{"name":"reset_cycles","return_type":"Hash(String, Cycle)","visibility":"Public","body":"@@_cycles = Hash(String, Cycle).new"},"external_var":false},{"html_id":"to_sentence(list:Enumerable,word_connector:String=\",\",two_word_connector:String=\"and\",last_word_connector:String=\",and\"):String-instance-method","name":"to_sentence","doc":"Creates a comma-separated sentence from the provided `Enumerable` *list*\nand appends it to the view.\n\n#### Options:\n\nThe following options allow you to specify how the sentence is constructed:\n  - *word_connector* - A string used to join the elements in *list*s\ncontaining three or more elements (Default is \", \")\n  - *two_word_connector* - A string used to join the elements in *list*s\ncontaining exactly two elements (Default is \" and \")\n  - *last_word_connector* - A string used to join the last element in\n*list*s containing three or more elements (Default is \", and \")\n\n#### Examples:\n\n    to_sentence([] of String)            # => \"\"\n    to_sentence([1])                     # => \"1\"\n    to_sentence([\"one\", \"two\"])          # => \"one and two\"\n    to_sentence({\"one\", \"two\", \"three\"}) # => \"one, two, and three\"\n\n    to_sentence([\"one\", \"two\", \"three\"], word_connector: \" + \")\n    # => one + two, and three\n\n    to_sentence(Set{\"a\", \"z\"}, two_word_connector: \" to \")\n    # => a to z\n\n    to_sentence(1..3, last_word_connector: \", or \")\n    # => 1, 2, or 3\n\nNOTE: By default `#to_sentence` will include a\n[serial comma](https://en.wikipedia.org/wiki/Serial_comma). This can be\noverridden like so:\n\n    to_sentence([\"one\", \"two\", \"three\"], last_word_connector: \" and \")\n    # => one, two and three","summary":"<p>Creates a comma-separated sentence from the provided <code>Enumerable</code> <em>list</em> and appends it to the view.</p>","abstract":false,"args":[{"name":"list","external_name":"list","restriction":"Enumerable"},{"name":"word_connector","default_value":"\", \"","external_name":"word_connector","restriction":"String"},{"name":"two_word_connector","default_value":"\" and \"","external_name":"two_word_connector","restriction":"String"},{"name":"last_word_connector","default_value":"\", and \"","external_name":"last_word_connector","restriction":"String"}],"args_string":"(list : Enumerable, word_connector : String = \", \", two_word_connector : String = \" and \", last_word_connector : String = \", and \") : String","args_html":"(list : Enumerable, word_connector : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;, &quot;</span>, two_word_connector : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot; and &quot;</span>, last_word_connector : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;, and &quot;</span>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":141,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L141"},"def":{"name":"to_sentence","args":[{"name":"list","external_name":"list","restriction":"Enumerable"},{"name":"word_connector","default_value":"\", \"","external_name":"word_connector","restriction":"String"},{"name":"two_word_connector","default_value":"\" and \"","external_name":"two_word_connector","restriction":"String"},{"name":"last_word_connector","default_value":"\", and \"","external_name":"last_word_connector","restriction":"String"}],"return_type":"String","visibility":"Public","body":"list = list.to_a\n\nif list.size < 3\n  return list.join(two_word_connector)\nend\n\n\"#{list[0..-2].join(word_connector)}#{last_word_connector}#{list.last}\"\n"},"external_var":false},{"html_id":"truncate_text(text:String,length:Int32=30,omission:String=\"...\",separator:String|Nil=nil):String-instance-method","name":"truncate_text","doc":"Shorten text after a length point.\n\nUnlike `truncate`, this method can be used inside of other tags because it\nreturns a String. See `truncate` method for argument documentation.\n\n```\nlink \"#\" do\n  text truncate_text(\"Four score and seven years ago\", length: 27)\nend\n```\noutputs:\n```html\n<a href=\\\"#\\\">Four score and se...</a>\n```","summary":"<p>Shorten text after a length point.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"length","default_value":"30","external_name":"length","restriction":"Int32"},{"name":"omission","default_value":"\"...\"","external_name":"omission","restriction":"String"},{"name":"separator","default_value":"nil","external_name":"separator","restriction":"String | Nil"}],"args_string":"(text : String, length : Int32 = 30, omission : String = \"...\", separator : String | Nil = nil) : String","args_html":"(text : <a href=\"../String.html\">String</a>, length : <a href=\"../Int32.html\">Int32</a> = <span class=\"n\">30</span>, omission : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;...&quot;</span>, separator : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":19,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L19"},"def":{"name":"truncate_text","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"length","default_value":"30","external_name":"length","restriction":"Int32"},{"name":"omission","default_value":"\"...\"","external_name":"omission","restriction":"String"},{"name":"separator","default_value":"nil","external_name":"separator","restriction":"String | Nil"}],"return_type":"String","visibility":"Public","body":"if text.size > length\nelse\n  return text\nend\n\nlength_with_room_for_omission = length - omission.size\nstop = if separator\n  (text.rindex(separator, length_with_room_for_omission)) || length_with_room_for_omission\nelse\n  length_with_room_for_omission\nend\n\n\"#{text[0, stop]}#{omission}\"\n"},"external_var":false},{"html_id":"word_wrap(text:String,line_width:Int32=80,break_sequence:String=\"\\n\"):String-instance-method","name":"word_wrap","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"line_width","default_value":"80","external_name":"line_width","restriction":"Int32"},{"name":"break_sequence","default_value":"\"\\n\"","external_name":"break_sequence","restriction":"String"}],"args_string":"(text : String, line_width : Int32 = 80, break_sequence : String = \"\\n\") : String","args_html":"(text : <a href=\"../String.html\">String</a>, line_width : <a href=\"../Int32.html\">Int32</a> = <span class=\"n\">80</span>, break_sequence : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;\\n&quot;</span>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":99,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L99"},"def":{"name":"word_wrap","args":[{"name":"text","external_name":"text","restriction":"String"},{"name":"line_width","default_value":"80","external_name":"line_width","restriction":"Int32"},{"name":"break_sequence","default_value":"\"\\n\"","external_name":"break_sequence","restriction":"String"}],"return_type":"String","visibility":"Public","body":"text = (text.split(\"\\n\")).map do |line|\n  line.size > line_width ? (line.gsub(/(.{1,#{line_width}})(\\s+|$)/, \"\\\\1#{break_sequence}\")).strip : line\nend\ntext.join(break_sequence)\n"},"external_var":false}],"types":[{"html_id":"lucky/Lucky/TextHelpers/Cycle","path":"Lucky/TextHelpers/Cycle.html","kind":"class","full_name":"Lucky::TextHelpers::Cycle","name":"Cycle","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":184,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L184"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky/TextHelpers","kind":"module","full_name":"Lucky::TextHelpers","name":"TextHelpers"},"constructors":[{"html_id":"new(values:Array(String))-class-method","name":"new","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(String)"}],"args_string":"(values : Array(String))","args_html":"(values : Array(<a href=\"../../String.html\">String</a>))","location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":196,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L196"},"def":{"name":"new","args":[{"name":"values","external_name":"values","restriction":"Array(String)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(*values)-class-method","name":"new","abstract":false,"args":[{"name":"values","external_name":"values","restriction":""}],"args_string":"(*values)","args_html":"(*values)","location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":189,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L189"},"def":{"name":"new","args":[{"name":"values","external_name":"values","restriction":""}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(*values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"current_value:String-instance-method","name":"current_value","abstract":false,"location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":206,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L206"},"def":{"name":"current_value","return_type":"String","visibility":"Public","body":"@values[previous_index]?.to_s"},"external_var":false},{"html_id":"reset:Int32-instance-method","name":"reset","abstract":false,"location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":202,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L202"},"def":{"name":"reset","return_type":"Int32","visibility":"Public","body":"@index = 0"},"external_var":false},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":210,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L210"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io << @values[@index]?\n@index = next_index\n"},"external_var":false},{"html_id":"values:Array(String)-instance-method","name":"values","abstract":false,"location":{"filename":"src/lucky/page_helpers/text_helpers.cr","line_number":186,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/text_helpers.cr#L186"},"def":{"name":"values","visibility":"Public","body":"@values"},"external_var":false}]}]},{"html_id":"lucky/Lucky/TextResponse","path":"Lucky/TextResponse.html","kind":"class","full_name":"Lucky::TextResponse","name":"TextResponse","abstract":false,"superclass":{"html_id":"lucky/Lucky/Response","kind":"class","full_name":"Lucky::Response","name":"Response"},"ancestors":[{"html_id":"lucky/Lucky/Response","kind":"class","full_name":"Lucky::Response","name":"Response"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/text_response.cr","line_number":10,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/text_response.cr#L10"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_STATUS","name":"DEFAULT_STATUS","value":"200"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Writes the *content_type*, *status*, and *body* to the *context* for text responses.\n\nThere are two settings in `Lucky::Server.settings` that determine if\nthe text response is gzip encoded; `Lucky::Server.settings.gzip_enabled` and `Lucky::Server.settings.gzip_content_types`.\nThese settings can be adjusted in your Lucky app under config/server.cr","summary":"<p>Writes the <em>content_type</em>, <em>status</em>, and <em>body</em> to the <em>context</em> for text responses.</p>","constructors":[{"html_id":"new(context:HTTP::Server::Context,content_type:String,body:String|IO,status:Int32|Nil=nil,debug_message:String|Nil=nil,enable_cookies:Bool=true)-class-method","name":"new","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"content_type","external_name":"content_type","restriction":"String"},{"name":"body","external_name":"body","restriction":"String | IO"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"debug_message","default_value":"nil","external_name":"debug_message","restriction":"String | ::Nil"},{"name":"enable_cookies","default_value":"true","external_name":"enable_cookies","restriction":"Bool"}],"args_string":"(context : HTTP::Server::Context, content_type : String, body : String | IO, status : Int32 | Nil = nil, debug_message : String | Nil = nil, enable_cookies : Bool = true)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>, content_type : <a href=\"../String.html\">String</a>, body : <a href=\"../String.html\">String</a> | IO, status : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, debug_message : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, enable_cookies : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">true</span>)","location":{"filename":"src/lucky/text_response.cr","line_number":16,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/text_response.cr#L16"},"def":{"name":"new","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"content_type","external_name":"content_type","restriction":"String"},{"name":"body","external_name":"body","restriction":"String | IO"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Int32 | ::Nil"},{"name":"debug_message","default_value":"nil","external_name":"debug_message","restriction":"String | ::Nil"},{"name":"enable_cookies","default_value":"true","external_name":"enable_cookies","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(context, content_type, body, status, debug_message, enable_cookies)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"body:IO|String-instance-method","name":"body","abstract":false,"location":{"filename":"src/lucky/text_response.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/text_response.cr#L13"},"def":{"name":"body","visibility":"Public","body":"@body"},"external_var":false},{"html_id":"content_type:String-instance-method","name":"content_type","abstract":false,"location":{"filename":"src/lucky/text_response.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/text_response.cr#L13"},"def":{"name":"content_type","visibility":"Public","body":"@content_type"},"external_var":false},{"html_id":"context:HTTP::Server::Context-instance-method","name":"context","abstract":false,"location":{"filename":"src/lucky/text_response.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/text_response.cr#L13"},"def":{"name":"context","visibility":"Public","body":"@context"},"external_var":false},{"html_id":"debug_message:String|Nil-instance-method","name":"debug_message","abstract":false,"location":{"filename":"src/lucky/text_response.cr","line_number":14,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/text_response.cr#L14"},"def":{"name":"debug_message","return_type":"String | ::Nil","visibility":"Public","body":"@debug_message"},"external_var":false},{"html_id":"enable_cookies:Bool-instance-method","name":"enable_cookies","abstract":false,"location":{"filename":"src/lucky/text_response.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/text_response.cr#L13"},"def":{"name":"enable_cookies","visibility":"Public","body":"@enable_cookies"},"external_var":false},{"html_id":"print:Nil-instance-method","name":"print","abstract":false,"location":{"filename":"src/lucky/text_response.cr","line_number":24,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/text_response.cr#L24"},"def":{"name":"print","return_type":"Nil","visibility":"Public","body":"begin\n  if enable_cookies\n    write_flash\n    write_session\n    write_cookies\n  end\n  context.response.content_type = content_type\n  context.response.status_code = status\n  context.response.headers.add(\"Date\", HTTP.format_time(Time.utc))\n  if should_gzip?\n    gzip\n  end\n  if should_print?\n    context.response.print(body)\n  end\nrescue e : IO::Error\n  Lucky::Log.error(exception: e) do\n    \"Broken Pipe: Maybe the client navigated away?\"\n  end\nend"},"external_var":false},{"html_id":"status:Int-instance-method","name":"status","abstract":false,"location":{"filename":"src/lucky/text_response.cr","line_number":39,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/text_response.cr#L39"},"def":{"name":"status","return_type":"Int","visibility":"Public","body":"(@status || context.response.status_code) || DEFAULT_STATUS"},"external_var":false}]},{"html_id":"lucky/Lucky/TimeHelpers","path":"Lucky/TimeHelpers.html","kind":"module","full_name":"Lucky::TimeHelpers","name":"TimeHelpers","abstract":false,"locations":[{"filename":"src/lucky/page_helpers/time_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/time_helpers.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"distance_of_time_in_words(from:Time,to:Time):String-instance-method","name":"distance_of_time_in_words","doc":"Returns a `String` with approximate distance in time between `from` and `to`.\n\n```\ndistance_of_time_in_words(Time.utc(2019, 8, 14, 10, 0, 0), Time.utc(2019, 8, 14, 10, 0, 5))\n# => \"5 seconds\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14, 10, 0), Time.utc(2019, 8, 14, 10, 25))\n# => \"25 minutes\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14, 10), Time.utc(2019, 8, 14, 11))\n# => \"an hour\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14), Time.utc(2019, 8, 16))\n# => \"2 days\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14), Time.utc(2019, 10, 4))\n# => \"about a month\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14), Time.utc(2061, 10, 4))\n# => \"almost 42 years\"\n```","summary":"<p>Returns a <code><a href=\"../String.html\">String</a></code> with approximate distance in time between <code>from</code> and <code>to</code>.</p>","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"Time"},{"name":"to","external_name":"to","restriction":"Time"}],"args_string":"(from : Time, to : Time) : String","args_html":"(from : Time, to : Time) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/page_helpers/time_helpers.cr","line_number":18,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/time_helpers.cr#L18"},"def":{"name":"distance_of_time_in_words","args":[{"name":"from","external_name":"from","restriction":"Time"},{"name":"to","external_name":"to","restriction":"Time"}],"return_type":"String","visibility":"Public","body":"distance_of_time_in_words(to - from)"},"external_var":false},{"html_id":"distance_of_time_in_words(span:Time::Span):String-instance-method","name":"distance_of_time_in_words","doc":"Returns a `String` with approximate distance in time between `from` and `to`.\n\n```\ndistance_of_time_in_words(Time.utc(2019, 8, 14, 10, 0, 0), Time.utc(2019, 8, 14, 10, 0, 5))\n# => \"5 seconds\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14, 10, 0), Time.utc(2019, 8, 14, 10, 25))\n# => \"25 minutes\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14, 10), Time.utc(2019, 8, 14, 11))\n# => \"an hour\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14), Time.utc(2019, 8, 16))\n# => \"2 days\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14), Time.utc(2019, 10, 4))\n# => \"about a month\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14), Time.utc(2061, 10, 4))\n# => \"almost 42 years\"\n```","summary":"<p>Returns a <code><a href=\"../String.html\">String</a></code> with approximate distance in time between <code>from</code> and <code>to</code>.</p>","abstract":false,"args":[{"name":"span","external_name":"span","restriction":"Time::Span"}],"args_string":"(span : Time::Span) : String","args_html":"(span : Time::Span) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/page_helpers/time_helpers.cr","line_number":23,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/time_helpers.cr#L23"},"def":{"name":"distance_of_time_in_words","args":[{"name":"span","external_name":"span","restriction":"Time::Span"}],"return_type":"String","visibility":"Public","body":"minutes = span.minutes\nseconds = span.seconds\nhours = span.hours\ndays = span.days\n\nif days != 0\n  return distance_in_days(days)\nend\nif hours != 0\n  return distance_in_hours(hours, minutes)\nend\nif minutes != 0\n  return distance_in_minutes(minutes)\nend\n\ndistance_in_seconds(seconds)\n"},"external_var":false},{"html_id":"time_ago_in_words(from:Time):String-instance-method","name":"time_ago_in_words","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"Time"}],"args_string":"(from : Time) : String","args_html":"(from : Time) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/page_helpers/time_helpers.cr","line_number":38,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/time_helpers.cr#L38"},"def":{"name":"time_ago_in_words","args":[{"name":"from","external_name":"from","restriction":"Time"}],"return_type":"String","visibility":"Public","body":"distance_of_time_in_words(from, Time.utc)"},"external_var":false},{"html_id":"time_from_now_in_words(to:Time):String-instance-method","name":"time_from_now_in_words","doc":"Returns a `String` with approximate distance in time between current moment and future date.\n\n```\ntime_from_now_in_words(Time.utc(2022, 8, 30)) # => \"about a year\"\n# gives the same result as:\ndistance_of_time_in_words(Time.utc, Time.utc(2022, 8, 30)) # => \"about a year\"\n```\n\nSee more examples in `#distance_of_time_in_words`.","summary":"<p>Returns a <code><a href=\"../String.html\">String</a></code> with approximate distance in time between current moment and future date.</p>","abstract":false,"args":[{"name":"to","external_name":"to","restriction":"Time"}],"args_string":"(to : Time) : String","args_html":"(to : Time) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/page_helpers/time_helpers.cr","line_number":51,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/time_helpers.cr#L51"},"def":{"name":"time_from_now_in_words","args":[{"name":"to","external_name":"to","restriction":"Time"}],"return_type":"String","visibility":"Public","body":"distance_of_time_in_words(Time.utc, to)"},"external_var":false}]},{"html_id":"lucky/Lucky/UnknownAcceptHeaderError","path":"Lucky/UnknownAcceptHeaderError.html","kind":"class","full_name":"Lucky::UnknownAcceptHeaderError","name":"UnknownAcceptHeaderError","abstract":false,"superclass":{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},"ancestors":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"},{"html_id":"lucky/Lucky/Error","kind":"class","full_name":"Lucky::Error","name":"Error"},{"html_id":"lucky/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/errors.cr","line_number":35,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L35"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"constructors":[{"html_id":"new(request:HTTP::Request)-class-method","name":"new","abstract":false,"args":[{"name":"request","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request)","args_html":"(request : <a href=\"../HTTP/Request.html\">HTTP::Request</a>)","location":{"filename":"src/lucky/errors.cr","line_number":40,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L40"},"def":{"name":"new","args":[{"name":"request","external_name":"request","restriction":"HTTP::Request"}],"visibility":"Public","body":"_ = allocate\n_.initialize(request)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"renderable_message:String-instance-method","name":"renderable_message","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":64,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L64"},"def":{"name":"renderable_message","return_type":"String","visibility":"Public","body":"\"Unrecognized Accept header '#{request.headers[\"Accept\"]?}'.\""},"external_var":false},{"html_id":"renderable_status:Int32-instance-method","name":"renderable_status","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":60,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L60"},"def":{"name":"renderable_status","return_type":"Int32","visibility":"Public","body":"406"},"external_var":false},{"html_id":"request:HTTP::Request-instance-method","name":"request","abstract":false,"location":{"filename":"src/lucky/errors.cr","line_number":38,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/errors.cr#L38"},"def":{"name":"request","visibility":"Public","body":"@request"},"external_var":false}]},{"html_id":"lucky/Lucky/UploadedFile","path":"Lucky/UploadedFile.html","kind":"class","full_name":"Lucky::UploadedFile","name":"UploadedFile","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/uploaded_file.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"This class represents an uploaded file from a form","summary":"<p>This class represents an uploaded file from a form</p>","constructors":[{"html_id":"new(part:HTTP::FormData::Part)-class-method","name":"new","doc":"Creates an UploadedFile using a HTTP::FormData::Part.\n\nThe new file will be assigned the **name** of the\nprovided HTTP::FormData::Part and the **tempfile** will\nbe assigned the body of the HTTP::FormData::Part","summary":"<p>Creates an UploadedFile using a HTTP::FormData::Part.</p>","abstract":false,"args":[{"name":"part","external_name":"part","restriction":"HTTP::FormData::Part"}],"args_string":"(part : HTTP::FormData::Part)","args_html":"(part : HTTP::FormData::Part)","location":{"filename":"src/lucky/uploaded_file.cr","line_number":15,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L15"},"def":{"name":"new","args":[{"name":"part","external_name":"part","restriction":"HTTP::FormData::Part"}],"visibility":"Public","body":"_ = allocate\n_.initialize(part)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","doc":"Tests if the file size is zero.\n\n```\nuploaded_file_object.blank? # => Bool\n```","summary":"<p>Tests if the file size is zero.</p>","abstract":false,"location":{"filename":"src/lucky/uploaded_file.cr","line_number":38,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L38"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":"tempfile.size.zero?"},"external_var":false},{"html_id":"creation_time(*args,**options)-instance-method","name":"creation_time","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/lucky/uploaded_file.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L8"},"def":{"name":"creation_time","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@part.creation_time(*args, **options)"},"external_var":false},{"html_id":"creation_time(*args,**options,&)-instance-method","name":"creation_time","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/lucky/uploaded_file.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L8"},"def":{"name":"creation_time","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@part.creation_time(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"filename:String-instance-method","name":"filename","abstract":false,"location":{"filename":"src/lucky/uploaded_file.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L5"},"def":{"name":"filename","return_type":"String","visibility":"Public","body":"@filename"},"external_var":false},{"html_id":"metadata:HTTP::FormData::FileMetadata-instance-method","name":"metadata","summary":"<p><span class=\"flag red\">DEPRECATED</span>  <code><a href=\"../Lucky/UploadedFile.html#metadata%3AHTTP%3A%3AFormData%3A%3AFileMetadata-instance-method\">#metadata</a></code> deprecated. Each method on metadata is accessible directly on Lucky::UploadedFile</p>","abstract":false,"location":{"filename":"src/lucky/uploaded_file.cr","line_number":43,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L43"},"def":{"name":"metadata","return_type":"HTTP::FormData::FileMetadata","visibility":"Public","body":"HTTP::FormData::FileMetadata.new(filename, creation_time, modification_time, read_time, size)"},"external_var":false},{"html_id":"modification_time(*args,**options)-instance-method","name":"modification_time","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/lucky/uploaded_file.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L8"},"def":{"name":"modification_time","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@part.modification_time(*args, **options)"},"external_var":false},{"html_id":"modification_time(*args,**options,&)-instance-method","name":"modification_time","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/lucky/uploaded_file.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L8"},"def":{"name":"modification_time","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@part.modification_time(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"name(*args,**options)-instance-method","name":"name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/lucky/uploaded_file.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L8"},"def":{"name":"name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@part.name(*args, **options)"},"external_var":false},{"html_id":"name(*args,**options,&)-instance-method","name":"name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/lucky/uploaded_file.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L8"},"def":{"name":"name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@part.name(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"path:String-instance-method","name":"path","doc":"Returns the path of the File as a String\n\n```\nuploaded_file_object.path # => String\n```","summary":"<p>Returns the path of the File as a String</p>","abstract":false,"location":{"filename":"src/lucky/uploaded_file.cr","line_number":29,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L29"},"def":{"name":"path","return_type":"String","visibility":"Public","body":"@tempfile.path"},"external_var":false},{"html_id":"read_time(*args,**options)-instance-method","name":"read_time","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/lucky/uploaded_file.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L8"},"def":{"name":"read_time","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@part.read_time(*args, **options)"},"external_var":false},{"html_id":"read_time(*args,**options,&)-instance-method","name":"read_time","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/lucky/uploaded_file.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L8"},"def":{"name":"read_time","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@part.read_time(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"size(*args,**options)-instance-method","name":"size","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/lucky/uploaded_file.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L8"},"def":{"name":"size","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@part.size(*args, **options)"},"external_var":false},{"html_id":"size(*args,**options,&)-instance-method","name":"size","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/lucky/uploaded_file.cr","line_number":8,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L8"},"def":{"name":"size","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@part.size(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"tempfile:File-instance-method","name":"tempfile","abstract":false,"location":{"filename":"src/lucky/uploaded_file.cr","line_number":6,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/uploaded_file.cr#L6"},"def":{"name":"tempfile","return_type":"File","visibility":"Public","body":"@tempfile"},"external_var":false}]},{"html_id":"lucky/Lucky/UrlHelpers","path":"Lucky/UrlHelpers.html","kind":"module","full_name":"Lucky::UrlHelpers","name":"UrlHelpers","abstract":false,"locations":[{"filename":"src/lucky/page_helpers/url_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/url_helpers.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"instance_methods":[{"html_id":"current_page?(value:String,check_query_params:Bool=false):Bool-instance-method","name":"current_page?","doc":"Tests if the given path matches the current request path.\n\n```\n# Let's say we are visiting https://example.com/shop/products?order=desc&page=1\ncurrent_page?(\"/shop/checkout\")\n# => false\ncurrent_page?(\"/shop/products\")\n# => true\ncurrent_page?(\"/shop/products/\")\n# => true\ncurrent_page?(\"/shop/products?order=desc&page=1\")\n# => true\ncurrent_page?(\"/shop/products\", check_query_params: true)\n# => false\ncurrent_page?(\"/shop/products?order=desc&page=1\", check_query_params: true)\n# => true\ncurrent_page?(\"https://example.com/shop/products\")\n# => true\ncurrent_page?(\"https://example.io/shop/products\")\n# => false\ncurrent_page?(\"https://example.com/shop/products\", check_query_params: true)\n# => false\ncurrent_page?(\"https://example.com/shop/products?order=desc&page=1\")\n# => true\n```","summary":"<p>Tests if the given path matches the current request path.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"},{"name":"check_query_params","default_value":"false","external_name":"check_query_params","restriction":"Bool"}],"args_string":"(value : String, check_query_params : Bool = false) : Bool","args_html":"(value : <a href=\"../String.html\">String</a>, check_query_params : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/lucky/page_helpers/url_helpers.cr","line_number":27,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/url_helpers.cr#L27"},"def":{"name":"current_page?","args":[{"name":"value","external_name":"value","restriction":"String"},{"name":"check_query_params","default_value":"false","external_name":"check_query_params","restriction":"Bool"}],"return_type":"Bool","visibility":"Public","body":"request = context.request\n\nif {\"GET\", \"HEAD\"}.includes?(request.method)\nelse\n  return false\nend\n\nuri = URI.parse(value)\nrequest_uri = URI.parse(request.resource)\npath = uri.path\nresource = request_uri.path\n\nif path == \"/\"\nelse\n  path = path.chomp(\"/\")\n  resource = resource.chomp(\"/\")\nend\n\nif check_query_params\n  path = path + (comparable_query_params(uri.query_params))\n  resource = resource + (comparable_query_params(request_uri.query_params))\nend\n\nif value.match(/^\\w+:\\/\\//)\n  host_with_port = uri.port ? \"#{uri.host}:#{uri.port}\" : uri.host\n  \"#{host_with_port}#{path}\" == \"#{request.headers[\"Host\"]?}#{resource}\"\nelse\n  path == resource\nend\n"},"external_var":false},{"html_id":"current_page?(action:Lucky::Action.class|Lucky::RouteHelper,check_query_params:Bool=false):Bool-instance-method","name":"current_page?","doc":"Tests if the given path matches the current request path.\n\n```\n# Visiting https://example.com/pages/123\ncurrent_page?(Pages::Show.with(123))\n# => true\ncurrent_page?(Posts::Show.with(123))\n# => false\n# Visiting https://example.com/pages\ncurrent_page?(Pages::Index)\n# => true\ncurrent_page?(Blog::Index)\n# => false\n# Visiting https://example.com/pages?page=2\ncurrent_page?(Pages::Index.with)\n# => true\ncurrent_page?(Pages::Index.with(page: 2))\n# => true\ncurrent_page?(Pages::Index.with, check_query_params: true)\n# => false\ncurrent_page?(Pages::Index.with(page: 2), check_query_params: true)\n# => true\n```","summary":"<p>Tests if the given path matches the current request path.</p>","abstract":false,"args":[{"name":"action","external_name":"action","restriction":"Lucky::Action.class | Lucky::RouteHelper"},{"name":"check_query_params","default_value":"false","external_name":"check_query_params","restriction":"Bool"}],"args_string":"(action : Lucky::Action.class | Lucky::RouteHelper, check_query_params : Bool = false) : Bool","args_html":"(action : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Action</span>.<span class=\"k\">class</span> | <a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a>, check_query_params : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/lucky/page_helpers/url_helpers.cr","line_number":81,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/url_helpers.cr#L81"},"def":{"name":"current_page?","args":[{"name":"action","external_name":"action","restriction":"Lucky::Action.class | Lucky::RouteHelper"},{"name":"check_query_params","default_value":"false","external_name":"check_query_params","restriction":"Bool"}],"return_type":"Bool","visibility":"Public","body":"current_page?(action.path, check_query_params)"},"external_var":false},{"html_id":"previous_url(fallback:Lucky::Action.class|Lucky::RouteHelper):String-instance-method","name":"previous_url","doc":"Returns the url of the page that issued the request (the referrer)\nif possible, otherwise redirects to the provided default fallback\nlocation.\n\nThe referrer information is pulled from the 'Referer' header on\nthe request. This is an optional header, and if the request\nis missing this header the *fallback* will be used.\n\nEx. within a Lucky Page, previous_url can be used to provide an href\nto an anchor element that would allow the user to go back.\n```\na \"Back\", href: previous_url(fallback: Users::Index)\n```","summary":"<p>Returns the url of the page that issued the request (the referrer) if possible, otherwise redirects to the provided default fallback location.</p>","abstract":false,"args":[{"name":"fallback","external_name":"fallback","restriction":"Lucky::Action.class | Lucky::RouteHelper"}],"args_string":"(fallback : Lucky::Action.class | Lucky::RouteHelper) : String","args_html":"(fallback : <span class=\"t\">Lucky</span><span class=\"t\">::</span><span class=\"t\">Action</span>.<span class=\"k\">class</span> | <a href=\"../Lucky/RouteHelper.html\">Lucky::RouteHelper</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/lucky/page_helpers/url_helpers.cr","line_number":101,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/page_helpers/url_helpers.cr#L101"},"def":{"name":"previous_url","args":[{"name":"fallback","external_name":"fallback","restriction":"Lucky::Action.class | Lucky::RouteHelper"}],"return_type":"String","visibility":"Public","body":"request = context.request\n\nif referrer_uri = referrer_header\n  referrer_path = (URI.parse(referrer_uri)).path\n  if request.resource == referrer_path\n    return fallback.path\n  end\n  return referrer_uri\nend\n\nfallback.path\n"},"external_var":false}]},{"html_id":"lucky/Lucky/VerifyAcceptsFormat","path":"Lucky/VerifyAcceptsFormat.html","kind":"module","full_name":"Lucky::VerifyAcceptsFormat","name":"VerifyAcceptsFormat","abstract":false,"locations":[{"filename":"src/lucky/verify_accepts_format.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/verify_accepts_format.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"lucky/Lucky/Action","kind":"class","full_name":"Lucky::Action","name":"Action"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"Configure what types of formats your action responds to","summary":"<p>Configure what types of formats your action responds to</p>","instance_methods":[{"html_id":"clients_desired_format:Symbol-instance-method","name":"clients_desired_format","abstract":true,"location":{"filename":"src/lucky/verify_accepts_format.cr","line_number":3,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/verify_accepts_format.cr#L3"},"def":{"name":"clients_desired_format","return_type":"Symbol","visibility":"Public","body":""},"external_var":false}],"macros":[{"html_id":"accepted_formats(formats)-macro","name":"accepted_formats","doc":"Set the single format that the Action accepts.\n\nSame as `accepted_formats` but this one only accepts one format and no\ndefault. If you pass an empty array or more than one format, you must\nuse the other `accepted_formats` so you can tell Lucky what the `default`\nformat should be.\n\nIf something other than the accepted formats are requested, Lucky will raise\na `Lucky::NotAcceptableError` error.\n\n```\n# Default is set to :html since there is just one format\naccepted_formats [:html]\n\n# Raises at compile time because Lucky needs to know which format is the default\naccepted_formats [:html, :json]\n\n# If more than one format is accepted, you must provide the default explicitly\naccepted_formats [:html, :json], default: :html\n```","summary":"<p>Set the single format that the Action accepts.</p>","abstract":false,"args":[{"name":"formats","external_name":"formats","restriction":""}],"args_string":"(formats)","args_html":"(formats)","location":{"filename":"src/lucky/verify_accepts_format.cr","line_number":33,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/verify_accepts_format.cr#L33"},"def":{"name":"accepted_formats","args":[{"name":"formats","external_name":"formats","restriction":""}],"visibility":"Public","body":"    \n{% if !formats.is_a?(ArrayLiteral) %}\n      {% raise(\"#{@type} 'accepted_formats' should be an array of Symbols. Example: [:html, :json]\") %}\n    {% end %}\n\n\n    \n{% if formats.size == 1 %}\n      accepted_formats {{ formats }}, default: {{ formats.first }}\n    {% else %}\n      {% formats.raise(\"#{@type} must pass a default to 'accepted_formats'. Example: accepted_formats [:html, :json], default: :html\") %}\n    {% end %}\n\n  \n"}},{"html_id":"accepted_formats(formats,default)-macro","name":"accepted_formats","doc":"Set what formats the Action accepts.\n\nIf something other than the accepted formats are requested, Lucky will raise\na `Lucky::NotAcceptableError` error.\n\n```\naccepted_formats [:html, :json], default: :json\n```","summary":"<p>Set what formats the Action accepts.</p>","abstract":false,"args":[{"name":"formats","external_name":"formats","restriction":""},{"name":"default","external_name":"default","restriction":""}],"args_string":"(formats, default)","args_html":"(formats, default)","location":{"filename":"src/lucky/verify_accepts_format.cr","line_number":53,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/verify_accepts_format.cr#L53"},"def":{"name":"accepted_formats","args":[{"name":"formats","external_name":"formats","restriction":""},{"name":"default","external_name":"default","restriction":""}],"visibility":"Public","body":"    \n{% if !formats.is_a?(ArrayLiteral) %}\n      {% formats.raise(\"#{@type} 'accepted_formats' should be an array of Symbols. Example: [:html, :json]\") %}\n    {% end %}\n\n\n    \n{% if !default.is_a?(SymbolLiteral) %}\n      {% formats.raise(\"#{@type} default format should be a symbol. Example: :html\") %}\n    {% end %}\n\n\n    def self._accepted_formats : Array(Symbol)\n      \n{{ formats }}\n\n    \nend\n    default_format \n{{ default }}\n\n  \n"}}]},{"html_id":"lucky/Lucky/WelcomePage","path":"Lucky/WelcomePage.html","kind":"class","full_name":"Lucky::WelcomePage","name":"WelcomePage","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Lucky/LiveReloadTag","kind":"module","full_name":"Lucky::LiveReloadTag","name":"LiveReloadTag"},{"html_id":"lucky/Lucky/HTMLPage","kind":"module","full_name":"Lucky::HTMLPage","name":"HTMLPage"},{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Lucky/HTMLBuilder","kind":"module","full_name":"Lucky::HTMLBuilder","name":"HTMLBuilder"},{"html_id":"lucky/Lucky/SvgInliner","kind":"module","full_name":"Lucky::SvgInliner","name":"SvgInliner"},{"html_id":"lucky/Lucky/LiveReloadTag","kind":"module","full_name":"Lucky::LiveReloadTag","name":"LiveReloadTag"},{"html_id":"lucky/Lucky/TagDefaults","kind":"module","full_name":"Lucky::TagDefaults","name":"TagDefaults"},{"html_id":"lucky/Lucky/RenderIfDefined","kind":"module","full_name":"Lucky::RenderIfDefined","name":"RenderIfDefined"},{"html_id":"lucky/Lucky/HelpfulParagraphError","kind":"module","full_name":"Lucky::HelpfulParagraphError","name":"HelpfulParagraphError"},{"html_id":"lucky/Lucky/MountComponent","kind":"module","full_name":"Lucky::MountComponent","name":"MountComponent"},{"html_id":"lucky/Lucky/ForgeryProtectionHelpers","kind":"module","full_name":"Lucky::ForgeryProtectionHelpers","name":"ForgeryProtectionHelpers"},{"html_id":"lucky/Lucky/TimeHelpers","kind":"module","full_name":"Lucky::TimeHelpers","name":"TimeHelpers"},{"html_id":"lucky/Lucky/UrlHelpers","kind":"module","full_name":"Lucky::UrlHelpers","name":"UrlHelpers"},{"html_id":"lucky/Lucky/HTMLTextHelpers","kind":"module","full_name":"Lucky::HTMLTextHelpers","name":"HTMLTextHelpers"},{"html_id":"lucky/Lucky/TextHelpers","kind":"module","full_name":"Lucky::TextHelpers","name":"TextHelpers"},{"html_id":"lucky/Lucky/NumberToCurrency","kind":"module","full_name":"Lucky::NumberToCurrency","name":"NumberToCurrency"},{"html_id":"lucky/Lucky/AssetHelpers","kind":"module","full_name":"Lucky::AssetHelpers","name":"AssetHelpers"},{"html_id":"lucky/Lucky/Assignable","kind":"module","full_name":"Lucky::Assignable","name":"Assignable"},{"html_id":"lucky/Lucky/SpecialtyTags","kind":"module","full_name":"Lucky::SpecialtyTags","name":"SpecialtyTags"},{"html_id":"lucky/Lucky/FormHelpers","kind":"module","full_name":"Lucky::FormHelpers","name":"FormHelpers"},{"html_id":"lucky/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"lucky/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"lucky/Lucky/LinkHelpers","kind":"module","full_name":"Lucky::LinkHelpers","name":"LinkHelpers"},{"html_id":"lucky/Lucky/CustomTags","kind":"module","full_name":"Lucky::CustomTags","name":"CustomTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"},{"html_id":"lucky/Lucky/BaseTags","kind":"module","full_name":"Lucky::BaseTags","name":"BaseTags"},{"html_id":"lucky/Lucky/CheckTagContent","kind":"module","full_name":"Lucky::CheckTagContent","name":"CheckTagContent"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/welcome_page.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/welcome_page.cr#L2"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ASSIGNS","name":"ASSIGNS","value":"[context : HTTP::Server::Context] of Nil"},{"id":"SIGN_UP_ACTION","name":"SIGN_UP_ACTION","value":"SignUps::New"}],"included_modules":[{"html_id":"lucky/Lucky/HTMLPage","kind":"module","full_name":"Lucky::HTMLPage","name":"HTMLPage"},{"html_id":"lucky/Lucky/LiveReloadTag","kind":"module","full_name":"Lucky::LiveReloadTag","name":"LiveReloadTag"}],"namespace":{"html_id":"lucky/Lucky","kind":"module","full_name":"Lucky","name":"Lucky"},"doc":"This is the welcome page shown to users when they first initialize a new Lucky project","summary":"<p>This is the welcome page shown to users when they first initialize a new Lucky project</p>","constructors":[{"html_id":"new(context:HTTP::Server::Context,**unused_exposures)-class-method","name":"new","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context, **unused_exposures)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>, **unused_exposures)","def":{"name":"new","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"}],"double_splat":{"name":"unused_exposures","external_name":"unused_exposures","restriction":""},"visibility":"Public","body":"_ = allocate\n_.initialize(context, **unused_exposures)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(context:HTTP::Server::Context,*args,**named_args)-class-method","name":"new","doc":"Accept a context and all other exposed data","summary":"<p>Accept a context and all other exposed data</p>","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"args","external_name":"args","restriction":""}],"args_string":"(context : HTTP::Server::Context, *args, **named_args)","args_html":"(context : <a href=\"../HTTP/Server/Context.html\">HTTP::Server::Context</a>, *args, **named_args)","location":{"filename":"src/lucky/welcome_page.cr","line_number":9,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/welcome_page.cr#L9"},"def":{"name":"new","args":[{"name":"context","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"_ = allocate\n_.initialize(context, *args, **named_args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"render-instance-method","name":"render","doc":"Renders the Welcome Page","summary":"<p>Renders the Welcome Page</p>","abstract":false,"location":{"filename":"src/lucky/welcome_page.cr","line_number":19,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/welcome_page.cr#L19"},"def":{"name":"render","visibility":"Public","body":"html_doctype\nhtml(lang: \"en\") do\n  head do\n    utf8_charset\n    title(\"Welcome to Lucky\")\n    load_lato_font\n    normalize_styles\n    welcome_page_styles\n    live_reload_connect_tag\n  end\n\n  body do\n    div(class: \"container\") do\n      lucky_logo\n      render_buttons\n      render_help\n    end\n  end\nend\n"},"external_var":false}],"macros":[{"html_id":"render_auth_button-macro","name":"render_auth_button","abstract":false,"location":{"filename":"src/lucky/welcome_page.cr","line_number":12,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/lucky/welcome_page.cr#L12"},"def":{"name":"render_auth_button","visibility":"Public","body":"    \n{% if SIGN_UP_ACTION.resolve? %}\n      a \"View your new app\", href: {{ SIGN_UP_ACTION }}.path, class: \"btn\"\n    {% end %}\n\n  \n"}}]}]},{"html_id":"lucky/Nil","path":"Nil.html","kind":"struct","full_name":"Nil","name":"Nil","abstract":false,"superclass":{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/charms/object.cr","line_number":32,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/object.cr#L32"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"doc":"The `Nil` type has only one possible value: `nil`.\n\n`nil` is commonly used to represent the absence of a value.\nFor example, `String#index` returns the position of the character or `nil` if it's not\nin the string:\n\n```\nstr = \"Hello world\"\nstr.index 'e' # => 1\nstr.index 'a' # => nil\n```\n\nIn the above example, trying to invoke a method on the returned value will\ngive a compile time error unless both `Int32` and `Nil` define that method:\n\n```\nstr = \"Hello world\"\nidx = str.index 'e'\nidx + 1 # Error: undefined method '+' for Nil\n```\n\nThe language and the standard library provide short, readable, easy ways to deal with `nil`,\nsuch as `Object#try` and `Object#not_nil!`:\n\n```\nstr = \"Hello world\"\n\n# The index of 'e' in str or 0 if not found\nidx1 = str.index('e') || 0\n\nidx2 = str.index('a')\nif idx2\n  # Compiles: idx2 can't be nil here\n  idx2 + 1\nend\n\n# Tell the compiler that we are sure the returned\n# value is not nil: raises a runtime exception\n# if our assumption doesn't hold.\nidx3 = str.index('o').not_nil!\n```\n\nSee [`Nil` literal](https://crystal-lang.org/reference/syntax_and_semantics/literals/nil.html) in the language reference.","summary":"<p>The <code><a href=\"Nil.html\">Nil</a></code> type has only one possible value: <code>nil</code>.</p>","instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","abstract":false,"location":{"filename":"src/charms/object.cr","line_number":33,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/object.cr#L33"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":"true"},"external_var":false}]},{"html_id":"lucky/Object","path":"Object.html","kind":"class","full_name":"Object","name":"Object","abstract":true,"ancestors":[{"html_id":"lucky/Lucky/Memoizable","kind":"module","full_name":"Lucky::Memoizable","name":"Memoizable"},{"html_id":"lucky/Lucky/QuickDef","kind":"module","full_name":"Lucky::QuickDef","name":"QuickDef"},{"html_id":"lucky/Colorize/ObjectExtensions","kind":"module","full_name":"Colorize::ObjectExtensions","name":"ObjectExtensions"}],"locations":[{"filename":"src/charms/object.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/object.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Colorize/ObjectExtensions","kind":"module","full_name":"Colorize::ObjectExtensions","name":"ObjectExtensions"},{"html_id":"lucky/Lucky/Memoizable","kind":"module","full_name":"Lucky::Memoizable","name":"Memoizable"},{"html_id":"lucky/Lucky/QuickDef","kind":"module","full_name":"Lucky::QuickDef","name":"QuickDef"}],"doc":"`Object` is the base type of all Crystal objects.\n\n## Getters\n\nMultiple macros are available to easily declare, initialize and expose\ninstance variables as well as class variables on an `Object` by generating\nsimple accessor methods.\n\nFor example writing:\n\n```\nclass Person\n  getter name\nend\n```\n\nIs the same as writing:\n\n```\nclass Person\n  def name\n    @name\n  end\nend\n```\n\nSimilarly, we can write `class_getter name` to define a class variable, which\ngenerates a `def self.name` class method returning `@@name`.\n\nWe can define as many variables as necessary in a single call. For example\n`getter name, age, city` will create a getter method for each of `name`, `age`\nand `city`.\n\n### Type and initial value\n\nInstead of plain arguments, we can specify a type as well as an initial value.\nIf the initial value is simple enough Crystal should be able to infer the type\nof the instance or class variable!\n\nSpecifying a type will also declare the instance or class variable with said\ntype and type the accessor method arguments and return type accordingly.\n\nFor example writing:\n\n```\nclass Person\n  getter name : String\n  getter age = 0\n  getter city : String = \"unspecified\"\nend\n```\n\nIs the same as writing:\n\n```\nclass Person\n  @name : String\n  @age = 0\n  @city : String = \"unspecified\"\n\n  def name : String\n    @name\n  end\n\n  def age\n    @age\n  end\n\n  def city : String\n    @city\n  end\nend\n```\n\nThe initial value of an instance variable is automatically set when the object\nis constructed. The initial value of a class variable will be set when the\nprogram starts up.\n\n### Lazy initialization\n\nInstead of eagerly initializing the value, we can lazily initialize it the\nfirst time the accessor method is called.\n\nSince the variable will be lazily initialized the type of the variable will be\na nilable type. The generated method however will return the specified type\nonly (not a nilable).\n\nFor example writing:\n\n```\nclass Person\n  getter(city : City) { City.unspecified }\nend\n```\n\nIs equivalent to writing:\n\n```\nclass Person\n  @city : City?\n\n  def city : City\n    if (city == @city).nil?\n      @city = City.unspecified\n    else\n      city\n    end\n  end\nend\n```\n\n### Variants\n\nPlease refer to the different variants to understand how they differ from the\ngeneral overview presented above:\n\n- `getter`\n- `getter?`\n- `getter!`\n- `class_getter`\n- `class_getter?`\n- `class_getter!`\n\n## Setters\n\nThe `setter` and `class_setter` macros are the write counterparts of the\ngetter macros. They declare `name=(value)` accessor methods. The arguments\nbehave just as for the getter macros. Each setter can have a type as well as\nan initial value. There is no lazy initialization however since the macro\ndoesn't generate a getter method.\n\nFor example writing:\n\n```\nclass Person\n  setter name\n  setter age = 0\n  setter city : String = \"unspecified\"\nend\n```\n\nIs the same as writing:\n\n```\nclass Person\n  @age = 0\n  @city : String = \"unspecified\"\n\n  def name=(@name)\n  end\n\n  def age=(@age)\n  end\n\n  def city=(@city : String) : String\n  end\nend\n```\n\nFor class variables we'd have called `class_setter name` that would have\ngenerated a `def self.name=(@@name)` class method instead.\n\n## Properties\n\nThe property macros define both getter and setter methods at once.\n\nFor example writing:\n\n```\nclass Person\n  property name\nend\n```\n\nIs equivalent to writing:\n\n```\nclass Person\n  getter name\n  setter name\nend\n```\n\nWhich is the same as writing:\n\n```\nclass Person\n  def name\n    @name\n  end\n\n  def name=(@name)\n  end\nend\n```\n\nRefer to [Getters](#getters) and [Setters](#setters) above for details. The\nmacros take the exact same arguments.","summary":"<p><code><a href=\"Object.html\">Object</a></code> is the base type of all Crystal objects.</p>","instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","abstract":false,"location":{"filename":"src/charms/object.cr","line_number":5,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/object.cr#L5"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":"if self.responds_to?(:\"empty?\")\n  self.empty?\nelse\n  false\nend"},"external_var":false},{"html_id":"present?:Bool-instance-method","name":"present?","abstract":false,"location":{"filename":"src/charms/object.cr","line_number":13,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/object.cr#L13"},"def":{"name":"present?","return_type":"Bool","visibility":"Public","body":"!blank?"},"external_var":false}]},{"html_id":"lucky/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lucky/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/charms/string_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/string_extensions.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"doc":"A `String` represents an immutable sequence of UTF-8 characters.\n\nA `String` is typically created with a string literal, enclosing UTF-8 characters\nin double quotes:\n\n```\n\"hello world\"\n```\n\nSee [`String` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/string.html) in the language reference.\n\nA backslash can be used to denote some characters inside the string:\n\n```\n\"\\\"\" # double quote\n\"\\\\\" # backslash\n\"\\e\" # escape\n\"\\f\" # form feed\n\"\\n\" # newline\n\"\\r\" # carriage return\n\"\\t\" # tab\n\"\\v\" # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n\"\\u0041\" # == \"A\"\n```\n\nOr you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):\n\n```\n\"\\u{41}\" # == \"A\"\n```\n\nA string can span multiple lines:\n\n```\n\"hello\n      world\" # same as \"hello\\n      world\"\n```\n\nNote that in the above example trailing and leading spaces, as well as newlines,\nend up in the resulting string. To avoid this, you can split a string into multiple lines\nby joining multiple literals with a backslash:\n\n```\n\"hello \" \\\n\"world, \" \\\n\"no newlines\" # same as \"hello world, no newlines\"\n```\n\nAlternatively, a backslash followed by a newline can be inserted inside the string literal:\n\n```\n\"hello \\\n     world, \\\n     no newlines\" # same as \"hello world, no newlines\"\n```\n\nIn this case, leading whitespace is not included in the resulting string.\n\nIf you need to write a string that has many double quotes, parentheses, or similar\ncharacters, you can use alternative literals:\n\n```\n# Supports double quotes and nested parentheses\n%(hello (\"world\")) # same as \"hello (\\\"world\\\")\"\n\n# Supports double quotes and nested brackets\n%[hello [\"world\"]] # same as \"hello [\\\"world\\\"]\"\n\n# Supports double quotes and nested curlies\n%{hello {\"world\"}} # same as \"hello {\\\"world\\\"}\"\n\n# Supports double quotes and nested angles\n%<hello <\"world\">> # same as \"hello <\\\"world\\\">\"\n```\n\nTo create a `String` with embedded expressions, you can use string interpolation:\n\n```\na = 1\nb = 2\n\"sum = #{a + b}\" # \"sum = 3\"\n```\n\nThis ends up invoking `Object#to_s(IO)` on each expression enclosed by `#{...}`.\n\nIf you need to dynamically build a string, use `String#build` or `IO::Memory`.\n\n### Non UTF-8 valid strings\n\nA string might end up being composed of bytes which form an invalid\nbyte sequence according to UTF-8. This can happen if the string is created\nvia one of the constructors that accept bytes, or when getting a string\nfrom `String.build` or `IO::Memory`. No exception will be raised, but every\nbyte that doesn't start a valid UTF-8 byte sequence is interpreted as though\nit encodes the Unicode replacement character (U+FFFD) by itself. For example:\n\n```\n# here 255 is not a valid byte value in the UTF-8 encoding\nstring = String.new(Bytes[255, 97])\nstring.valid_encoding? # => false\n\n# The first char here is the unicode replacement char\nstring.chars # => ['�', 'a']\n```\n\nOne can also create strings with specific byte value in them by\nusing octal and hexadecimal escape sequences:\n\n```\n# Octal escape sequences\n\"\\101\" # # => \"A\"\n\"\\12\"  # # => \"\\n\"\n\"\\1\"   # string with one character with code point 1\n\"\\377\" # string with one byte with value 255\n\n# Hexadecimal escape sequences\n\"\\x41\" # # => \"A\"\n\"\\xFF\" # string with one byte with value 255\n```\n\nThe reason for allowing strings that don't have a valid UTF-8 sequence\nis that the world is full of content that isn't properly encoded,\nand having a program raise an exception or stop because of this\nis not good. It's better if programs are more resilient, but\nshow a replacement character when there's an error in incoming data.\n\nNote that this interpretation only applies to methods inside Crystal; calling\n`#to_slice` or `#to_unsafe`, e.g. when passing a string to a C library, will\nexpose the invalid UTF-8 byte sequences. In particular, `Regex`'s underlying\nengine may reject strings that are not valid UTF-8, or it may invoke undefined\nbehavior on invalid strings. If this is undesired, `#scrub` could be used to\nremove the offending byte sequences first.","summary":"<p>A <code><a href=\"String.html\">String</a></code> represents an immutable sequence of UTF-8 characters.</p>","instance_methods":[{"html_id":"squish:String-instance-method","name":"squish","doc":"Returns a new string with whitespace and newlines squish to a single space.\n\n`String#squish` strips whitespace at the end of the string, and changes\nconsecutive whitespace groups into one space each. For example, it will\nreplace newlines with a single space and convert mutiple spaces to just one\nspace.","summary":"<p>Returns a new string with whitespace and newlines squish to a single space.</p>","abstract":false,"location":{"filename":"src/charms/string_extensions.cr","line_number":12,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/string_extensions.cr#L12"},"def":{"name":"squish","return_type":"String","visibility":"Public","body":"if ascii_only?\n  squish_ascii\nelse\n  squish_unicode\nend"},"external_var":false},{"html_id":"to_param:String-instance-method","name":"to_param","abstract":false,"location":{"filename":"src/charms/string_extensions.cr","line_number":2,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/string_extensions.cr#L2"},"def":{"name":"to_param","return_type":"String","visibility":"Public","body":"self"},"external_var":false}]},{"html_id":"lucky/UUID","path":"UUID.html","kind":"struct","full_name":"UUID","name":"UUID","abstract":false,"superclass":{"html_id":"lucky/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"lucky/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"},{"html_id":"lucky/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lucky/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"lucky/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lucky/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/charms/uuid_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/uuid_extensions.cr#L1"}],"repository_name":"lucky","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"lucky/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lucky/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"}],"doc":"Represents a UUID (Universally Unique IDentifier).\n\nNOTE: To use `UUID`, you must explicitly import it with `require \"uuid\"`","summary":"<p>Represents a UUID (Universally Unique IDentifier).</p>","instance_methods":[{"html_id":"to_param:String-instance-method","name":"to_param","abstract":false,"location":{"filename":"src/charms/uuid_extensions.cr","line_number":4,"url":"https://github.com/luckyframework/lucky/blob/4299dba376f8709aa53468956e63ab2478364117/src/charms/uuid_extensions.cr#L4"},"def":{"name":"to_param","return_type":"String","visibility":"Public","body":"self.to_s"},"external_var":false}]}]}})